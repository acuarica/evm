{"version":3,"file":"EVM.js","mappings":"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AAM,KAGtBA,EAFAjD,SAASiD,EAAM,IAAIjJ,WAK9B,OAAOiJ,iFClCf,gBACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,WACA,WAEA,UAAe,CACX6P,KAAA,UACA0D,IAAA,UACAC,IAAA,UACAC,IAAA,UACAC,IAAA,UACAC,KAAM,UACNC,IAAA,UACAC,KAAM,UACNC,OAAA,UACAC,OAAA,UACAC,IAAA,UACAC,WAAA,UACAC,GAAA,UACAC,GAAA,UACAC,IAAK,UACLC,IAAK,UACLC,GAAA,UACAC,OAAA,UACAC,IAAA,UACAC,GAAA,UACAC,IAAA,UACAC,IAAA,UACAC,KAAA,UACAC,IAAA,UACAC,IAAA,UACAC,IAAA,UACAC,KAAA,UACAC,QAAA,UACAC,QAAA,UACAC,OAAA,UACAC,OAAA,UACAC,UAAA,UACAC,aAAA,UACAC,aAAA,UACAC,aAAA,UACAC,SAAA,UACAC,SAAA,UACAC,SAAA,UACAC,YAAA,UACAC,YAAA,UACAC,eAAA,UACAC,eAAA,UACAC,YAAA,UACAC,UAAA,UACAC,SAAA,UACAC,UAAA,UACAC,OAAA,UACAC,WAAA,UACAC,SAAA,UACAC,IAAA,UACAC,MAAA,UACAC,OAAA,UACAC,QAAS,UACTC,MAAA,UACAC,OAAA,UACAC,KAAA,UACAC,MAAA,WACAC,GAAA,WACAC,MAAA,WACAC,IAAA,WACArH,SAAA,WACAM,MAAO,WACPgH,MAAO,WACPC,MAAO,WACPC,MAAO,WACPC,MAAO,WACPC,MAAO,WACPC,MAAO,WACPC,MAAO,WACPC,MAAO,WACPC,OAAQ,WA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","sources":["webpack://evm/webpack/universalModuleDefinition","webpack://evm/./node_modules/base64-js/index.js","webpack://evm/./node_modules/big-integer/BigInteger.js","webpack://evm/./node_modules/buffer/index.js","webpack://evm/./node_modules/ieee754/index.js","webpack://evm/./src/classes/evm.class.ts","webpack://evm/./src/classes/stack.class.ts","webpack://evm/./src/classes/tx.class.ts","webpack://evm/./src/index.ts","webpack://evm/./src/opcodes.ts","webpack://evm/./src/opcodes/add.ts","webpack://evm/./src/opcodes/addmod.ts","webpack://evm/./src/opcodes/address.ts","webpack://evm/./src/opcodes/and.ts","webpack://evm/./src/opcodes/balance.ts","webpack://evm/./src/opcodes/blockhash.ts","webpack://evm/./src/opcodes/byte.ts","webpack://evm/./src/opcodes/call.ts","webpack://evm/./src/opcodes/callcode.ts","webpack://evm/./src/opcodes/calldatacopy.ts","webpack://evm/./src/opcodes/calldataload.ts","webpack://evm/./src/opcodes/calldatasize.ts","webpack://evm/./src/opcodes/caller.ts","webpack://evm/./src/opcodes/callvalue.ts","webpack://evm/./src/opcodes/codecopy.ts","webpack://evm/./src/opcodes/codesize.ts","webpack://evm/./src/opcodes/coinbase.ts","webpack://evm/./src/opcodes/create.ts","webpack://evm/./src/opcodes/create2.ts","webpack://evm/./src/opcodes/delegatecall.ts","webpack://evm/./src/opcodes/difficulty.ts","webpack://evm/./src/opcodes/div.ts","webpack://evm/./src/opcodes/dup.ts","webpack://evm/./src/opcodes/eq.ts","webpack://evm/./src/opcodes/exp.ts","webpack://evm/./src/opcodes/extcodecopy.ts","webpack://evm/./src/opcodes/extcodehash.ts","webpack://evm/./src/opcodes/extcodesize.ts","webpack://evm/./src/opcodes/gas.ts","webpack://evm/./src/opcodes/gaslimit.ts","webpack://evm/./src/opcodes/gasprice.ts","webpack://evm/./src/opcodes/gt.ts","webpack://evm/./src/opcodes/invalid.ts","webpack://evm/./src/opcodes/iszero.ts","webpack://evm/./src/opcodes/jump.ts","webpack://evm/./src/opcodes/jumpdest.ts","webpack://evm/./src/opcodes/jumpi.ts","webpack://evm/./src/opcodes/log.ts","webpack://evm/./src/opcodes/lt.ts","webpack://evm/./src/opcodes/mload.ts","webpack://evm/./src/opcodes/mod.ts","webpack://evm/./src/opcodes/msize.ts","webpack://evm/./src/opcodes/mstore.ts","webpack://evm/./src/opcodes/mul.ts","webpack://evm/./src/opcodes/mulmod.ts","webpack://evm/./src/opcodes/not.ts","webpack://evm/./src/opcodes/number.ts","webpack://evm/./src/opcodes/or.ts","webpack://evm/./src/opcodes/origin.ts","webpack://evm/./src/opcodes/pc.ts","webpack://evm/./src/opcodes/pop.ts","webpack://evm/./src/opcodes/push.ts","webpack://evm/./src/opcodes/return.ts","webpack://evm/./src/opcodes/returndatacopy.ts","webpack://evm/./src/opcodes/returndatasize.ts","webpack://evm/./src/opcodes/revert.ts","webpack://evm/./src/opcodes/sar.ts","webpack://evm/./src/opcodes/selfdestruct.ts","webpack://evm/./src/opcodes/sha3.ts","webpack://evm/./src/opcodes/shl.ts","webpack://evm/./src/opcodes/shr.ts","webpack://evm/./src/opcodes/signextend.ts","webpack://evm/./src/opcodes/sload.ts","webpack://evm/./src/opcodes/sstore.ts","webpack://evm/./src/opcodes/staticcall.ts","webpack://evm/./src/opcodes/stop.ts","webpack://evm/./src/opcodes/sub.ts","webpack://evm/./src/opcodes/swap.ts","webpack://evm/./src/opcodes/timestamp.ts","webpack://evm/./src/opcodes/xor.ts","webpack://evm/./src/utils/hex.ts","webpack://evm/./src/utils/opcodes.ts","webpack://evm/./src/utils/stringify.ts","webpack://evm/./src/utils/stringifyEvents.ts","webpack://evm/./src/utils/stringifyFunctions.ts","webpack://evm/./src/utils/stringifyInstructions.ts","webpack://evm/./src/utils/stringifyMappings.ts","webpack://evm/./src/utils/stringifyStructs.ts","webpack://evm/./src/utils/stringifyVariables.ts","webpack://evm/webpack/bootstrap","webpack://evm/webpack/runtime/node module decorator","webpack://evm/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] + (i + 1 < digits.length ? digits[i + 1] / BASE : 0) : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < digits[i]) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// import * as functionHashes from '../../data/functionHashes.json';\n// import * as eventHashes from '../../data/eventHashes.json';\nimport opcodeFunctions from '../utils/opcodes';\nimport stringifyEvents from '../utils/stringifyEvents';\nimport stringifyStructs from '../utils/stringifyStructs';\nimport stringifyMappings from '../utils/stringifyMappings';\nimport stringifyVariables from '../utils/stringifyVariables';\nimport stringifyFunctions from '../utils/stringifyFunctions';\nimport stringifyInstructions from '../utils/stringifyInstructions';\nimport { Stack } from './stack.class';\nimport Event from '../interfaces/event.interface';\nimport Instruction from '../interfaces/instruction.interface';\nimport Mapping from '../interfaces/mapping.interface';\nimport Opcode from '../interfaces/opcode.interface';\nimport Variable from '../interfaces/variable.interface';\nimport {\n    STOP,\n    RETURN,\n    REVERT,\n    INVALID,\n    PUSH1,\n    PUSH32,\n    JUMPDEST,\n    SELFDESTRUCT,\n    codes,\n    names\n} from '../opcodes';\n\nexport class EVM {\n    pc: number = 0;\n    stack: Stack = new Stack();\n    memory: any = {};\n    opcodes: Opcode[] = [];\n    instructions: Instruction[] = [];\n    storage: any = {};\n    jumps: any = {};\n    code: Buffer;\n    mappings: Mapping = {};\n    layer: number = 0;\n    halted: boolean = false;\n    functions: any = {};\n    variables: Variable = {};\n    events: Event = {};\n    gasUsed: number = 0;\n    conditions: any = [];\n\n    constructor(code: string | Buffer, readonly functionHashes: {[s: string]: string}, readonly eventHashes: {[s: string]: string}) {\n        if (code instanceof Buffer) {\n            this.code = code;\n        } else {\n            this.code = Buffer.from(code.replace('0x', ''), 'hex');\n        }\n    }\n\n    clone(): EVM {\n        const clone = new EVM(this.code, this.functionHashes, this.eventHashes);\n        clone.pc = this.pc;\n        clone.opcodes = this.opcodes;\n        clone.stack = this.stack.clone();\n        clone.memory = { ...this.memory };\n        clone.storage = this.storage;\n        clone.jumps = { ...this.jumps };\n        clone.mappings = this.mappings;\n        clone.layer = this.layer + 1;\n        clone.functions = this.functions;\n        clone.variables = this.variables;\n        clone.events = this.events;\n        clone.gasUsed = this.gasUsed;\n        clone.conditions = [...this.conditions];\n        return clone;\n    }\n\n    getBytecode(): string {\n        return '0x' + this.code.toString('hex');\n    }\n\n    getOpcodes(): Opcode[] {\n        if (this.opcodes.length === 0) {\n            for (let index = 0; index < this.code.length; index++) {\n                const currentOp: Opcode = {\n                    pc: index,\n                    opcode: this.code[index],\n                    name: 'INVALID'\n                };\n                if (currentOp.opcode in codes) {\n                    currentOp.name = (codes as any)[this.code[index]];\n                }\n                this.opcodes.push(currentOp);\n                if (currentOp.name.startsWith('PUSH')) {\n                    const pushDataLength = this.code[index] - 0x5f;\n                    const pushData = this.code.slice(index + 1, index + pushDataLength + 1);\n                    currentOp.pushData = pushData;\n                    index += pushDataLength;\n                }\n            }\n        }\n        return this.opcodes;\n    }\n\n    getFunctions(): string[] {\n        return [\n            ...new Set(\n                this.getOpcodes()\n                    .filter(opcode => opcode.name === 'PUSH4')\n                    .map(opcode => (opcode.pushData ? opcode.pushData.toString('hex') : ''))\n                    .filter(hash => hash in this.functionHashes)\n                    .map(hash => (this.functionHashes as any)[hash])\n            )\n        ];\n    }\n\n    getEvents(): string[] {\n        return [\n            ...new Set(\n                this.getOpcodes()\n                    .filter(opcode => opcode.name === 'PUSH32')\n                    .map(opcode => (opcode.pushData ? opcode.pushData.toString('hex') : ''))\n                    .filter(hash => hash in this.eventHashes)\n                    .map(hash => (this.eventHashes as any)[hash])\n            )\n        ];\n    }\n\n    containsOpcode(opcode: number | string): boolean {\n        let halted = false;\n        if (typeof opcode === 'string' && opcode in names) {\n            opcode = (names as any)[opcode];\n        } else if (typeof opcode === 'string') {\n            throw new Error('Invalid opcode provided');\n        }\n        for (let index = 0; index < this.code.length; index++) {\n            const currentOpcode = this.code[index];\n            if (currentOpcode === opcode && !halted) {\n                return true;\n            } else if (currentOpcode === JUMPDEST) {\n                halted = false;\n            } else if ([STOP, RETURN, REVERT, INVALID, SELFDESTRUCT].includes(currentOpcode)) {\n                halted = true;\n            } else if (currentOpcode >= PUSH1 && currentOpcode <= PUSH32) {\n                index += currentOpcode - PUSH1 + 0x01;\n            }\n        }\n        return false;\n    }\n\n    getJumpDestinations(): number[] {\n        return this.getOpcodes()\n            .filter(opcode => opcode.name === 'JUMPDEST')\n            .map(opcode => opcode.pc);\n    }\n\n    getSwarmHash(): string | false {\n        const regex = /a165627a7a72305820([a-f0-9]{64})0029$/;\n        const bytecode = this.getBytecode();\n        const match = bytecode.match(regex);\n        if (match && match[1]) {\n            return 'bzzr://' + match[1];\n        } else {\n            return false;\n        }\n    }\n\n    getABI(): any {\n        const abi: any = [];\n        if (this.instructions.length === 0) {\n            this.parse();\n        }\n        Object.keys(this.functions).forEach((key: string) => {\n            const item: any = abi.push({ type: 'function' });\n            item.name = this.functions[key].label.split('(')[0];\n            item.payable = this.functions[key].payable;\n            item.constant = this.functions[key].constant;\n        });\n    }\n\n    reset(): void {\n        this.pc = 0;\n        this.instructions = [];\n        this.stack.reset();\n        this.memory = {};\n        this.storage = {};\n        this.jumps = {};\n        this.mappings = {};\n        this.functions = {};\n        this.variables = {};\n        this.events = {};\n        this.gasUsed = 0;\n    }\n\n    parse(): Instruction[] {\n        if (this.instructions.length === 0) {\n            const opcodes = this.getOpcodes();\n            for (this.pc; this.pc < opcodes.length && !this.halted; this.pc++) {\n                const opcode = opcodes[this.pc];\n                if (!(opcode.name in opcodeFunctions)) {\n                    throw new Error('Unknown OPCODE: ' + opcode.name);\n                } else {\n                    (opcodeFunctions as any)[opcode.name](opcode, this);\n                }\n            }\n        }\n        return this.instructions;\n    }\n\n    decompile(): string {\n        const instructionTree = this.parse();\n        const events = stringifyEvents(this.events, this.getEvents());\n        const structs = stringifyStructs(this.mappings);\n        const mappings = stringifyMappings(this.mappings);\n        const variables = stringifyVariables(this.variables);\n        const functions = Object.keys(this.functions)\n            .map((functionName: string) =>\n                stringifyFunctions(functionName, this.functions[functionName], this.functionHashes)\n            )\n            .join('');\n        const code = stringifyInstructions(instructionTree);\n        return events + structs + mappings + variables + functions + code;\n    }\n\n    isERC165(): boolean {\n        return ['supportsInterface(bytes4)'].every(v => this.getFunctions().includes(v));\n    }\n}\n","export class Stack {\n    elements: any[];\n\n    constructor() {\n        this.elements = [];\n    }\n\n    push(item: any): void {\n        if (this.elements.length >= 1024) {\n            throw new Error('Stack too deep');\n        } else {\n            this.elements.unshift(item);\n        }\n    }\n\n    pop(): any {\n        if (this.elements.length === 0) {\n            throw new Error('POP with empty stack');\n        } else {\n            return this.elements.shift();\n        }\n    }\n\n    duplicate(position: number): void {\n        if (position < 0 || position > 15) {\n            throw new Error('Unsupported position for duplication operation');\n        } else if (!(position in this.elements)) {\n            throw new Error(\n                \"Invalid duplication operation, provided position wasn't found in stack\"\n            );\n        } else {\n            this.push(this.elements[position]);\n        }\n    }\n\n    swap(secondPosition: number): void {\n        if (secondPosition < 1 || secondPosition > 16) {\n            throw new Error('Unsupported position for swap operation');\n        } else if (!(secondPosition in this.elements)) {\n            throw new Error(\"Invalid swap operation, provided position wasn't found in stack\");\n        } else {\n            const firstValue = this.elements[0];\n            const secondValue = this.elements[secondPosition];\n            this.elements[0] = secondValue;\n            this.elements[secondPosition] = firstValue;\n        }\n    }\n\n    clone(): Stack {\n        const stack = new Stack();\n        stack.elements = [...this.elements];\n        return stack;\n    }\n\n    reset(): void {\n        this.elements = [];\n    }\n}\n","import * as BigNumber from 'big-integer';\n// import * as functionHashes from '../../data/functionHashes.json';\n\nconst parseSingle = (data: any, type: any) => {\n    if (type === 'string') {\n        return '\"' + Buffer.from(data, 'hex').toString('utf8') + '\"';\n    } else if (type === 'address') {\n        return '0x' + data.substring(24);\n    } else if (type === 'uint256' || type === 'uint8') {\n        return BigNumber(data, 16).toString();\n    } else if (type === 'bool') {\n        return (!BigNumber(data, 16).isZero()).toString();\n    } else {\n        return data;\n    }\n};\n\nexport class Transaction {\n    blockHash?: string;\n    blockNumber?: number;\n    from?: string;\n    gas?: number;\n    gasPrice?: number;\n    input?: string;\n    to?: string;\n    value?: number;\n\n    constructor(transactionObject?: any) {\n        if (transactionObject) {\n            if ('blockHash' in transactionObject) {\n                this.blockHash = transactionObject.blockHash;\n            }\n            if ('blockNumber' in transactionObject) {\n                this.blockNumber = transactionObject.blockNumber;\n            }\n            if ('from' in transactionObject) {\n                this.from = transactionObject.from;\n            }\n            if ('gas' in transactionObject) {\n                this.gas = transactionObject.gas;\n            }\n            if ('gasPrice' in transactionObject) {\n                this.gasPrice = transactionObject.gasPrice;\n            }\n            if ('input' in transactionObject) {\n                this.input = transactionObject.input.replace('0x', '');\n            }\n            if ('to' in transactionObject) {\n                this.to = transactionObject.to;\n            }\n            if ('value' in transactionObject) {\n                this.value = transactionObject.value;\n            }\n        }\n    }\n\n    setInput(input: string): void {\n        this.input = input.replace('0x', '');\n    }\n\n    getFunctionHash(): string | false {\n        if (this.input && this.input.length >= 8) {\n            return this.input.substr(0, 8);\n        } else {\n            return false;\n        }\n    }\n\n    getFunction(functionHashes: {[s: string]: string}): string | false {\n        const functionHash = this.getFunctionHash();\n        if (functionHash && functionHash in functionHashes) {\n            return (functionHashes as any)[functionHash];\n        } else {\n            return false;\n        }\n    }\n\n    getFunctionName(functionHashes: {[s: string]: string}): string | false {\n        const rawFunction = this.getFunction(functionHashes);\n        if (rawFunction) {\n            return rawFunction.split('(')[0];\n        } else {\n            return false;\n        }\n    }\n\n    getRawArguments(): string[] {\n        if (this.input && this.input.length >= 70) {\n            return this.input.substr(8).match(/.{1,64}/g)!;\n        } else {\n            return [];\n        }\n    }\n\n    getArguments(functionHashes: {[s: string]: string}, descriptive: boolean = true): string[] {\n        const functionName = this.getFunction(functionHashes);\n        const functionArguments = this.getRawArguments();\n        if (functionName && this.input) {\n            const rawFunctionArguments = functionName\n                .split('(')[1]\n                .slice(0, -1)\n                .split(',');\n            if (\n                rawFunctionArguments.length === 1 &&\n                rawFunctionArguments[0] === '' &&\n                functionArguments.length === 0\n            ) {\n                return [];\n            } else {\n                const result: string[] = [];\n                for (let i = 0; i < rawFunctionArguments.length; i++) {\n                    const functionArgumentType = rawFunctionArguments[i] || 'unknown';\n                    const functionArgument = functionArguments[i];\n                    if (functionArgumentType === 'string') {\n                        const location = BigNumber(functionArgument, 16)\n                            .divide(32)\n                            .toJSNumber();\n                        const length = BigNumber(functionArguments[location], 16)\n                            .multiply(2)\n                            .toJSNumber();\n                        const data = this.input.substring(8).substr((location + 1) * 64, length);\n                        result.push(parseSingle(data, functionArgumentType));\n                    } else {\n                        result.push(parseSingle(functionArgument, functionArgumentType));\n                    }\n                }\n                return result;\n            }\n        } else {\n            return functionArguments;\n        }\n    }\n\n    isContractCreation(): boolean {\n        return this.to === null;\n    }\n}\n","export { Transaction } from './classes/tx.class';\nexport { EVM } from './classes/evm.class';\nexport * from './opcodes';\n","export const STOP = 0x00;\nexport const ADD = 0x01;\nexport const MUL = 0x02;\nexport const SUB = 0x03;\nexport const DIV = 0x04;\nexport const SDIV = 0x05;\nexport const MOD = 0x06;\nexport const SMOD = 0x07;\nexport const ADDMOD = 0x08;\nexport const MULMOD = 0x09;\nexport const EXP = 0x0a;\nexport const SIGNEXTEND = 0x0b;\nexport const LT = 0x10;\nexport const GT = 0x11;\nexport const SLT = 0x12;\nexport const SGT = 0x13;\nexport const EQ = 0x14;\nexport const ISZERO = 0x15;\nexport const AND = 0x16;\nexport const OR = 0x17;\nexport const XOR = 0x18;\nexport const NOT = 0x19;\nexport const BYTE = 0x1a;\nexport const SHL = 0x1b;\nexport const SHR = 0x1c;\nexport const SAR = 0x1d;\nexport const SHA3 = 0x20;\nexport const ADDRESS = 0x30;\nexport const BALANCE = 0x31;\nexport const ORIGIN = 0x32;\nexport const CALLER = 0x33;\nexport const CALLVALUE = 0x34;\nexport const CALLDATALOAD = 0x35;\nexport const CALLDATASIZE = 0x36;\nexport const CALLDATACOPY = 0x37;\nexport const CODESIZE = 0x38;\nexport const CODECOPY = 0x39;\nexport const GASPRICE = 0x3a;\nexport const EXTCODESIZE = 0x3b;\nexport const EXTCODECOPY = 0x3c;\nexport const RETURNDATASIZE = 0x3d;\nexport const RETURNDATACOPY = 0x3e;\nexport const EXTCODEHASH = 0x3f;\nexport const BLOCKHASH = 0x40;\nexport const COINBASE = 0x41;\nexport const TIMESTAMP = 0x42;\nexport const NUMBER = 0x43;\nexport const DIFFICULTY = 0x44;\nexport const GASLIMIT = 0x45;\nexport const POP = 0x50;\nexport const MLOAD = 0x51;\nexport const MSTORE = 0x52;\nexport const MSTORE8 = 0x53;\nexport const SLOAD = 0x54;\nexport const SSTORE = 0x55;\nexport const JUMP = 0x56;\nexport const JUMPI = 0x57;\nexport const PC = 0x58;\nexport const MSIZE = 0x59;\nexport const GAS = 0x5a;\nexport const JUMPDEST = 0x5b;\nexport const PUSH1 = 0x60;\nexport const PUSH2 = 0x61;\nexport const PUSH3 = 0x62;\nexport const PUSH4 = 0x63;\nexport const PUSH5 = 0x64;\nexport const PUSH6 = 0x65;\nexport const PUSH7 = 0x66;\nexport const PUSH8 = 0x67;\nexport const PUSH9 = 0x68;\nexport const PUSH10 = 0x69;\nexport const PUSH11 = 0x6a;\nexport const PUSH12 = 0x6b;\nexport const PUSH13 = 0x6c;\nexport const PUSH14 = 0x6d;\nexport const PUSH15 = 0x6e;\nexport const PUSH16 = 0x6f;\nexport const PUSH17 = 0x70;\nexport const PUSH18 = 0x71;\nexport const PUSH19 = 0x72;\nexport const PUSH20 = 0x73;\nexport const PUSH21 = 0x74;\nexport const PUSH22 = 0x75;\nexport const PUSH23 = 0x76;\nexport const PUSH24 = 0x77;\nexport const PUSH25 = 0x78;\nexport const PUSH26 = 0x79;\nexport const PUSH27 = 0x7a;\nexport const PUSH28 = 0x7b;\nexport const PUSH29 = 0x7c;\nexport const PUSH30 = 0x7d;\nexport const PUSH31 = 0x7e;\nexport const PUSH32 = 0x7f;\nexport const DUP1 = 0x80;\nexport const DUP2 = 0x81;\nexport const DUP3 = 0x82;\nexport const DUP4 = 0x83;\nexport const DUP5 = 0x84;\nexport const DUP6 = 0x85;\nexport const DUP7 = 0x86;\nexport const DUP8 = 0x87;\nexport const DUP9 = 0x88;\nexport const DUP10 = 0x89;\nexport const DUP11 = 0x8a;\nexport const DUP12 = 0x8b;\nexport const DUP13 = 0x8c;\nexport const DUP14 = 0x8d;\nexport const DUP15 = 0x8e;\nexport const DUP16 = 0x8f;\nexport const SWAP1 = 0x90;\nexport const SWAP2 = 0x91;\nexport const SWAP3 = 0x92;\nexport const SWAP4 = 0x93;\nexport const SWAP5 = 0x94;\nexport const SWAP6 = 0x95;\nexport const SWAP7 = 0x96;\nexport const SWAP8 = 0x97;\nexport const SWAP9 = 0x98;\nexport const SWAP10 = 0x99;\nexport const SWAP11 = 0x9a;\nexport const SWAP12 = 0x9b;\nexport const SWAP13 = 0x9c;\nexport const SWAP14 = 0x9d;\nexport const SWAP15 = 0x9e;\nexport const SWAP16 = 0x9f;\nexport const LOG0 = 0xa0;\nexport const LOG1 = 0xa1;\nexport const LOG2 = 0xa2;\nexport const LOG3 = 0xa3;\nexport const LOG4 = 0xa4;\nexport const CREATE = 0xf0;\nexport const CALL = 0xf1;\nexport const CALLCODE = 0xf2;\nexport const RETURN = 0xf3;\nexport const DELEGATECALL = 0xf4;\nexport const CREATE2 = 0xf5;\nexport const STATICCALL = 0xfa;\nexport const REVERT = 0xfd;\nexport const INVALID = 0xfe;\nexport const SELFDESTRUCT = 0xff;\n\nexport const codes = {\n    0x00: 'STOP',\n    0x01: 'ADD',\n    0x02: 'MUL',\n    0x03: 'SUB',\n    0x04: 'DIV',\n    0x05: 'SDIV',\n    0x06: 'MOD',\n    0x07: 'SMOD',\n    0x08: 'ADDMOD',\n    0x09: 'MULMOD',\n    0x0a: 'EXP',\n    0x0b: 'SIGNEXTEND',\n    0x10: 'LT',\n    0x11: 'GT',\n    0x12: 'SLT',\n    0x13: 'SGT',\n    0x14: 'EQ',\n    0x15: 'ISZERO',\n    0x16: 'AND',\n    0x17: 'OR',\n    0x18: 'XOR',\n    0x19: 'NOT',\n    0x1a: 'BYTE',\n    0x1b: 'SHL',\n    0x1c: 'SHR',\n    0x1d: 'SAR',\n    0x20: 'SHA3',\n    0x30: 'ADDRESS',\n    0x31: 'BALANCE',\n    0x32: 'ORIGIN',\n    0x33: 'CALLER',\n    0x34: 'CALLVALUE',\n    0x35: 'CALLDATALOAD',\n    0x36: 'CALLDATASIZE',\n    0x37: 'CALLDATACOPY',\n    0x38: 'CODESIZE',\n    0x39: 'CODECOPY',\n    0x3a: 'GASPRICE',\n    0x3b: 'EXTCODESIZE',\n    0x3c: 'EXTCODECOPY',\n    0x3d: 'RETURNDATASIZE',\n    0x3e: 'RETURNDATACOPY',\n    0x3f: 'EXTCODEHASH',\n    0x40: 'BLOCKHASH',\n    0x41: 'COINBASE',\n    0x42: 'TIMESTAMP',\n    0x43: 'NUMBER',\n    0x44: 'DIFFICULTY',\n    0x45: 'GASLIMIT',\n    0x50: 'POP',\n    0x51: 'MLOAD',\n    0x52: 'MSTORE',\n    0x53: 'MSTORE8',\n    0x54: 'SLOAD',\n    0x55: 'SSTORE',\n    0x56: 'JUMP',\n    0x57: 'JUMPI',\n    0x58: 'PC',\n    0x59: 'MSIZE',\n    0x5a: 'GAS',\n    0x5b: 'JUMPDEST',\n    0x60: 'PUSH1',\n    0x61: 'PUSH2',\n    0x62: 'PUSH3',\n    0x63: 'PUSH4',\n    0x64: 'PUSH5',\n    0x65: 'PUSH6',\n    0x66: 'PUSH7',\n    0x67: 'PUSH8',\n    0x68: 'PUSH9',\n    0x69: 'PUSH10',\n    0x6a: 'PUSH11',\n    0x6b: 'PUSH12',\n    0x6c: 'PUSH13',\n    0x6d: 'PUSH14',\n    0x6e: 'PUSH15',\n    0x6f: 'PUSH16',\n    0x70: 'PUSH17',\n    0x71: 'PUSH18',\n    0x72: 'PUSH19',\n    0x73: 'PUSH20',\n    0x74: 'PUSH21',\n    0x75: 'PUSH22',\n    0x76: 'PUSH23',\n    0x77: 'PUSH24',\n    0x78: 'PUSH25',\n    0x79: 'PUSH26',\n    0x7a: 'PUSH27',\n    0x7b: 'PUSH28',\n    0x7c: 'PUSH29',\n    0x7d: 'PUSH30',\n    0x7e: 'PUSH31',\n    0x7f: 'PUSH32',\n    0x80: 'DUP1',\n    0x81: 'DUP2',\n    0x82: 'DUP3',\n    0x83: 'DUP4',\n    0x84: 'DUP5',\n    0x85: 'DUP6',\n    0x86: 'DUP7',\n    0x87: 'DUP8',\n    0x88: 'DUP9',\n    0x89: 'DUP10',\n    0x8a: 'DUP11',\n    0x8b: 'DUP12',\n    0x8c: 'DUP13',\n    0x8d: 'DUP14',\n    0x8e: 'DUP15',\n    0x8f: 'DUP16',\n    0x90: 'SWAP1',\n    0x91: 'SWAP2',\n    0x92: 'SWAP3',\n    0x93: 'SWAP4',\n    0x94: 'SWAP5',\n    0x95: 'SWAP6',\n    0x96: 'SWAP7',\n    0x97: 'SWAP8',\n    0x98: 'SWAP9',\n    0x99: 'SWAP10',\n    0x9a: 'SWAP11',\n    0x9b: 'SWAP12',\n    0x9c: 'SWAP13',\n    0x9d: 'SWAP14',\n    0x9e: 'SWAP15',\n    0x9f: 'SWAP16',\n    0xa0: 'LOG0',\n    0xa1: 'LOG1',\n    0xa2: 'LOG2',\n    0xa3: 'LOG3',\n    0xa4: 'LOG4',\n    0xf0: 'CREATE',\n    0xf1: 'CALL',\n    0xf2: 'CALLCODE',\n    0xf3: 'RETURN',\n    0xf4: 'DELEGATECALL',\n    0xf5: 'CREATE2',\n    0xfa: 'STATICCALL',\n    0xfd: 'REVERT',\n    0xfe: 'INVALID',\n    0xff: 'SELFDESTRUCT'\n};\n\nexport const names = {\n    STOP: 0x00,\n    ADD: 0x01,\n    MUL: 0x02,\n    SUB: 0x03,\n    DIV: 0x04,\n    SDIV: 0x05,\n    MOD: 0x06,\n    SMOD: 0x07,\n    ADDMOD: 0x08,\n    MULMOD: 0x09,\n    EXP: 0x0a,\n    SIGNEXTEND: 0x0b,\n    LT: 0x10,\n    GT: 0x11,\n    SLT: 0x12,\n    SGT: 0x13,\n    EQ: 0x14,\n    ISZERO: 0x15,\n    AND: 0x16,\n    OR: 0x17,\n    XOR: 0x18,\n    NOT: 0x19,\n    BYTE: 0x1a,\n    SHL: 0x1b,\n    SHR: 0x1c,\n    SAR: 0x1d,\n    SHA3: 0x20,\n    ADDRESS: 0x30,\n    BALANCE: 0x31,\n    ORIGIN: 0x32,\n    CALLER: 0x33,\n    CALLVALUE: 0x34,\n    CALLDATALOAD: 0x35,\n    CALLDATASIZE: 0x36,\n    CALLDATACOPY: 0x37,\n    CODESIZE: 0x38,\n    CODECOPY: 0x39,\n    GASPRICE: 0x3a,\n    EXTCODESIZE: 0x3b,\n    EXTCODECOPY: 0x3c,\n    RETURNDATASIZE: 0x3d,\n    RETURNDATACOPY: 0x3e,\n    EXTCODEHASH: 0x3f,\n    BLOCKHASH: 0x40,\n    COINBASE: 0x41,\n    TIMESTAMP: 0x42,\n    NUMBER: 0x43,\n    DIFFICULTY: 0x44,\n    GASLIMIT: 0x45,\n    POP: 0x50,\n    MLOAD: 0x51,\n    MSTORE: 0x52,\n    MSTORE8: 0x53,\n    SLOAD: 0x54,\n    SSTORE: 0x55,\n    JUMP: 0x56,\n    JUMPI: 0x57,\n    PC: 0x58,\n    MSIZE: 0x59,\n    GAS: 0x5a,\n    JUMPDEST: 0x5b,\n    PUSH1: 0x60,\n    PUSH2: 0x61,\n    PUSH3: 0x62,\n    PUSH4: 0x63,\n    PUSH5: 0x64,\n    PUSH6: 0x65,\n    PUSH7: 0x66,\n    PUSH8: 0x67,\n    PUSH9: 0x68,\n    PUSH10: 0x69,\n    PUSH11: 0x6a,\n    PUSH12: 0x6b,\n    PUSH13: 0x6c,\n    PUSH14: 0x6d,\n    PUSH15: 0x6e,\n    PUSH16: 0x6f,\n    PUSH17: 0x70,\n    PUSH18: 0x71,\n    PUSH19: 0x72,\n    PUSH20: 0x73,\n    PUSH21: 0x74,\n    PUSH22: 0x75,\n    PUSH23: 0x76,\n    PUSH24: 0x77,\n    PUSH25: 0x78,\n    PUSH26: 0x79,\n    PUSH27: 0x7a,\n    PUSH28: 0x7b,\n    PUSH29: 0x7c,\n    PUSH30: 0x7d,\n    PUSH31: 0x7e,\n    PUSH32: 0x7f,\n    DUP1: 0x80,\n    DUP2: 0x81,\n    DUP3: 0x82,\n    DUP4: 0x83,\n    DUP5: 0x84,\n    DUP6: 0x85,\n    DUP7: 0x86,\n    DUP8: 0x87,\n    DUP9: 0x88,\n    DUP10: 0x89,\n    DUP11: 0x8a,\n    DUP12: 0x8b,\n    DUP13: 0x8c,\n    DUP14: 0x8d,\n    DUP15: 0x8e,\n    DUP16: 0x8f,\n    SWAP1: 0x90,\n    SWAP2: 0x91,\n    SWAP3: 0x92,\n    SWAP4: 0x93,\n    SWAP5: 0x94,\n    SWAP6: 0x95,\n    SWAP7: 0x96,\n    SWAP8: 0x97,\n    SWAP9: 0x98,\n    SWAP10: 0x99,\n    SWAP11: 0x9a,\n    SWAP12: 0x9b,\n    SWAP13: 0x9c,\n    SWAP14: 0x9d,\n    SWAP15: 0x9e,\n    SWAP16: 0x9f,\n    LOG0: 0xa0,\n    LOG1: 0xa1,\n    LOG2: 0xa2,\n    LOG3: 0xa3,\n    LOG4: 0xa4,\n    CREATE: 0xf0,\n    CALL: 0xf1,\n    CALLCODE: 0xf2,\n    RETURN: 0xf3,\n    DELEGATECALL: 0xf4,\n    CREATE2: 0xf5,\n    STATICCALL: 0xfa,\n    REVERT: 0xfd,\n    INVALID: 0xfe,\n    SELFDESTRUCT: 0xff\n};\n\nexport default {\n    ...codes,\n    ...names\n};\n","import {EVM} from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class ADD {\n    readonly name: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'ADD';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' + ' + stringify(this.right);\n    }\n\n    get type() {\n        if (this.left.type === this.right.type) {\n            return this.left.type;\n        } else if (!this.left.type && this.right.type) {\n            return this.right.type;\n        } else if (!this.right.type && this.left.type) {\n            return this.left.type;\n        } else {\n            return false;\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    // state.stack.push(\n    //     typeof left === 'bigint' && typeof right === 'bigint' ? left + right\n    //     : typeof left === 'bigint' && left === 0n ? right \n    //     : typeof right === 'bigint' && right === 0n ? left \n    //     : new ADD(left, right)\n    // );\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.add(right));\n    } else if (BigNumber.isInstance(left) && left.isZero()) {\n        state.stack.push(right);\n    } else if (BigNumber.isInstance(right) && right.isZero()) {\n        state.stack.push(left);\n    } else {\n        state.stack.push(new ADD(left, right));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport { ADD } from './add';\nimport { MOD } from './mod';\nimport * as BigNumber from '../../node_modules/big-integer';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    const mod = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right) && BigNumber.isInstance(mod)) {\n        state.stack.push(left.add(right).mod(mod));\n    } else if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(new MOD(left.add(right), mod));\n    } else {\n        state.stack.push(new MOD(new ADD(left, right), mod));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class ADDRESS {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'ADDRESS';\n        this.type = 'address';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'this';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new ADDRESS());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class AND {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'AND';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' && ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.and(right));\n    } else if (BigNumber.isInstance(left) && /^[f]+$/.test(left.toString(16))) {\n        right.size = left.toString(16).length;\n        state.stack.push(right);\n    } else if (BigNumber.isInstance(right) && /^[f]+$/.test(right.toString(16))) {\n        left.size = right.toString(16).length;\n        state.stack.push(left);\n        /*} else if (\n        BigNumber.isInstance(left) &&\n        left.equals('1461501637330902918203684832716283019655932542975')\n    ) {*/\n        /* 2 ** 160 */\n        /*    state.stack.push(right);\n    } else if (\n        BigNumber.isInstance(right) &&\n        right.equals('1461501637330902918203684832716283019655932542975')\n    ) {*/\n        /* 2 ** 160 */\n        /*    state.stack.push(left);*/\n    } else if (\n        BigNumber.isInstance(left) &&\n        right instanceof AND &&\n        BigNumber.isInstance(right.left) &&\n        left.equals(right.left)\n    ) {\n        state.stack.push(right.right);\n    } else {\n        state.stack.push(new AND(left, right));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class BALANCE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly address: any;\n\n    constructor(address: any) {\n        this.name = 'BALANCE';\n        this.wrapped = false;\n        this.address = address;\n    }\n\n    toString() {\n        return stringify(this.address) + '.balance';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const address = state.stack.pop();\n    state.stack.push(new BALANCE(address));\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class BLOCKHASH {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly number: any;\n\n    constructor(blockNumber: any) {\n        this.name = 'BLOCKHASH';\n        this.wrapped = true;\n        this.number = blockNumber;\n    }\n\n    toString() {\n        return 'block.blockhash(' + stringify(this.number) + ')';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const blockNumber = state.stack.pop();\n    state.stack.push(new BLOCKHASH(blockNumber));\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class BYTE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly position: any;\n    readonly data: any;\n\n    constructor(position: any, data: any) {\n        this.name = 'BYTE';\n        this.wrapped = true;\n        this.position = position;\n        this.data = data;\n    }\n\n    toString() {\n        return '(' + stringify(this.data) + ' >> ' + stringify(this.position) + ') & 1';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const position = state.stack.pop();\n    const data = state.stack.pop();\n    if (BigNumber.isInstance(data) && BigNumber.isInstance(position)) {\n        state.stack.push(data.shiftRight(position).and(1));\n    } else {\n        state.stack.push(new BYTE(position, data));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class CALL {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly gas: any;\n    readonly address: any;\n    readonly value: any;\n    readonly memoryStart: any;\n    readonly memoryLength: any;\n    readonly outputStart: any;\n    readonly outputLength: any;\n    readonly throwOnFail: boolean;\n\n    constructor(\n        gas: any,\n        address: any,\n        value: any,\n        memoryStart: any,\n        memoryLength: any,\n        outputStart: any,\n        outputLength: any\n    ) {\n        this.name = 'CALL';\n        this.wrapped = false;\n        this.gas = gas;\n        this.address = address;\n        this.value = value;\n        this.memoryStart = memoryStart;\n        this.memoryLength = memoryLength;\n        this.outputStart = outputStart;\n        this.outputLength = outputLength;\n        this.throwOnFail = false;\n    }\n\n    toString() {\n        if (\n            BigNumber.isInstance(this.memoryLength) &&\n            this.memoryLength.isZero() &&\n            BigNumber.isInstance(this.outputLength) &&\n            this.outputLength.isZero()\n        ) {\n            if (\n                this.gas.name === 'MUL' &&\n                this.gas.left.name === 'ISZERO' &&\n                BigNumber.isInstance(this.gas.right) &&\n                this.gas.right.equals(2300)\n            ) {\n                if (this.throwOnFail) {\n                    return (\n                        'address(' +\n                        stringify(this.address) +\n                        ').transfer(' +\n                        stringify(this.value) +\n                        ')'\n                    );\n                } else {\n                    return (\n                        'address(' +\n                        stringify(this.address) +\n                        ').send(' +\n                        stringify(this.value) +\n                        ')'\n                    );\n                }\n            } else {\n                return (\n                    'address(' +\n                    stringify(this.address) +\n                    ').call.gas(' +\n                    stringify(this.gas) +\n                    ').value(' +\n                    stringify(this.value) +\n                    ')'\n                );\n            }\n        } else {\n            return (\n                'call(' +\n                stringify(this.gas) +\n                ',' +\n                stringify(this.address) +\n                ',' +\n                stringify(this.value) +\n                ',' +\n                stringify(this.memoryStart) +\n                ',' +\n                stringify(this.memoryLength) +\n                ',' +\n                stringify(this.outputStart) +\n                ',' +\n                stringify(this.outputLength) +\n                ')'\n            );\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const gas = state.stack.pop();\n    const address = state.stack.pop();\n    const value = state.stack.pop();\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    const outputStart = state.stack.pop();\n    const outputLength = state.stack.pop();\n    state.stack.push(\n        new CALL(gas, address, value, memoryStart, memoryLength, outputStart, outputLength)\n    );\n    state.memory[outputStart] = 'output';\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class CALLCODE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly gas: any;\n    readonly address: any;\n    readonly value: any;\n    readonly memoryStart: any;\n    readonly memoryLength: any;\n    readonly outputStart: any;\n    readonly outputLength: any;\n\n    constructor(\n        gas: any,\n        address: any,\n        value: any,\n        memoryStart: any,\n        memoryLength: any,\n        outputStart: any,\n        outputLength: any\n    ) {\n        this.name = 'CALLCODE';\n        this.wrapped = true;\n        this.gas = gas;\n        this.address = address;\n        this.value = value;\n        this.memoryStart = memoryStart;\n        this.memoryLength = memoryLength;\n        this.outputStart = outputStart;\n        this.outputLength = outputLength;\n    }\n\n    toString() {\n        return (\n            'callcode(' +\n            stringify(this.gas) +\n            ',' +\n            stringify(this.address) +\n            ',' +\n            stringify(this.value) +\n            ',' +\n            stringify(this.memoryStart) +\n            ',' +\n            stringify(this.memoryLength) +\n            ',' +\n            stringify(this.outputStart) +\n            ',' +\n            stringify(this.outputLength) +\n            ')'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const gas = state.stack.pop();\n    const address = state.stack.pop();\n    const value = state.stack.pop();\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    const outputStart = state.stack.pop();\n    const outputLength = state.stack.pop();\n    state.stack.push(\n        new CALLCODE(gas, address, value, memoryStart, memoryLength, outputStart, outputLength)\n    );\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class CALLDATACOPY {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly startLocation: any;\n    readonly copyLength: any;\n\n    constructor(startLocation: any, copyLength: any) {\n        this.name = 'CALLDATACOPY';\n        this.wrapped = true;\n        this.startLocation = startLocation;\n        this.copyLength = copyLength;\n    }\n\n    toString() {\n        return (\n            'msg.data[' +\n            this.startLocation +\n            ':(' +\n            this.startLocation +\n            '+' +\n            this.copyLength +\n            ')];'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const memoryLocation = state.stack.pop();\n    const startLocation = state.stack.pop();\n    const copyLength = state.stack.pop();\n    state.memory[memoryLocation] = new CALLDATACOPY(startLocation, copyLength);\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class CALLDATALOAD {\n    readonly name: string;\n    readonly type?: string;\n    readonly returntype?: string;\n    readonly wrapped: boolean;\n    readonly location: any;\n\n    constructor(location: any) {\n        this.name = 'CALLDATALOAD';\n        this.wrapped = false;\n        this.location = location;\n    }\n\n    toString() {\n        if (BigNumber.isInstance(this.location) && this.location.isZero()) {\n            return 'msg.data';\n        } else if (\n            BigNumber.isInstance(this.location) &&\n            this.location\n                .subtract(4)\n                .mod(32)\n                .isZero()\n        ) {\n            return (\n                '_arg' +\n                this.location\n                    .subtract(4)\n                    .divide(32)\n                    .toString()\n            );\n        } else {\n            return 'msg.data[' + stringify(this.location) + ']';\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const startLocation = state.stack.pop();\n    state.stack.push(new CALLDATALOAD(startLocation));\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class CALLDATASIZE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'CALLDATASIZE';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'msg.data.length';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new CALLDATASIZE());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class CALLER {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'CALLER';\n        this.name = 'address';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'msg.sender';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new CALLER());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class CALLVALUE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'CALLVALUE';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'msg.value';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new CALLVALUE());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class CODECOPY {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly startLocation: any;\n    readonly copyLength: any;\n\n    constructor(startLocation: any, copyLength: any) {\n        this.name = 'CODECOPY';\n        this.wrapped = true;\n        this.startLocation = startLocation;\n        this.copyLength = copyLength;\n    }\n\n    toString() {\n        return (\n            'this.code[' +\n            stringify(this.startLocation) +\n            ':(' +\n            stringify(this.startLocation) +\n            '+' +\n            stringify(this.copyLength) +\n            ')]'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const memoryLocation = state.stack.pop();\n    const startLocation = state.stack.pop();\n    const copyLength = state.stack.pop();\n    state.memory[memoryLocation] = new CODECOPY(startLocation, copyLength);\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class CODESIZE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'CODESIZE';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'this.code.length';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new CODESIZE());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class COINBASE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'COINBASE';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'block.coinbase';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new COINBASE());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class CREATE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly memoryStart: any;\n    readonly memoryLength: any;\n    readonly value: any;\n\n    constructor(memoryStart: any, memoryLength: any, value: any) {\n        this.name = 'CREATE';\n        this.name = 'address';\n        this.wrapped = true;\n        this.memoryStart = memoryStart;\n        this.memoryLength = memoryLength;\n        this.value = value;\n    }\n\n    toString() {\n        return (\n            '(new Contract(memory[' +\n            stringify(this.memoryStart) +\n            ':(' +\n            stringify(this.memoryStart) +\n            '+' +\n            stringify(this.memoryLength) +\n            ')]).value(' +\n            stringify(this.value) +\n            ')).address'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const value = state.stack.pop();\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    state.stack.push(new CREATE(memoryStart, memoryLength, value));\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class CREATE2 {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly memoryStart: any;\n    readonly memoryLength: any;\n    readonly value: any;\n\n    constructor(memoryStart: any, memoryLength: any, value: any) {\n        this.name = 'CREATE2';\n        this.wrapped = true;\n        this.memoryStart = memoryStart;\n        this.memoryLength = memoryLength;\n        this.value = value;\n    }\n\n    toString() {\n        return (\n            '(new Contract(memory[' +\n            stringify(this.memoryStart) +\n            ':(' +\n            stringify(this.memoryStart) +\n            '+' +\n            stringify(this.memoryLength) +\n            ')]).value(' +\n            stringify(this.value) +\n            ')).address'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const value = state.stack.pop();\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    state.stack.push(new CREATE2(memoryStart, memoryLength, value));\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class DELEGATECALL {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly gas: any;\n    readonly address: any;\n    readonly memoryStart: any;\n    readonly memoryLength: any;\n    readonly outputStart: any;\n    readonly outputLength: any;\n\n    constructor(\n        gas: any,\n        address: any,\n        memoryStart: any,\n        memoryLength: any,\n        outputStart: any,\n        outputLength: any\n    ) {\n        this.name = 'DELEGATECALL';\n        this.wrapped = true;\n        this.gas = gas;\n        this.address = address;\n        this.memoryStart = memoryStart;\n        this.memoryLength = memoryLength;\n        this.outputStart = outputStart;\n        this.outputLength = outputLength;\n    }\n\n    toString() {\n        return (\n            'delegatecall(' +\n            stringify(this.gas) +\n            ',' +\n            stringify(this.address) +\n            ',' +\n            stringify(this.memoryStart) +\n            ',' +\n            stringify(this.memoryLength) +\n            ',' +\n            stringify(this.outputStart) +\n            ',' +\n            stringify(this.outputLength) +\n            ')'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const gas = state.stack.pop();\n    const address = state.stack.pop();\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    const outputStart = state.stack.pop();\n    const outputLength = state.stack.pop();\n    state.stack.push(\n        new DELEGATECALL(gas, address, memoryStart, memoryLength, outputStart, outputLength)\n    );\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class DIFFICULTY {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'DIFFICULTY';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'block.difficulty';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new DIFFICULTY());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class DIV {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'DIV';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' / ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.divide(right));\n    } else if (BigNumber.isInstance(right) && right.equals(1)) {\n        state.stack.push(left);\n    } else {\n        state.stack.push(new DIV(left, right));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const duplicateLocation = parseInt(opcode.name.replace('DUP', ''), 10) - 1;\n    state.stack.duplicate(duplicateLocation);\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class SIG {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly hash: string;\n\n    constructor(hash: string) {\n        this.name = 'SIG';\n        this.wrapped = false;\n        this.hash = hash;\n    }\n\n    toString() {\n        return 'msg.sig == ' + this.hash;\n    }\n}\n\nexport class EQ {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'EQ';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' == ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    let left = state.stack.pop();\n    let right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(BigNumber(left.equals(right) === true ? 1 : 0));\n    } else {\n        if (\n            BigNumber.isInstance(left) &&\n            right.name === 'DIV' &&\n            BigNumber.isInstance(right.right)\n        ) {\n            left = left.multiply(right.right);\n            right = right.left;\n        }\n        if (\n            BigNumber.isInstance(right) &&\n            left.name === 'DIV' &&\n            BigNumber.isInstance(left.right)\n        ) {\n            right = right.multiply(left.right);\n            left = left.left;\n        }\n        if (\n            BigNumber.isInstance(left) &&\n            /^[0]+$/.test(left.toString(16).substring(8)) &&\n            right.name === 'CALLDATALOAD' &&\n            right.location.equals(0)\n        ) {\n            state.stack.push(\n                new SIG(\n                    '0'.repeat(64 - left.toString(16).length) +\n                        left.toString(16).substring(0, 8 - (64 - left.toString(16).length))\n                )\n            );\n        } else if (\n            BigNumber.isInstance(right) &&\n            /^[0]+$/.test(right.toString(16).substring(8)) &&\n            left.name === 'CALLDATALOAD' &&\n            left.location.equals(0)\n        ) {\n            state.stack.push(\n                new SIG(\n                    '0'.repeat(64 - right.toString(16).length) +\n                        right.toString(16).substring(0, 8 - (64 - right.toString(16).length))\n                )\n            );\n        } else {\n            state.stack.push(new EQ(left, right));\n        }\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class EXP {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'EXP';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' ** ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.pow(right));\n    } else {\n        state.stack.push(new EXP(left, right));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class EXTCODECOPY {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly address: any;\n    readonly startLocation: any;\n    readonly copyLength: any;\n\n    constructor(address: any, startLocation: any, copyLength: any) {\n        this.name = 'EXTCODECOPY';\n        this.wrapped = true;\n        this.address = address;\n        this.startLocation = startLocation;\n        this.copyLength = copyLength;\n    }\n\n    toString() {\n        return (\n            'address(' +\n            stringify(this.address) +\n            ').code[' +\n            stringify(this.startLocation) +\n            ':(' +\n            stringify(this.startLocation) +\n            '+' +\n            stringify(this.copyLength) +\n            ')]'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const address = state.stack.pop();\n    const memoryLocation = state.stack.pop();\n    const startLocation = state.stack.pop();\n    const copyLength = state.stack.pop();\n    state.memory[memoryLocation] = new EXTCODECOPY(address, startLocation, copyLength);\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class EXTCODEHASH {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly address: any;\n\n    constructor(address: any) {\n        this.name = 'EXTCODEHASH';\n        this.wrapped = true;\n        this.address = address;\n    }\n\n    toString() {\n        return 'keccak256(address(' + stringify(this.address) + ').code)';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const address = state.stack.pop();\n    state.stack.push(new EXTCODEHASH(address));\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class EXTCODESIZE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly address: any;\n\n    constructor(address: any) {\n        this.name = 'EXTCODESIZE';\n        this.wrapped = true;\n        this.address = address;\n    }\n\n    toString() {\n        return 'address(' + stringify(this.address) + ').code.length';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const address = state.stack.pop();\n    state.stack.push(new EXTCODESIZE(address));\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class GAS {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'GAS';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'gasleft()';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new GAS());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class GASLIMIT {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'GASLIMIT';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'block.gaslimit';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new GASLIMIT());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class GASPRICE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'GASPRICE';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'tx.gasprice';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new GASPRICE());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class GT {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n    readonly equal: boolean;\n\n    constructor(left: any, right: any, equal: boolean = false) {\n        this.name = 'GT';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n        this.equal = equal;\n    }\n\n    toString() {\n        if (this.equal) {\n            return stringify(this.left) + ' >= ' + stringify(this.right);\n        } else {\n            return stringify(this.left) + ' > ' + stringify(this.right);\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(BigNumber(left.greater(right) === true ? 1 : 0));\n    } else {\n        state.stack.push(new GT(left, right));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class INVALID {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly opcode: any;\n\n    constructor(opcode: any) {\n        this.name = 'INVALID';\n        this.wrapped = true;\n        this.opcode = opcode;\n    }\n\n    toString() {\n        return 'revert(\"Invalid instruction (0x' + this.opcode.toString(16) + ')\");';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.halted = true;\n    state.instructions.push(new INVALID(opcode.opcode));\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport { LT } from './lt';\nimport { GT } from './gt';\nimport stringify from '../utils/stringify';\n\nexport class ISZERO {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly item: any;\n\n    constructor(item: any) {\n        this.name = 'ISZERO';\n        this.wrapped = true;\n        this.item = item;\n    }\n\n    toString() {\n        if (this.item.name === 'EQ') {\n            return stringify(this.item.left) + ' != ' + stringify(this.item.right);\n        } else {\n            return stringify(this.item) + ' == 0';\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const item = state.stack.pop();\n    if (BigNumber.isInstance(item)) {\n        state.stack.push(BigNumber(item.isZero() === true ? 1 : 0));\n    } else if (item.name === 'LT') {\n        if (item.equal) {\n            state.stack.push(new GT(item.left, item.right));\n        } else {\n            state.stack.push(new GT(item.left, item.right, true));\n        }\n    } else if (item.name === 'GT') {\n        if (item.equal) {\n            state.stack.push(new LT(item.left, item.right));\n        } else {\n            state.stack.push(new LT(item.left, item.right, true));\n        }\n    } else if (item instanceof ISZERO) {\n        state.stack.push(item.item);\n    } else {\n        state.stack.push(new ISZERO(item));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class JUMP {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly valid: boolean;\n    readonly location: any;\n\n    constructor(location: any, bad?: boolean) {\n        this.name = 'JUMP';\n        this.wrapped = false;\n        this.location = location;\n        this.valid = true;\n        if (bad) {\n            this.valid = false;\n        }\n    }\n\n    toString() {\n        if (!this.valid) {\n            return \"revert(\\\"Bad jump destination\\\");\";\n        } else {\n            return 'goto(' + stringify(this.location) + ');';\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const jumpLocation = state.stack.pop();\n    if (!BigNumber.isInstance(jumpLocation)) {\n        state.halted = true;\n        state.instructions.push(new JUMP(jumpLocation, true));\n    } else {\n        const opcodes = state.getOpcodes();\n        const jumpLocationData = opcodes.find((o: any) => o.pc === jumpLocation.toJSNumber());\n        if (!jumpLocationData) {\n            state.halted = true;\n            state.instructions.push(new JUMP(jumpLocation, true));\n        } else {\n            const jumpIndex = opcodes.indexOf(jumpLocationData);\n            if (!(opcode.pc + ':' + jumpLocation.toJSNumber() in state.jumps)) {\n                if (!jumpLocationData || jumpLocationData.name !== 'JUMPDEST') {\n                    state.halted = true;\n                    state.instructions.push(new JUMP(jumpLocation, true));\n                } else if (\n                    jumpLocationData &&\n                    jumpIndex >= 0 &&\n                    jumpLocationData.name === 'JUMPDEST'\n                ) {\n                    state.jumps[opcode.pc + ':' + jumpLocation.toJSNumber()] = true;\n                    state.pc = jumpIndex;\n                } else {\n                    state.halted = true;\n                    state.instructions.push(new JUMP(jumpLocation, true));\n                }\n            } else {\n                state.halted = true;\n                state.instructions.push(new JUMP(jumpLocation));\n            }\n        }\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    /* Empty */\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\n// import * as functionHashes from '../../data/functionHashes.json';\nimport stringify from '../utils/stringify';\n\nconst updateCallDataLoad = (item: any, types: any) => {\n    for (const i in item) {\n        if (item.hasOwnProperty(i)) {\n            if (\n                typeof item[i] === 'object' &&\n                item[i].name === 'CALLDATALOAD' &&\n                BigNumber.isInstance(item[i].location)\n            ) {\n                const argNumber = item[i].location\n                    .subtract(4)\n                    .divide(32)\n                    .toString();\n                item[i].type = types[argNumber];\n            }\n            if (typeof item[i] === 'object') {\n                updateCallDataLoad(item[i], types);\n            }\n        }\n    }\n};\n\nconst findReturns = (item: any) => {\n    const returns = [];\n    for (const i in item) {\n        if (item.hasOwnProperty(i)) {\n            if (\n                typeof item[i] === 'object' &&\n                item[i].name === 'RETURN' &&\n                item[i].items &&\n                item[i].items.length > 0\n            ) {\n                returns.push(item[i].items);\n            }\n            if (typeof item[i] === 'object') {\n                const deepReturns: any = findReturns(item[i]);\n                if (deepReturns.length > 0) {\n                    returns.push(...deepReturns);\n                }\n            }\n        }\n    }\n    return returns;\n};\n\nexport class TopLevelFunction {\n    readonly name: string;\n    readonly type?: string;\n    readonly label: string;\n    readonly hash: any;\n    readonly gasUsed: number;\n    readonly payable: boolean;\n    readonly visibility: string;\n    readonly constant: boolean;\n    readonly items: any;\n    readonly returns: any;\n\n    constructor(items: any, hash: any, gasUsed: number, functionHashes: {[s: string]: string}) {\n        this.name = 'Function';\n        this.hash = hash;\n        this.gasUsed = gasUsed;\n        this.items = items;\n        this.payable = true;\n        this.visibility = 'public';\n        this.constant = false;\n        this.returns = [];\n        if (this.hash in functionHashes) {\n            this.label = (functionHashes as any)[this.hash];\n        } else {\n            this.label = this.hash + '()';\n        }\n        if (\n            this.items.length > 0 &&\n            this.items[0] instanceof REQUIRE &&\n            this.items[0].condition.name === 'ISZERO' &&\n            this.items[0].condition.item.name === 'CALLVALUE'\n        ) {\n            this.payable = false;\n            this.items.shift();\n        }\n        if (this.items.length === 1 && this.items[0].name === 'RETURN') {\n            this.constant = true;\n        }\n        if (this.hash in functionHashes) {\n            const functionName = (functionHashes as any)[this.hash].split('(')[0];\n            const argumentTypes = (functionHashes as any)[this.hash]\n                .replace(functionName, '')\n                .substr(1)\n                .slice(0, -1)\n                .split(',');\n            if (\n                argumentTypes.length > 1 ||\n                (argumentTypes.length === 1 && argumentTypes[0] !== '')\n            ) {\n                this.items.forEach((item: any) => updateCallDataLoad(item, argumentTypes));\n            }\n        }\n        const returns: any = [];\n        this.items.forEach((item: any) => {\n            const deepReturns = findReturns(item);\n            if (deepReturns.length > 0) {\n                returns.push(...deepReturns);\n            }\n        });\n        if (\n            returns.length > 0 &&\n            returns.every(\n                (returnItem: any) =>\n                    returnItem.length === returns[0].length &&\n                    returnItem.map((item: any) => item.type).join('') ===\n                        returns[0].map((item: any) => item.type).join('')\n            )\n        ) {\n            returns[0].forEach((item: any) => {\n                if (BigNumber.isInstance(item)) {\n                    this.returns.push('uint256');\n                } else if (item.type) {\n                    this.returns.push(item.type);\n                } else {\n                    this.returns.push('unknown');\n                }\n            });\n        } else if (returns.length > 0) {\n            this.returns.push('<unknown>');\n        }\n    }\n}\n\nexport class Variable {\n    readonly name: string;\n    readonly label: string | false;\n    readonly types: any;\n\n    constructor(label: string | false, types: any) {\n        this.name = 'Variable';\n        this.label = label;\n        this.types = types;\n    }\n}\n\nexport class REQUIRE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly condition: any;\n\n    constructor(condition: any) {\n        this.name = 'REQUIRE';\n        this.wrapped = true;\n        this.condition = condition;\n    }\n\n    toString() {\n        return 'require(' + stringify(this.condition) + ');';\n    }\n}\n\nexport class JUMPI {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly condition: any;\n    readonly location: any;\n    readonly valid: boolean;\n    readonly true?: any;\n    readonly false?: any;\n    readonly payable?: boolean;\n\n    constructor(condition: any, location: any, ifTrue?: any, ifFalse?: any, skipped?: boolean) {\n        this.name = 'JUMPI';\n        this.wrapped = true;\n        this.condition = condition;\n        this.location = location;\n        if (skipped) {\n            this.valid = true;\n        } else if (ifTrue && ifFalse) {\n            this.valid = true;\n            this.true = ifTrue;\n            this.false = ifFalse;\n            if (\n                this.true.length >= 1 &&\n                this.true[0] instanceof REQUIRE &&\n                this.true[0].condition.name === 'ISZERO' &&\n                this.true[0].condition.item.name === 'CALLVALUE'\n            ) {\n                this.payable = false;\n                this.true.shift();\n            } else {\n                this.payable = true;\n            }\n        } else {\n            this.valid = false;\n        }\n    }\n\n    toString() {\n        if (this.valid && this.true && this.false) {\n            return stringify(this.condition);\n        } else if (this.valid) {\n            return 'if' + stringify(this.condition) + ' goto(' + stringify(this.location) + ');';\n        } else {\n            console.log(this);\n            return \"revert(\\\"Bad jump destination\\\");\";\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const jumpLocation = state.stack.pop();\n    const jumpCondition = state.stack.pop();\n    const opcodes = state.getOpcodes();\n    console.log(jumpLocation);\n    console.log(state.conditions);\n    console.log('-');\n    if (!BigNumber.isInstance(jumpLocation)) {\n        state.halted = true;\n        state.instructions.push(new JUMPI(jumpCondition, jumpLocation));\n    } else {\n        const jumpLocationData = opcodes.find((o: any) => o.pc === jumpLocation.toJSNumber());\n        if (!jumpLocationData || jumpLocationData.name !== 'JUMPDEST') {\n            //state.halted = true;\n            //state.instructions.push(new JUMPI(jumpCondition, jumpLocation));\n            state.instructions.push(new REQUIRE(jumpCondition));\n        } else if (BigNumber.isInstance(jumpCondition)) {\n            const jumpIndex = opcodes.indexOf(jumpLocationData);\n            if (\n                jumpIndex >= 0 &&\n                !jumpCondition.equals(0) &&\n                !(opcode.pc + ':' + jumpLocation.toJSNumber() in state.jumps)\n            ) {\n                state.jumps[opcode.pc + ':' + jumpLocation.toJSNumber()] = true;\n                state.pc = jumpIndex;\n            }\n        } else if (\n            !(opcode.pc + ':' + jumpLocation.toJSNumber() in state.jumps) &&\n            jumpCondition.name === 'SIG'\n        ) {\n            const jumpIndex = opcodes.indexOf(jumpLocationData);\n            if (jumpIndex >= 0) {\n                const functionClone: any = state.clone();\n                functionClone.pc = jumpIndex;\n                const functionCloneTree = functionClone.parse();\n                state.functions[jumpCondition.hash] = new TopLevelFunction(\n                    functionCloneTree,\n                    jumpCondition.hash,\n                    functionClone.gasUsed,\n                    state.functionHashes,\n                );\n                if (\n                    jumpCondition.hash in state.functionHashes &&\n                    functionCloneTree.length === 1 &&\n                    functionCloneTree[0].name === 'RETURN' &&\n                    functionCloneTree[0].items.every((item: any) => item.name === 'MappingLoad')\n                ) {\n                    functionCloneTree[0].items.forEach((item: any) => {\n                        const fullFunction = (state.functionHashes as any)[jumpCondition.hash];\n                        state.mappings[item.location].name = fullFunction.split('(')[0];\n                        if (\n                            item.structlocation &&\n                            !state.mappings[item.location].structs.includes(item.structlocation)\n                        ) {\n                            state.mappings[item.location].structs.push(item.structlocation);\n                        }\n                    });\n                    delete state.functions[jumpCondition.hash];\n                } else if (\n                    jumpCondition.hash in state.functionHashes &&\n                    state.functions[jumpCondition.hash].items.length === 1 &&\n                    state.functions[jumpCondition.hash].items[0].name === 'RETURN' &&\n                    state.functions[jumpCondition.hash].items[0].items.length === 1 &&\n                    state.functions[jumpCondition.hash].items[0].items[0].name === 'SLOAD' &&\n                    BigNumber.isInstance(\n                        state.functions[jumpCondition.hash].items[0].items[0].location\n                    )\n                ) {\n                    if (\n                        !(\n                            state.functions[jumpCondition.hash].items[0].items[0].location in\n                            state.variables\n                        )\n                    ) {\n                        const fullFunction = (state.functionHashes as any)[jumpCondition.hash];\n                        state.variables[\n                            state.functions[jumpCondition.hash].items[0].items[0].location\n                        ] = new Variable(fullFunction.split('(')[0], []);\n                        delete state.functions[jumpCondition.hash];\n                    } else {\n                        const fullFunction = (state.functionHashes as any)[jumpCondition.hash];\n                        state.variables[\n                            state.functions[jumpCondition.hash].items[0].items[0].location\n                        ].label = fullFunction.split('(')[0];\n                        delete state.functions[jumpCondition.hash];\n                    }\n                }\n            }\n        } else if (\n            !(opcode.pc + ':' + jumpLocation.toJSNumber() in state.jumps) &&\n            ((jumpCondition.name === 'LT' &&\n                jumpCondition.left.name === 'CALLDATASIZE' &&\n                BigNumber.isInstance(jumpCondition.right) &&\n                jumpCondition.right.equals(4)) ||\n                (jumpCondition.name === 'ISZERO' && jumpCondition.item.name === 'CALLDATASIZE'))\n        ) {\n            const jumpIndex = opcodes.indexOf(jumpLocationData);\n            if (jumpIndex >= 0) {\n                state.halted = true;\n                const trueClone: any = state.clone();\n                trueClone.pc = jumpIndex;\n                trueClone.conditions.push(jumpCondition);\n                const trueCloneTree = trueClone.parse();\n                const falseClone = state.clone();\n                falseClone.pc = state.pc + 1;\n                const falseCloneTree: any = falseClone.parse();\n                if (\n                    trueCloneTree.length > 0 &&\n                    trueCloneTree.length === falseCloneTree.length &&\n                    trueCloneTree[0].name !== 'REVERT' &&\n                    trueCloneTree[0].name !== 'INVALID' &&\n                    trueCloneTree.map((item: any) => stringify(item)).join('') ===\n                        falseCloneTree.map((item: any) => stringify(item)).join('')\n                ) {\n                    state.functions[''] = new TopLevelFunction(\n                        trueCloneTree,\n                        '',\n                        trueCloneTree.gasUsed,\n                        state.functionHashes,\n                    );\n                } else if (\n                    trueCloneTree.length > 0 &&\n                    trueCloneTree[0].name !== 'REVERT' &&\n                    trueCloneTree[0].name !== 'INVALID'\n                ) {\n                    state.instructions.push(\n                        new JUMPI(jumpCondition, jumpLocation, trueCloneTree, falseCloneTree)\n                    );\n                }\n            } else {\n                state.instructions.push(new JUMPI(jumpCondition, jumpLocation));\n            }\n        } else if (!(opcode.pc + ':' + jumpLocation.toJSNumber() in state.jumps)) {\n            const jumpIndex = opcodes.indexOf(jumpLocationData);\n            state.jumps[opcode.pc + ':' + jumpLocation.toJSNumber()] = true;\n            if (jumpIndex >= 0) {\n                state.halted = true;\n                const trueClone: any = state.clone();\n                trueClone.pc = jumpIndex;\n                trueClone.conditions.push(jumpCondition);\n                const trueCloneTree = trueClone.parse();\n                const falseClone = state.clone();\n                falseClone.pc = state.pc + 1;\n                const falseCloneTree: any = falseClone.parse();\n                if (\n                    (falseCloneTree.length === 1 &&\n                        'name' in falseCloneTree[0] &&\n                        (falseCloneTree[0].name === 'REVERT' &&\n                            falseCloneTree[0].items &&\n                            falseCloneTree[0].items.length === 0)) ||\n                    falseCloneTree[0].name === 'INVALID'\n                ) {\n                    if (\n                        jumpCondition.name === 'CALL' &&\n                        BigNumber.isInstance(jumpCondition.memoryLength) &&\n                        jumpCondition.memoryLength.isZero() &&\n                        BigNumber.isInstance(jumpCondition.outputLength) &&\n                        jumpCondition.outputLength.isZero() &&\n                        jumpCondition.gas.name === 'MUL' &&\n                        jumpCondition.gas.left.name === 'ISZERO' &&\n                        BigNumber.isInstance(jumpCondition.gas.right) &&\n                        jumpCondition.gas.right.equals(2300)\n                    ) {\n                        jumpCondition.throwOnFail = true;\n                        state.instructions.push(jumpCondition);\n                        state.instructions.push(...trueCloneTree);\n                    } else {\n                        state.instructions.push(new REQUIRE(jumpCondition));\n                        state.instructions.push(...trueCloneTree);\n                    }\n                } else {\n                    state.instructions.push(\n                        new JUMPI(jumpCondition, jumpLocation, trueCloneTree, falseCloneTree)\n                    );\n                }\n            } else {\n                state.instructions.push(new JUMPI(jumpCondition, jumpLocation));\n            }\n        } else {\n            state.instructions.push(new JUMPI(jumpCondition, jumpLocation, null, null, true));\n        }\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport { MLOAD } from './mload';\n// import * as eventHashes from '../../data/eventHashes.json';\nimport * as BigNumber from '../../node_modules/big-integer';\n\nexport class LOG {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly memoryStart?: any;\n    readonly memoryLength?: any;\n    readonly items?: any;\n    readonly topics: any;\n    readonly eventName?: string;\n\n    constructor(eventHashes: {[s: string]: string},topics: any, items?: any, memoryStart?: any, memoryLength?: any) {\n        this.name = 'LOG';\n        this.wrapped = true;\n        this.topics = topics;\n        if (\n            this.topics.length > 0 &&\n            BigNumber.isInstance(this.topics[0]) &&\n            this.topics[0].toString(16) in eventHashes\n        ) {\n            this.eventName = (eventHashes as any)[this.topics[0].toString(16)].split('(')[0];\n            this.topics.shift();\n        }\n        if (this.memoryStart && this.memoryLength) {\n            this.memoryStart = memoryStart;\n            this.memoryLength = memoryLength;\n        } else {\n            this.items = items;\n        }\n    }\n\n    toString() {\n        if (this.eventName) {\n            return (\n                'emit ' + this.eventName + '(' + [...this.topics, ...this.items].join(', ') + ');'\n            );\n        } else {\n            return 'log(' + [...this.topics, ...this.items].join(', ') + ');';\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const topicsCount = parseInt(opcode.name.replace('LOG', ''), 10);\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    const topics = [];\n    for (let i = 0; i < topicsCount; i++) {\n        topics.push(state.stack.pop());\n    }\n    if (topics.length > 0) {\n        const eventTopic = topics[0].toString(16);\n        if (!(eventTopic in state.events)) {\n            state.events[eventTopic] = {};\n            state.events[eventTopic].indexedCount = topics.length - 1;\n            if (eventTopic in state.eventHashes) {\n                state.events[eventTopic].label = (state.eventHashes as any)[eventTopic];\n            }\n        }\n    }\n    if (BigNumber.isInstance(memoryStart) && BigNumber.isInstance(memoryLength)) {\n        const items = [];\n        for (\n            let i = memoryStart.toJSNumber();\n            i < memoryStart.add(memoryLength).toJSNumber();\n            i += 32\n        ) {\n            if (i in state.memory) {\n                items.push(state.memory[i]);\n            } else {\n                items.push(new MLOAD(i));\n            }\n        }\n        if (topics.length === 0) {\n            if (!('anonymous' in state.events)) {\n                state.events.anonymous = [];\n            }\n            state.events.anonymous.push({ items });\n        }\n        state.instructions.push(new LOG(state.eventHashes, topics, items));\n    } else {\n        state.instructions.push(new LOG(state.eventHashes, topics, [], memoryStart, memoryLength));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class LT {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n    readonly equal: boolean;\n\n    constructor(left: any, right: any, equal: boolean = false) {\n        this.name = 'LT';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n        this.equal = equal;\n    }\n\n    toString() {\n        if (this.equal) {\n            return stringify(this.left) + ' <= ' + stringify(this.right);\n        } else {\n            return stringify(this.left) + ' < ' + stringify(this.right);\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(BigNumber(left.lesser(right) === true ? 1 : 0));\n    } else {\n        state.stack.push(new LT(left, right));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class MLOAD {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly location: any;\n\n    constructor(location: any) {\n        this.name = 'MLOAD';\n        this.wrapped = true;\n        this.location = location;\n    }\n\n    toString() {\n        return 'memory[' + stringify(this.location) + ']';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const memoryLocation = state.stack.pop();\n    if (BigNumber.isInstance(memoryLocation) && memoryLocation.toJSNumber() in state.memory) {\n        state.stack.push(state.memory[memoryLocation.toJSNumber()]);\n    } else {\n        state.stack.push(new MLOAD(memoryLocation));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class MOD {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'MOD';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' % ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.mod(right));\n    } else {\n        state.stack.push(new MOD(left, right));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class MSIZE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'MSIZE';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'memory.length';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new MSIZE());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class MSTORE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly location: any;\n    readonly data: any;\n\n    constructor(location: any, data: any) {\n        this.name = 'MSTORE';\n        this.wrapped = true;\n        this.location = location;\n        this.data = data;\n    }\n\n    toString() {\n        return 'memory[' + stringify(this.location) + '] = ' + stringify(this.data) + ';';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const storeLocation = state.stack.pop();\n    const storeData = state.stack.pop();\n    if (BigNumber.isInstance(storeLocation)) {\n        state.memory[storeLocation.toJSNumber()] = storeData;\n    } else {\n        state.instructions.push(new MSTORE(storeLocation, storeData));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class MUL {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'MUL';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' * ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.multiply(right));\n    } else if (\n        (BigNumber.isInstance(left) && left.isZero()) ||\n        (BigNumber.isInstance(right) && right.isZero())\n    ) {\n        state.stack.push(BigNumber(0));\n    } else {\n        state.stack.push(new MUL(left, right));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport { MUL } from './mul';\nimport { MOD } from './mod';\nimport * as BigNumber from '../../node_modules/big-integer';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    const mod = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right) && BigNumber.isInstance(mod)) {\n        state.stack.push(left.multiply(right).mod(mod));\n    } else if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(new MOD(left.multiply(right), mod));\n    } else {\n        state.stack.push(new MOD(new MUL(left, right), mod));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class NOT {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly item: any;\n\n    constructor(item: any) {\n        this.name = 'AND';\n        this.wrapped = true;\n        this.item = item;\n    }\n\n    toString() {\n        return '~' + stringify(this.item);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const item = state.stack.pop();\n    if (BigNumber.isInstance(item)) {\n        state.stack.push(item.not());\n    } else {\n        state.stack.push(new NOT(item));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class NUMBER {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'NUMBER';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'block.number';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new NUMBER());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class OR {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'OR';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' || ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.or(right));\n    } else {\n        state.stack.push(new OR(left, right));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class ORIGIN {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'ORIGIN';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'tx.origin';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new ORIGIN());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(BigNumber(opcode.pc));\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.pop();\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const pushDataLength = parseInt(opcode.name.replace('PUSH', ''), 10);\n    state.stack.push(BigNumber(opcode.pushData!.toString('hex'), 16));\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport { MLOAD } from './mload';\nimport { hex2a } from '../utils/hex';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class RETURN {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly memoryStart?: any;\n    readonly memoryLength?: any;\n    readonly items: any;\n\n    constructor(items: any, memoryStart?: any, memoryLength?: any) {\n        this.name = 'RETURN';\n        this.wrapped = true;\n        if (memoryStart && memoryLength) {\n            this.memoryStart = memoryStart;\n            this.memoryLength = memoryLength;\n        } else {\n            this.items = items;\n        }\n    }\n\n    toString() {\n        if (this.memoryStart && this.memoryLength) {\n            return (\n                'return memory[' +\n                stringify(this.memoryStart) +\n                ':(' +\n                stringify(this.memoryStart) +\n                '+' +\n                stringify(this.memoryLength) +\n                ')];'\n            );\n        } else if (this.items.length === 0) {\n            return 'return;';\n        } else if (\n            this.items.length === 1 &&\n            (BigNumber.isInstance(this.items[0]) || this.items[0].static)\n        ) {\n            return 'return ' + this.items[0] + ';';\n        } else if (\n            this.items.length === 3 &&\n            this.items.every((item: any) => BigNumber.isInstance(item)) &&\n            this.items[0].equals(32)\n        ) {\n            return 'return \"' + hex2a(this.items[2].toString(16)) + '\";';\n        } else {\n            return 'return(' + this.items.map((item: any) => stringify(item)).join(', ') + ');';\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    state.halted = true;\n    if (BigNumber.isInstance(memoryStart) && BigNumber.isInstance(memoryLength)) {\n        const items = [];\n        for (\n            let i = memoryStart.toJSNumber();\n            i < memoryStart.add(memoryLength).toJSNumber();\n            i += 32\n        ) {\n            if (i in state.memory) {\n                items.push(state.memory[i]);\n            } else {\n                items.push(new MLOAD(i));\n            }\n        }\n        state.instructions.push(new RETURN(items));\n    } else {\n        state.instructions.push(new RETURN([], memoryStart, memoryLength));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class RETURNDATACOPY {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly returnDataPosition: any;\n    readonly returnDataSize: any;\n\n    constructor(returnDataPosition: any, returnDataSize: any) {\n        this.name = 'RETURNDATACOPY';\n        this.wrapped = true;\n        this.returnDataPosition = returnDataPosition;\n        this.returnDataSize = returnDataSize;\n    }\n\n    toString() {\n        return (\n            'output[' +\n            stringify(this.returnDataPosition) +\n            ':(' +\n            stringify(this.returnDataPosition) +\n            '+' +\n            stringify(this.returnDataSize) +\n            ')]'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const memoryPosition = state.stack.pop();\n    const returnDataPosition = state.stack.pop();\n    const returnDataSize = state.stack.pop();\n    state.memory[memoryPosition] = new RETURNDATACOPY(returnDataPosition, returnDataSize);\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class RETURNDATASIZE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'RETURNDATASIZE';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'output.length';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new RETURNDATASIZE());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport { MLOAD } from './mload';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class REVERT {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly memoryStart?: any;\n    readonly memoryLength?: any;\n    readonly items: any;\n\n    constructor(items: any, memoryStart?: any, memoryLength?: any) {\n        this.name = 'REVERT';\n        this.wrapped = true;\n        if (memoryStart && memoryLength) {\n            this.memoryStart = memoryStart;\n            this.memoryLength = memoryLength;\n        } else {\n            this.items = items;\n        }\n    }\n\n    toString() {\n        if (this.items) {\n            return 'revert(' + this.items.map((item: any) => stringify(item)).join(', ') + ');';\n        } else {\n            return (\n                'revert(memory[' +\n                stringify(this.memoryStart) +\n                ':(' +\n                stringify(this.memoryStart) +\n                '+' +\n                stringify(this.memoryLength) +\n                ')]);'\n            );\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    state.halted = true;\n    if (BigNumber.isInstance(memoryStart) && BigNumber.isInstance(memoryLength)) {\n        const items = [];\n        for (\n            let i = memoryStart.toJSNumber();\n            i < memoryStart.add(memoryLength).toJSNumber();\n            i += 32\n        ) {\n            if (i in state.memory) {\n                items.push(state.memory[i]);\n            } else {\n                items.push(new MLOAD(i));\n            }\n        }\n        state.instructions.push(new REVERT(items));\n    } else {\n        state.instructions.push(new REVERT([], memoryStart, memoryLength));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class SAR {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'SAR';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' >> ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.shiftRight(right));\n    } else {\n        state.stack.push(new SAR(left, right));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class SELFDESTRUCT {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly address: any;\n\n    constructor(address: any) {\n        this.name = 'SELFDESTRUCT';\n        this.wrapped = true;\n        this.address = address;\n    }\n\n    toString() {\n        return 'selfdestruct(' + stringify(this.address) + ');';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const address = state.stack.pop();\n    state.halted = true;\n    state.instructions.push(new SELFDESTRUCT(address));\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport { MLOAD } from './mload';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class SHA3 {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly memoryStart?: any;\n    readonly memoryLength?: any;\n    readonly items: any;\n\n    constructor(items: any, memoryStart?: any, memoryLength?: any) {\n        this.name = 'SHA3';\n        this.wrapped = false;\n        if (memoryStart && memoryLength) {\n            this.memoryStart = memoryStart;\n            this.memoryLength = memoryLength;\n        } else {\n            this.items = items;\n        }\n    }\n\n    toString() {\n        if (this.items) {\n            return 'keccak256(' + this.items.map((item: any) => stringify(item)).join(', ') + ')';\n        } else {\n            return (\n                'keccak256(memory[' +\n                stringify(this.memoryStart) +\n                ':(' +\n                stringify(this.memoryStart) +\n                '+' +\n                stringify(this.memoryLength) +\n                ')])'\n            );\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    if (BigNumber.isInstance(memoryStart) && BigNumber.isInstance(memoryLength)) {\n        const items = [];\n        for (\n            let i = memoryStart.toJSNumber();\n            i < memoryStart.add(memoryLength).toJSNumber();\n            i += 32\n        ) {\n            if (i in state.memory) {\n                items.push(state.memory[i]);\n            } else {\n                items.push(new MLOAD(i));\n            }\n        }\n        state.stack.push(new SHA3(items));\n    } else {\n        state.stack.push(new SHA3([], memoryStart, memoryLength));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class SHL {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'SHL';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' << ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.shiftLeft(right));\n    } else {\n        state.stack.push(new SHL(left, right));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class SHR {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'SHR';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' >>> ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.shiftRight(right));\n    } else {\n        state.stack.push(new SHR(left, right));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport { SHL } from './shl';\nimport { SAR } from './sar';\nimport { SUB } from './sub';\nimport * as BigNumber from '../../node_modules/big-integer';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(\n            right.shiftLeft(BigNumber(32).subtract(left)).shiftRight(BigNumber(32).subtract(left))\n        );\n    } else if (BigNumber.isInstance(left)) {\n        state.stack.push(\n            new SAR(new SHL(right, BigNumber(32).subtract(left)), BigNumber(32).subtract(left))\n        );\n    } else {\n        state.stack.push(\n            new SAR(new SHL(right, new SUB(BigNumber(32), left)), new SUB(BigNumber(32), left))\n        );\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nconst parseMapping = (...items: any[]) => {\n    const mappings: any = [];\n    items.forEach((item2: any) => {\n        if (item2.name === 'SHA3' && item2.items) {\n            mappings.push(...parseMapping(...item2.items));\n        } else {\n            mappings.push(item2);\n        }\n    });\n    return mappings;\n};\n\nexport class MappingLoad {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly location: any;\n    readonly count: any;\n    readonly items: any;\n    readonly structlocation?: any;\n    readonly mappings: any;\n\n    constructor(mappings: any, location: any, items: any, count: any, structlocation?: any) {\n        this.name = 'MappingLoad';\n        this.wrapped = false;\n        this.location = location;\n        this.count = count;\n        this.items = items;\n        this.structlocation = structlocation;\n        this.mappings = mappings;\n    }\n\n    toString() {\n        let mappingName = 'mapping' + (this.count + 1);\n        if (this.location in this.mappings() && this.mappings()[this.location].name) {\n            mappingName = this.mappings()[this.location].name;\n        }\n        if (this.structlocation) {\n            return (\n                mappingName +\n                this.items.map((item: any) => '[' + stringify(item) + ']').join('') +\n                '[' +\n                this.structlocation.toString() +\n                ']'\n            );\n        } else {\n            return (\n                mappingName + this.items.map((item: any) => '[' + stringify(item) + ']').join('')\n            );\n        }\n    }\n}\n\nexport class SLOAD {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly location: any;\n    readonly variables: any;\n\n    constructor(location: any, variables: any) {\n        this.name = 'SLOAD';\n        this.wrapped = false;\n        this.location = location;\n        this.variables = variables;\n    }\n\n    toString() {\n        if (BigNumber.isInstance(this.location) && this.location.toString() in this.variables()) {\n            if (this.variables()[this.location.toString()].label) {\n                return this.variables()[this.location.toString()].label;\n            } else {\n                return (\n                    'var' + (Object.keys(this.variables()).indexOf(this.location.toString()) + 1)\n                );\n            }\n        } else {\n            return 'storage[' + stringify(this.location) + ']';\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const storeLocation = state.stack.pop();\n    if (storeLocation.name === 'SHA3') {\n        const mappingItems = parseMapping(...storeLocation.items);\n        const mappingLocation = mappingItems.find((mappingItem: any) =>\n            BigNumber.isInstance(mappingItem)\n        );\n        const mappingParts = mappingItems.filter(\n            (mappingItem: any) => !BigNumber.isInstance(mappingItem)\n        );\n        if (mappingLocation && mappingParts.length > 0) {\n            if (!(mappingLocation in state.mappings)) {\n                state.mappings[mappingLocation] = {\n                    name: false,\n                    structs: [],\n                    keys: [],\n                    values: []\n                };\n            }\n            state.mappings[mappingLocation].keys.push(mappingParts);\n            state.stack.push(\n                new MappingLoad(\n                    () => state.mappings,\n                    mappingLocation,\n                    mappingParts,\n                    Object.keys(state.mappings).indexOf(mappingLocation.toString())\n                )\n            );\n        } else {\n            state.stack.push(new SLOAD(storeLocation, () => state.variables));\n        }\n    } else if (\n        storeLocation.name === 'ADD' &&\n        storeLocation.left.name === 'SHA3' &&\n        BigNumber.isInstance(storeLocation.right)\n    ) {\n        const mappingItems = parseMapping(...storeLocation.left.items);\n        const mappingLocation = mappingItems.find((mappingItem: any) =>\n            BigNumber.isInstance(mappingItem)\n        );\n        const mappingParts = mappingItems.filter(\n            (mappingItem: any) => !BigNumber.isInstance(mappingItem)\n        );\n        if (mappingLocation && mappingParts.length > 0) {\n            if (!(mappingLocation in state.mappings)) {\n                state.mappings[mappingLocation] = {\n                    name: false,\n                    structs: [],\n                    keys: [],\n                    values: []\n                };\n            }\n            state.mappings[mappingLocation].keys.push(mappingParts);\n            state.stack.push(\n                new MappingLoad(\n                    () => state.mappings,\n                    mappingLocation,\n                    mappingParts,\n                    Object.keys(state.mappings).indexOf(mappingLocation.toString()),\n                    storeLocation.right\n                )\n            );\n        } else {\n            state.stack.push(new SLOAD(storeLocation, () => state.variables));\n        }\n    } else if (\n        storeLocation.name === 'ADD' &&\n        BigNumber.isInstance(storeLocation.left) &&\n        storeLocation.right.name === 'SHA3'\n    ) {\n        const mappingItems = parseMapping(...storeLocation.right.items);\n        const mappingLocation = mappingItems.find((mappingItem: any) =>\n            BigNumber.isInstance(mappingItem)\n        );\n        const mappingParts = mappingItems.filter(\n            (mappingItem: any) => !BigNumber.isInstance(mappingItem)\n        );\n        if (mappingLocation && mappingParts.length > 0) {\n            if (!(mappingLocation in state.mappings)) {\n                state.mappings[mappingLocation] = {\n                    name: false,\n                    structs: [],\n                    keys: [],\n                    values: []\n                };\n            }\n            state.mappings[mappingLocation].keys.push(mappingParts);\n            state.stack.push(\n                new MappingLoad(\n                    () => state.mappings,\n                    mappingLocation,\n                    mappingParts,\n                    Object.keys(state.mappings).indexOf(mappingLocation.toString()),\n                    storeLocation.left\n                )\n            );\n        } else {\n            state.stack.push(new SLOAD(storeLocation, () => state.variables));\n        }\n    } else {\n        state.stack.push(new SLOAD(storeLocation, () => state.variables));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\nimport { Variable } from './jumpi';\n\nconst parseMapping = (...items: any[]) => {\n    const mappings: any = [];\n    items.forEach((item2: any) => {\n        if (item2.name === 'SHA3' && item2.items) {\n            mappings.push(...parseMapping(...item2.items));\n        } else {\n            mappings.push(item2);\n        }\n    });\n    return mappings;\n};\n\nexport class MappingStore {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly location: any;\n    readonly count: any;\n    readonly items: any;\n    readonly data: any;\n    readonly structlocation?: any;\n    readonly mappings: any;\n\n    constructor(\n        mappings: any,\n        location: any,\n        items: any,\n        data: any,\n        count: any,\n        structlocation?: any\n    ) {\n        this.name = 'MappingStore';\n        this.wrapped = false;\n        this.location = location;\n        this.items = items;\n        this.data = data;\n        this.count = count;\n        this.structlocation = structlocation;\n        this.mappings = mappings;\n    }\n\n    toString() {\n        //console.log(this);\n        let mappingName = 'mapping' + (this.count + 1);\n        if (this.location in this.mappings() && this.mappings()[this.location].name) {\n            mappingName = this.mappings()[this.location].name;\n        }\n        if (\n            this.data.name === 'ADD' &&\n            this.data.right.name === 'MappingLoad' &&\n            stringify(this.data.right.location) === stringify(this.location)\n        ) {\n            console.log(this.items);\n            return (\n                mappingName +\n                this.items.map((item: any) => '[' + stringify(item) + ']').join('') +\n                ' += ' +\n                stringify(this.data.left) +\n                ';'\n            );\n        } else if (\n            this.data.name === 'ADD' &&\n            this.data.left.name === 'MappingLoad' &&\n            stringify(this.data.left.location) === stringify(this.location)\n        ) {\n            console.log(this.items);\n            return (\n                mappingName +\n                this.items.map((item: any) => '[' + stringify(item) + ']').join('') +\n                ' += ' +\n                stringify(this.data.right) +\n                ';'\n            );\n        } else if (\n            this.data.name === 'SUB' &&\n            this.data.left.name === 'MappingLoad' &&\n            stringify(this.data.left.location) === stringify(this.location)\n        ) {\n            return (\n                mappingName +\n                this.items.map((item: any) => '[' + stringify(item) + ']').join('') +\n                ' -= ' +\n                stringify(this.data.right) +\n                ';'\n            );\n        } else {\n            return (\n                mappingName +\n                this.items.map((item: any) => '[' + stringify(item) + ']').join('') +\n                ' = ' +\n                stringify(this.data) +\n                ';'\n            );\n        }\n    }\n}\n\nexport class SSTORE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly location: any;\n    readonly data: any;\n    readonly variables: any;\n\n    constructor(location: any, data: any, variables: any) {\n        this.name = 'SSTORE';\n        this.wrapped = true;\n        this.location = location;\n        this.data = data;\n        this.variables = variables;\n        if (BigNumber.isInstance(this.location) && this.location.toString() in this.variables()) {\n            this.variables()[this.location.toString()].types.push(() => this.data.type);\n        } else if (\n            BigNumber.isInstance(this.location) &&\n            !(this.location.toString() in this.variables())\n        ) {\n            this.variables()[this.location.toString()] = new Variable(false, [\n                () => this.data.type\n            ]);\n        }\n    }\n\n    toString() {\n        let variableName = 'storage[' + stringify(this.location) + ']';\n        if (BigNumber.isInstance(this.location) && this.location.toString() in this.variables()) {\n            if (this.variables()[this.location.toString()].label) {\n                variableName = this.variables()[this.location.toString()].label;\n            } else {\n                variableName =\n                    'var' + (Object.keys(this.variables()).indexOf(this.location.toString()) + 1);\n            }\n        }\n        if (\n            this.data.name === 'ADD' &&\n            this.data.right.name === 'SLOAD' &&\n            stringify(this.data.right.location) === stringify(this.location)\n        ) {\n            return variableName + ' += ' + stringify(this.data.left) + ';';\n        } else if (\n            this.data.name === 'SUB' &&\n            this.data.left.name === 'SLOAD' &&\n            stringify(this.data.left.location) === stringify(this.location)\n        ) {\n            return variableName + ' -= ' + stringify(this.data.right) + ';';\n        } else {\n            return variableName + ' = ' + stringify(this.data) + ';';\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const storeLocation = state.stack.pop();\n    const storeData = state.stack.pop();\n    if (storeLocation.name === 'SHA3') {\n        const mappingItems = parseMapping(...storeLocation.items);\n        const mappingLocation = mappingItems.find((mappingItem: any) =>\n            BigNumber.isInstance(mappingItem)\n        );\n        const mappingParts = mappingItems.filter(\n            (mappingItem: any) => !BigNumber.isInstance(mappingItem)\n        );\n        if (mappingLocation && mappingParts.length > 0) {\n            if (!(mappingLocation in state.mappings)) {\n                state.mappings[mappingLocation] = {\n                    name: false,\n                    structs: [],\n                    keys: [],\n                    values: []\n                };\n            }\n            state.mappings[mappingLocation].keys.push(mappingParts);\n            state.mappings[mappingLocation].values.push(storeData);\n            state.instructions.push(\n                new MappingStore(\n                    () => state.mappings,\n                    mappingLocation,\n                    mappingParts,\n                    storeData,\n                    Object.keys(state.mappings).indexOf(mappingLocation.toString())\n                )\n            );\n        } else {\n            state.instructions.push(new SSTORE(storeLocation, storeData, () => state.variables));\n        }\n    } else if (\n        storeLocation.name === 'ADD' &&\n        storeLocation.left.name === 'SHA3' &&\n        BigNumber.isInstance(storeLocation.right)\n    ) {\n        const mappingItems = parseMapping(...storeLocation.left.items);\n        const mappingLocation = mappingItems.find((mappingItem: any) =>\n            BigNumber.isInstance(mappingItem)\n        );\n        const mappingParts = mappingItems.filter(\n            (mappingItem: any) => !BigNumber.isInstance(mappingItem)\n        );\n        if (mappingLocation && mappingParts.length > 0) {\n            if (!(mappingLocation in state.mappings)) {\n                state.mappings[mappingLocation] = {\n                    name: false,\n                    structs: [],\n                    keys: [],\n                    values: []\n                };\n            }\n            state.mappings[mappingLocation].keys.push(mappingParts);\n            state.instructions.push(\n                new MappingStore(\n                    () => state.mappings,\n                    mappingLocation,\n                    mappingParts,\n                    storeData,\n                    Object.keys(state.mappings).indexOf(mappingLocation.toString()),\n                    storeLocation.right\n                )\n            );\n        } else {\n            state.instructions.push(new SSTORE(storeLocation, storeData, () => state.variables));\n        }\n    } else if (\n        storeLocation.name === 'ADD' &&\n        BigNumber.isInstance(storeLocation.left) &&\n        storeLocation.right.name === 'SHA3'\n    ) {\n        const mappingItems = parseMapping(...storeLocation.right.items);\n        const mappingLocation = mappingItems.find((mappingItem: any) =>\n            BigNumber.isInstance(mappingItem)\n        );\n        const mappingParts = mappingItems.filter(\n            (mappingItem: any) => !BigNumber.isInstance(mappingItem)\n        );\n        if (mappingLocation && mappingParts.length > 0) {\n            if (!(mappingLocation in state.mappings)) {\n                state.mappings[mappingLocation] = {\n                    name: false,\n                    structs: [],\n                    keys: [],\n                    values: []\n                };\n            }\n            state.mappings[mappingLocation].keys.push(mappingParts);\n            state.instructions.push(\n                new MappingStore(\n                    () => state.mappings,\n                    mappingLocation,\n                    mappingParts,\n                    storeData,\n                    Object.keys(state.mappings).indexOf(mappingLocation.toString()),\n                    storeLocation.left\n                )\n            );\n        } else {\n            state.instructions.push(new SSTORE(storeLocation, storeData, () => state.variables));\n        }\n    } else if (\n        false &&\n        BigNumber.isInstance(storeLocation) &&\n        storeLocation.toString() in state.variables &&\n        storeData.type &&\n        !state.variables[storeLocation.toString()].types.includes(storeData.type)\n    ) {\n        state.instructions.push(new SSTORE(storeLocation, storeData, () => state.variables));\n        state.variables[storeLocation.toString()].types.push(storeData.type);\n    } else {\n        state.instructions.push(new SSTORE(storeLocation, storeData, () => state.variables));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class STATICCALL {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly gas: any;\n    readonly address: any;\n    readonly memoryStart: any;\n    readonly memoryLength: any;\n    readonly outputStart: any;\n    readonly outputLength: any;\n\n    constructor(\n        gas: any,\n        address: any,\n        memoryStart: any,\n        memoryLength: any,\n        outputStart: any,\n        outputLength: any\n    ) {\n        this.name = 'STATICCALL';\n        this.wrapped = true;\n        this.gas = gas;\n        this.address = address;\n        this.memoryStart = memoryStart;\n        this.memoryLength = memoryLength;\n        this.outputStart = outputStart;\n        this.outputLength = outputLength;\n    }\n\n    toString() {\n        return (\n            'staticcall(' +\n            stringify(this.gas) +\n            ',' +\n            stringify(this.address) +\n            ',' +\n            stringify(this.memoryStart) +\n            ',' +\n            stringify(this.memoryLength) +\n            ',' +\n            stringify(this.outputStart) +\n            ',' +\n            stringify(this.outputLength) +\n            ')'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const gas = state.stack.pop();\n    const address = state.stack.pop();\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    const outputStart = state.stack.pop();\n    const outputLength = state.stack.pop();\n    state.stack.push(\n        new STATICCALL(gas, address, memoryStart, memoryLength, outputStart, outputLength)\n    );\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class STOP {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'STOP';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'return;';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.halted = true;\n    state.instructions.push(new STOP());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class SUB {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'SUB';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' - ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.subtract(right));\n    } else {\n        state.stack.push(new SUB(left, right));\n    }\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const swapLocation = parseInt(opcode.name.replace('SWAP', ''), 10);\n    state.stack.swap(swapLocation);\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class TIMESTAMP {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'TIMESTAMP';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'block.timestamp';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new TIMESTAMP());\n};\n","import { EVM } from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class XOR {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'XOR';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' ^ ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.xor(right));\n    } else {\n        state.stack.push(new XOR(left, right));\n    }\n};\n","export function hex2a(hexx: any) {\n    const hex = hexx.toString();\n    let str = '';\n    for (let i = 0; i < hex.length && hex.substr(i, 2) !== '00'; i += 2) {\n        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    }\n    return str;\n}\n\nexport function pad32(data: string) {\n    if (data.length >= 64) {\n        return data;\n    } else {\n        return '0'.repeat(64 - data.length) + data;\n    }\n}\n\nexport function isHex(h: any) {\n    return /^[0-9a-f-]+$/.test(h);\n}\n\nexport default (data: any) => {\n    if (isHex(data)) {\n        const pieces = data.match(/.{1,64}/g);\n        if (pieces.length === 3 && parseInt(pieces[0], 16) === 32) {\n            const stringLength = parseInt(pieces[1], 16) * 2;\n            const stringData = hex2a(pieces[2].substr(0, stringLength));\n            return '\"' + stringData + '\"';\n        } else if (!isNaN(parseInt(data, 16))) {\n            return parseInt(data, 16).toString();\n        } else {\n            return data;\n        }\n    } else {\n        return data;\n    }\n};\n","import STOP from '../opcodes/stop';\nimport ADD from '../opcodes/add';\nimport MUL from '../opcodes/mul';\nimport SUB from '../opcodes/sub';\nimport DIV from '../opcodes/div';\nimport MOD from '../opcodes/mod';\nimport ADDMOD from '../opcodes/addmod';\nimport MULMOD from '../opcodes/mulmod';\nimport EXP from '../opcodes/exp';\nimport SIGNEXTEND from '../opcodes/signextend';\nimport LT from '../opcodes/lt';\nimport GT from '../opcodes/gt';\nimport EQ from '../opcodes/eq';\nimport ISZERO from '../opcodes/iszero';\nimport AND from '../opcodes/and';\nimport OR from '../opcodes/or';\nimport XOR from '../opcodes/xor';\nimport NOT from '../opcodes/not';\nimport BYTE from '../opcodes/byte';\nimport SHL from '../opcodes/shl';\nimport SHR from '../opcodes/shr';\nimport SAR from '../opcodes/sar';\nimport SHA3 from '../opcodes/sha3';\nimport ADDRESS from '../opcodes/address';\nimport BALANCE from '../opcodes/balance';\nimport ORIGIN from '../opcodes/origin';\nimport CALLER from '../opcodes/caller';\nimport CALLVALUE from '../opcodes/callvalue';\nimport CALLDATALOAD from '../opcodes/calldataload';\nimport CALLDATASIZE from '../opcodes/calldatasize';\nimport CALLDATACOPY from '../opcodes/calldatacopy';\nimport CODESIZE from '../opcodes/codesize';\nimport CODECOPY from '../opcodes/codecopy';\nimport GASPRICE from '../opcodes/gasprice';\nimport EXTCODESIZE from '../opcodes/extcodesize';\nimport EXTCODECOPY from '../opcodes/extcodecopy';\nimport RETURNDATASIZE from '../opcodes/returndatasize';\nimport RETURNDATACOPY from '../opcodes/returndatacopy';\nimport EXTCODEHASH from '../opcodes/extcodehash';\nimport BLOCKHASH from '../opcodes/blockhash';\nimport COINBASE from '../opcodes/coinbase';\nimport TIMESTAMP from '../opcodes/timestamp';\nimport NUMBER from '../opcodes/number';\nimport DIFFICULTY from '../opcodes/difficulty';\nimport GASLIMIT from '../opcodes/gaslimit';\nimport POP from '../opcodes/pop';\nimport MLOAD from '../opcodes/mload';\nimport MSTORE from '../opcodes/mstore';\nimport SLOAD from '../opcodes/sload';\nimport SSTORE from '../opcodes/sstore';\nimport JUMP from '../opcodes/jump';\nimport JUMPI from '../opcodes/jumpi';\nimport PC from '../opcodes/pc';\nimport MSIZE from '../opcodes/msize';\nimport GAS from '../opcodes/gas';\nimport JUMPDEST from '../opcodes/jumpdest';\nimport PUSH from '../opcodes/push';\nimport DUP from '../opcodes/dup';\nimport SWAP from '../opcodes/swap';\nimport LOG from '../opcodes/log';\nimport CREATE from '../opcodes/create';\nimport CALL from '../opcodes/call';\nimport CALLCODE from '../opcodes/callcode';\nimport RETURN from '../opcodes/return';\nimport DELEGATECALL from '../opcodes/delegatecall';\nimport CREATE2 from '../opcodes/create2';\nimport STATICCALL from '../opcodes/staticcall';\nimport REVERT from '../opcodes/revert';\nimport INVALID from '../opcodes/invalid';\nimport SELFDESTRUCT from '../opcodes/selfdestruct';\n\nexport default {\n    STOP,\n    ADD,\n    MUL,\n    SUB,\n    DIV,\n    SDIV: DIV,\n    MOD,\n    SMOD: MOD,\n    ADDMOD,\n    MULMOD,\n    EXP,\n    SIGNEXTEND,\n    LT,\n    GT,\n    SLT: LT,\n    SGT: GT,\n    EQ,\n    ISZERO,\n    AND,\n    OR,\n    XOR,\n    NOT,\n    BYTE,\n    SHL,\n    SHR,\n    SAR,\n    SHA3,\n    ADDRESS,\n    BALANCE,\n    ORIGIN,\n    CALLER,\n    CALLVALUE,\n    CALLDATALOAD,\n    CALLDATASIZE,\n    CALLDATACOPY,\n    CODESIZE,\n    CODECOPY,\n    GASPRICE,\n    EXTCODESIZE,\n    EXTCODECOPY,\n    RETURNDATASIZE,\n    RETURNDATACOPY,\n    EXTCODEHASH,\n    BLOCKHASH,\n    COINBASE,\n    TIMESTAMP,\n    NUMBER,\n    DIFFICULTY,\n    GASLIMIT,\n    POP,\n    MLOAD,\n    MSTORE,\n    MSTORE8: MSTORE,\n    SLOAD,\n    SSTORE,\n    JUMP,\n    JUMPI,\n    PC,\n    MSIZE,\n    GAS,\n    JUMPDEST,\n    PUSH1: PUSH,\n    PUSH2: PUSH,\n    PUSH3: PUSH,\n    PUSH4: PUSH,\n    PUSH5: PUSH,\n    PUSH6: PUSH,\n    PUSH7: PUSH,\n    PUSH8: PUSH,\n    PUSH9: PUSH,\n    PUSH10: PUSH,\n    PUSH11: PUSH,\n    PUSH12: PUSH,\n    PUSH13: PUSH,\n    PUSH14: PUSH,\n    PUSH15: PUSH,\n    PUSH16: PUSH,\n    PUSH17: PUSH,\n    PUSH18: PUSH,\n    PUSH19: PUSH,\n    PUSH20: PUSH,\n    PUSH21: PUSH,\n    PUSH22: PUSH,\n    PUSH23: PUSH,\n    PUSH24: PUSH,\n    PUSH25: PUSH,\n    PUSH26: PUSH,\n    PUSH27: PUSH,\n    PUSH28: PUSH,\n    PUSH29: PUSH,\n    PUSH30: PUSH,\n    PUSH31: PUSH,\n    PUSH32: PUSH,\n    DUP1: DUP,\n    DUP2: DUP,\n    DUP3: DUP,\n    DUP4: DUP,\n    DUP5: DUP,\n    DUP6: DUP,\n    DUP7: DUP,\n    DUP8: DUP,\n    DUP9: DUP,\n    DUP10: DUP,\n    DUP11: DUP,\n    DUP12: DUP,\n    DUP13: DUP,\n    DUP14: DUP,\n    DUP15: DUP,\n    DUP16: DUP,\n    SWAP1: SWAP,\n    SWAP2: SWAP,\n    SWAP3: SWAP,\n    SWAP4: SWAP,\n    SWAP5: SWAP,\n    SWAP6: SWAP,\n    SWAP7: SWAP,\n    SWAP8: SWAP,\n    SWAP9: SWAP,\n    SWAP10: SWAP,\n    SWAP11: SWAP,\n    SWAP12: SWAP,\n    SWAP13: SWAP,\n    SWAP14: SWAP,\n    SWAP15: SWAP,\n    SWAP16: SWAP,\n    LOG0: LOG,\n    LOG1: LOG,\n    LOG2: LOG,\n    LOG3: LOG,\n    LOG4: LOG,\n    CREATE,\n    CALL,\n    CALLCODE,\n    RETURN,\n    DELEGATECALL,\n    CREATE2,\n    STATICCALL,\n    REVERT,\n    INVALID,\n    SELFDESTRUCT\n};\n","import * as BigNumber from 'big-integer';\n\nexport default (item: any) => {\n    if (BigNumber.isInstance(item)) {\n        return item.toString(16);\n    } else if (!item.wrapped) {\n        return item.toString();\n    } else {\n        return '(' + item.toString() + ')';\n    }\n};\n","export default (stateEvents: any, events: string[]) => {\n    const stateEventValues = Object.keys(stateEvents).map((key: string) => stateEvents[key]);\n    let output = '';\n\n    events.forEach((event: string) => {\n        const eventName = event.split('(')[0];\n        const eventArguments = event\n            .replace(eventName, '')\n            .substring(1)\n            .slice(0, -1);\n        output += 'event ';\n        if (eventArguments) {\n            output += eventName + '(';\n            output += eventArguments\n                .split(',')\n                .map((a: string, i: number) => {\n                    const stateEvent = stateEventValues.find((e: any) => e.label === event);\n                    if (stateEvent && i < stateEvent.indexedCount) {\n                        return a + ' indexed _arg' + i;\n                    } else {\n                        return a + ' _arg' + i;\n                    }\n                })\n                .join(', ');\n            output += ');';\n        } else {\n            output += event;\n        }\n        output += '\\n';\n    });\n\n    if (events.length > 0) {\n        output += '\\n';\n    }\n\n    return output;\n};\n","import stringifyInstructions from './stringifyInstructions';\n// import * as functionHashes from '../../data/functionHashes.json';\n\nexport default (functionName: string, functionInstance: any, functionHashes: {[s: string]: string}): string => {\n    let output = '';\n    output += 'function ';\n    if (functionName in functionHashes) {\n        const fullFunction = (functionHashes as any)[functionName];\n        const fullFunctionName = fullFunction.split('(')[0];\n        const fullFunctionArguments = fullFunction\n            .replace(fullFunctionName, '')\n            .substring(1)\n            .slice(0, -1);\n        if (fullFunctionArguments) {\n            output += fullFunctionName + '(';\n            output += fullFunctionArguments\n                .split(',')\n                .map((a: string, i: number) => a + ' _arg' + i)\n                .join(', ');\n            output += ')';\n        } else {\n            output += fullFunction;\n        }\n    } else {\n        output += functionName + '()';\n    }\n    output += ' ' + functionInstance.visibility;\n    if (functionInstance.constant) {\n        output += ' view';\n    }\n    if (functionInstance.payable) {\n        output += ' payable';\n    }\n    if (functionInstance.returns.length > 0) {\n        output += ' returns (' + functionInstance.returns.join(', ') + ')';\n    }\n    output += ' {\\n';\n    output += stringifyInstructions(functionInstance.items, 4);\n    output += '}\\n\\n';\n    return output;\n};\n","export const stringifyInstructions = (instructionTree: any, indentation = 0): string => {\n    let instructionLines = '';\n    instructionTree.forEach((instruction: any) => {\n        if (instruction.name === 'JUMPI' && instruction.false) {\n            const condition = instruction.toString();\n            const falseInstructions = instruction.false.filter((i: any) => i.debugLevel > 0);\n            if (falseInstructions.length === 1 && falseInstructions[0].name === 'JUMPI') {\n                instructionLines += ' '.repeat(indentation) + 'if' + condition + ' {\\n';\n                instructionLines += stringifyInstructions(instruction.true, indentation + 4);\n                instructionLines += ' '.repeat(indentation) + '} else ';\n                const elseOrElseIf = stringifyInstructions(instruction.false, indentation);\n                if (elseOrElseIf.trim().startsWith('if')) {\n                    instructionLines += elseOrElseIf.trim() + '\\n';\n                } else {\n                    instructionLines +=\n                        '{\\n' +\n                        elseOrElseIf\n                            .split('\\n')\n                            .filter(l => l)\n                            .map(l => ' '.repeat(4) + l)\n                            .join('\\n');\n                    instructionLines += '\\n' + ' '.repeat(indentation) + '}\\n';\n                }\n            } else {\n                instructionLines += ' '.repeat(indentation) + 'if' + condition + ' {\\n';\n                instructionLines += stringifyInstructions(instruction.true, indentation + 4);\n                instructionLines += ' '.repeat(indentation) + '} else {\\n';\n                instructionLines += stringifyInstructions(instruction.false, indentation + 4);\n                instructionLines += ' '.repeat(indentation) + '}\\n';\n            }\n        } else {\n            instructionLines += ' '.repeat(indentation) + instruction.toString() + '\\n';\n        }\n    });\n    return instructionLines;\n};\n\nexport default stringifyInstructions;\n","const stringifyMapping = (mapping: any) => {\n    const mappingKey: string[] = [];\n    const mappingValue: string[] = [];\n    let deepMapping = false;\n    mapping.keys\n        .filter((mappingChild: any) => mappingChild.length > 0)\n        .forEach((mappingChild: any) => {\n            if (\n                mappingChild.length > 0 &&\n                mappingChild[0].type &&\n                !mappingKey.includes(mappingChild[0].type)\n            ) {\n                mappingKey.push(mappingChild[0].type);\n            }\n            if (mappingChild.length > 1 && !deepMapping) {\n                deepMapping = true;\n                mappingValue.push(\n                    stringifyMapping({\n                        name: mapping.name,\n                        structs: mapping.structs,\n                        keys: mapping.keys.map((items: any) => {\n                            items.shift();\n                            return items;\n                        }),\n                        values: mapping.values\n                    })\n                );\n            } else if (mappingChild.length === 1 && !deepMapping) {\n                mapping.values.forEach((mappingChild2: any) => {\n                    if (mappingChild2.type && !mappingValue.includes(mappingChild2.type)) {\n                        mappingValue.push(mappingChild2.type);\n                    }\n                });\n            }\n        });\n    if (mappingKey.length === 0) {\n        mappingKey.push('unknown');\n    }\n    if (mapping.structs.length > 0 && mappingValue.length === 0) {\n        mappingValue.push(mapping.name + 'Struct');\n    } else if (mappingValue.length === 0) {\n        mappingValue.push('unknown');\n    }\n    return 'mapping (' + mappingKey.join('|') + ' => ' + mappingValue.join('|') + ')';\n};\n\nexport default (mappings: any) => {\n    let output = '';\n\n    Object.keys(mappings).forEach((key: string, index: number) => {\n        const mapping = mappings[key];\n        if (mapping.name) {\n            output += stringifyMapping(mapping) + ' public ' + mapping.name + ';';\n        } else {\n            output += stringifyMapping(mapping) + ' mapping' + (index + 1) + ';';\n        }\n        output += '\\n';\n    });\n\n    if (Object.keys(mappings).length > 0) {\n        output += '\\n';\n    }\n\n    return output;\n};\n","export default (mappings: any) => {\n    let output = '';\n\n    Object.keys(mappings)\n        .filter((key: any) => mappings[key].structs.length > 0)\n        .forEach((key: string, index: number) => {\n            const mapping = mappings[key];\n            output += 'struct ' + mapping.name + 'Struct {\\n';\n            mapping.structs.forEach((struct: any) => {\n                output += '    ' + struct.toString() + ';\\n';\n            });\n            output += '}\\n\\n';\n        });\n\n    return output;\n};\n","export default (variables: any) => {\n    let output = '';\n\n    Object.keys(variables).forEach((key: string, index: number) => {\n        const variable = variables[key];\n        const types = variable.types\n            .map((type: any) => {\n                if (typeof type === 'function') {\n                    return type();\n                } else {\n                    return type;\n                }\n            })\n            .filter((type: any) => type);\n        if (types.length === 0) {\n            types.push('unknown');\n        }\n        if (variable.label) {\n            output += [...new Set(types)].join('|') + ' public ' + variable.label + ';';\n        } else {\n            output += [...new Set(types)].join('|') + ' var' + (index + 1).toString() + ';';\n            index++;\n        }\n        output += '\\n';\n    });\n\n    if (Object.keys(variables).length > 0) {\n        output += '\\n';\n    }\n\n    return output;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(341);\n"],"names":["root","factory","exports","module","define","amd","a","i","self","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseValue","parseBase","BigInteger","value","sign","this","isSmall","SmallInteger","NativeBigInt","isPrecise","n","Math","floor","arrayToSmall","trim","compareAbs","createArray","x","truncate","ceil","add","b","sum","l_a","l_b","r","carry","base","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","concat","multiplyKaratsuba","y","max","slice","d","c","ac","bd","abcd","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","negate","abs","comparison","quotientDigit","shift","result","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","next","bigInt","modPow","prototype","Object","create","plus","subtractAny","minus","small","multiply","l1","l2","times","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","modInv","isPositive","isOdd","compare","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","undefined","bits","bitLength","logN","log","toJSNumber","t","isProbablePrime","iterations","rng","randBetween","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","xor","LOBMASK_I","roughLOB","integerLogarithm","p","e","min","gcd","text","toLowerCase","absBase","alphabetValues","digits","parseBaseFromArray","val","toBase","apply","map","valueOf","neg","Number","out","left","digit","toBaseString","stringify","parseStringValue","split","decimalPlace","test","parseNumberValue","toArray","str","toJSON","parseInt","minusOne","lcm","isInstance","usedRNG","random","low","range","restricted","top","fromArray","hasOwnProperty","base64","ieee754","customInspectSymbol","Symbol","Buffer","K_MAX_LENGTH","createBuffer","RangeError","buf","setPrototypeOf","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","actual","write","fromString","ArrayBuffer","isView","arrayView","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","obj","isBuffer","checked","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","list","pos","set","swap16","swap32","swap64","toLocaleString","inspect","replace","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","base64clean","src","dst","table","i16","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","NaN","rt","isNaN","LN2","EVM","functionHashes","eventHashes","pc","Stack","memory","opcodes","instructions","storage","jumps","mappings","layer","halted","functions","variables","events","gasUsed","conditions","clone","getBytecode","getOpcodes","index","currentOp","opcode","codes","startsWith","pushDataLength","pushData","getFunctions","Set","filter","hash","getEvents","containsOpcode","names","currentOpcode","JUMPDEST","STOP","RETURN","REVERT","INVALID","SELFDESTRUCT","PUSH1","PUSH32","getJumpDestinations","getSwarmHash","match","getABI","abi","parse","keys","forEach","key","item","label","payable","constant","reset","decompile","instructionTree","functionName","isERC165","every","elements","pop","duplicate","position","secondPosition","firstValue","secondValue","parseSingle","substring","BigNumber","transactionObject","blockHash","blockNumber","gas","gasPrice","to","setInput","getFunctionHash","getFunction","functionHash","getFunctionName","rawFunction","getRawArguments","getArguments","descriptive","functionArguments","rawFunctionArguments","functionArgumentType","functionArgument","location","isContractCreation","Transaction","ADD","MUL","SUB","DIV","SDIV","MOD","SMOD","ADDMOD","MULMOD","EXP","SIGNEXTEND","LT","GT","SLT","SGT","EQ","ISZERO","AND","OR","XOR","NOT","BYTE","SHL","SHR","SAR","SHA3","ADDRESS","BALANCE","ORIGIN","CALLER","CALLVALUE","CALLDATALOAD","CALLDATASIZE","CALLDATACOPY","CODESIZE","CODECOPY","GASPRICE","EXTCODESIZE","EXTCODECOPY","RETURNDATASIZE","RETURNDATACOPY","EXTCODEHASH","BLOCKHASH","COINBASE","TIMESTAMP","NUMBER","DIFFICULTY","GASLIMIT","POP","MLOAD","MSTORE","MSTORE8","SLOAD","SSTORE","JUMP","JUMPI","PC","MSIZE","GAS","PUSH2","PUSH3","PUSH4","PUSH5","PUSH6","PUSH7","PUSH8","PUSH9","PUSH10","PUSH11","PUSH12","PUSH13","PUSH14","PUSH15","PUSH16","PUSH17","PUSH18","PUSH19","PUSH20","PUSH21","PUSH22","PUSH23","PUSH24","PUSH25","PUSH26","PUSH27","PUSH28","PUSH29","PUSH30","PUSH31","DUP1","DUP2","DUP3","DUP4","DUP5","DUP6","DUP7","DUP8","DUP9","DUP10","DUP11","DUP12","DUP13","DUP14","DUP15","DUP16","SWAP1","SWAP2","SWAP3","SWAP4","SWAP5","SWAP6","SWAP7","SWAP8","SWAP9","SWAP10","SWAP11","SWAP12","SWAP13","SWAP14","SWAP15","SWAP16","LOG0","LOG1","LOG2","LOG3","LOG4","CREATE","CALL","CALLCODE","DELEGATECALL","CREATE2","STATICCALL","right","wrapped","state","address","number","memoryStart","memoryLength","outputStart","outputLength","throwOnFail","startLocation","copyLength","memoryLocation","duplicateLocation","SIG","repeat","equal","bad","valid","jumpLocation","jumpLocationData","find","o","jumpIndex","updateCallDataLoad","types","argNumber","findReturns","returns","items","deepReturns","TopLevelFunction","visibility","REQUIRE","condition","argumentTypes","returnItem","Variable","ifTrue","ifFalse","skipped","true","false","jumpCondition","trueClone","trueCloneTree","falseClone","falseCloneTree","functionClone","functionCloneTree","fullFunction","structlocation","structs","LOG","topics","eventName","topicsCount","eventTopic","indexedCount","anonymous","storeLocation","storeData","static","hex2a","returnDataPosition","returnDataSize","memoryPosition","parseMapping","item2","MappingLoad","count","mappingName","mappingItems","mappingLocation","mappingItem","mappingParts","values","MappingStore","variableName","swapLocation","hexx","hex","isHex","h","pieces","stringLength","stateEvents","stateEventValues","event","eventArguments","stateEvent","functionInstance","fullFunctionName","fullFunctionArguments","stringifyInstructions","indentation","instructionLines","instruction","falseInstructions","debugLevel","elseOrElseIf","stringifyMapping","mapping","mappingKey","mappingValue","deepMapping","mappingChild","mappingChild2","struct","variable","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","nmd","paths","children"],"sourceRoot":""}