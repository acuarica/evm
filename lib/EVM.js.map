{"version":3,"file":"EVM.js","mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,MAAO,GAAIH,GACQ,iBAAZC,QACdA,QAAa,IAAID,IAEjBD,EAAU,IAAIC,GACf,CATD,CASGK,MAAM,2CCPTJ,EAAQK,WAuCR,SAAqBC,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,CAClD,EA3CAV,EAAQW,YAiDR,SAAsBL,GACpB,IAAIM,EAcAC,EAbAN,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvBO,EAAM,IAAIC,EAVhB,SAAsBT,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,CAClD,CAQoBM,CAAYV,EAAKG,EAAUC,IAEzCO,EAAU,EAGVC,EAAMR,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAKI,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EACxBD,EACGO,EAAUb,EAAIc,WAAWP,KAAO,GAChCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,GACpCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACrCM,EAAUb,EAAIc,WAAWP,EAAI,IAC/BC,EAAIG,KAAcL,GAAO,GAAM,IAC/BE,EAAIG,KAAcL,GAAO,EAAK,IAC9BE,EAAIG,KAAmB,IAANL,EAmBnB,OAhBwB,IAApBF,IACFE,EACGO,EAAUb,EAAIc,WAAWP,KAAO,EAChCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACvCC,EAAIG,KAAmB,IAANL,GAGK,IAApBF,IACFE,EACGO,EAAUb,EAAIc,WAAWP,KAAO,GAChCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACpCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACvCC,EAAIG,KAAcL,GAAO,EAAK,IAC9BE,EAAIG,KAAmB,IAANL,GAGZE,CACT,EA5FAd,EAAQqB,cAkHR,SAAwBC,GAQtB,IAPA,IAAIV,EACAM,EAAMI,EAAMC,OACZC,EAAaN,EAAM,EACnBO,EAAQ,GACRC,EAAiB,MAGZb,EAAI,EAAGc,EAAOT,EAAMM,EAAYX,EAAIc,EAAMd,GAAKa,EACtDD,EAAMG,KAAKC,EAAYP,EAAOT,EAAIA,EAAIa,EAAkBC,EAAOA,EAAQd,EAAIa,IAqB7E,OAjBmB,IAAfF,GACFZ,EAAMU,EAAMJ,EAAM,GAClBO,EAAMG,KACJE,EAAOlB,GAAO,GACdkB,EAAQlB,GAAO,EAAK,IACpB,OAEsB,IAAfY,IACTZ,GAAOU,EAAMJ,EAAM,IAAM,GAAKI,EAAMJ,EAAM,GAC1CO,EAAMG,KACJE,EAAOlB,GAAO,IACdkB,EAAQlB,GAAO,EAAK,IACpBkB,EAAQlB,GAAO,EAAK,IACpB,MAIGa,EAAMM,KAAK,GACpB,EA1IA,IALA,IAAID,EAAS,GACTX,EAAY,GACZJ,EAA4B,oBAAfiB,WAA6BA,WAAaC,MAEvDC,EAAO,mEACFrB,EAAI,EAAGK,EAAMgB,EAAKX,OAAQV,EAAIK,IAAOL,EAC5CiB,EAAOjB,GAAKqB,EAAKrB,GACjBM,EAAUe,EAAKd,WAAWP,IAAMA,EAQlC,SAASL,EAASF,GAChB,IAAIY,EAAMZ,EAAIiB,OAEd,GAAIL,EAAM,EAAI,EACZ,MAAM,IAAIiB,MAAM,kDAKlB,IAAI1B,EAAWH,EAAI8B,QAAQ,KAO3B,OANkB,IAAd3B,IAAiBA,EAAWS,GAMzB,CAACT,EAJcA,IAAaS,EAC/B,EACA,EAAKT,EAAW,EAGtB,CAmEA,SAASoB,EAAaP,EAAOe,EAAOC,GAGlC,IAFA,IAAI1B,EARoB2B,EASpBC,EAAS,GACJ3B,EAAIwB,EAAOxB,EAAIyB,EAAKzB,GAAK,EAChCD,GACIU,EAAMT,IAAM,GAAM,WAClBS,EAAMT,EAAI,IAAM,EAAK,QACP,IAAfS,EAAMT,EAAI,IACb2B,EAAOZ,KAdFE,GADiBS,EAeM3B,IAdT,GAAK,IACxBkB,EAAOS,GAAO,GAAK,IACnBT,EAAOS,GAAO,EAAI,IAClBT,EAAa,GAANS,IAaT,OAAOC,EAAOT,KAAK,GACrB,CAlGAZ,EAAU,IAAIC,WAAW,IAAM,GAC/BD,EAAU,IAAIC,WAAW,IAAM,mBCnB/B,IAAI,aAAJ,kBACI,aAEA,IAAIqB,EAAO,IAEPC,EAAU,iBACVC,EAAcC,EAAaF,GAC3BG,EAAmB,uCAEnBC,EAAyC,mBAAXC,OAElC,SAASC,EAAQC,EAAGC,EAAOC,EAAUC,GACjC,YAAiB,IAANH,EAA0BD,EAAQ,QACxB,IAAVE,GAAyC,KAAVA,IAAiBC,EACpDE,EAAWJ,GADoEK,EAAUL,EAAGC,EAAOC,EAAUC,EAExH,CAEA,SAASG,EAAWC,EAAOC,GACvBC,KAAKF,MAAQA,EACbE,KAAKD,KAAOA,EACZC,KAAKC,SAAU,CACnB,CAGA,SAASC,EAAaJ,GAClBE,KAAKF,MAAQA,EACbE,KAAKD,KAAOD,EAAQ,EACpBE,KAAKC,SAAU,CACnB,CAGA,SAASE,EAAaL,GAClBE,KAAKF,MAAQA,CACjB,CAGA,SAASM,EAAUC,GACf,OAAQrB,EAAUqB,GAAKA,EAAIrB,CAC/B,CAEA,SAASE,EAAamB,GAClB,OAAIA,EAAI,IACG,CAACA,GACRA,EAAI,KACG,CAACA,EAAI,IAAKC,KAAKC,MAAMF,EAAI,MAC7B,CAACA,EAAI,IAAKC,KAAKC,MAAMF,EAAI,KAAO,IAAKC,KAAKC,MAAMF,EAAI,MAC/D,CAEA,SAASG,EAAapD,GAClBqD,EAAKrD,GACL,IAAIS,EAAST,EAAIS,OACjB,GAAIA,EAAS,GAAK6C,EAAWtD,EAAK6B,GAAe,EAC7C,OAAQpB,GACJ,KAAK,EAAG,OAAO,EACf,KAAK,EAAG,OAAOT,EAAI,GACnB,KAAK,EAAG,OAAOA,EAAI,GAAKA,EAAI,GAAK2B,EACjC,QAAS,OAAO3B,EAAI,IAAMA,EAAI,GAAKA,EAAI,GAAK2B,GAAQA,EAG5D,OAAO3B,CACX,CAEA,SAASqD,EAAKlB,GAEV,IADA,IAAIpC,EAAIoC,EAAE1B,OACQ,IAAX0B,IAAIpC,KACXoC,EAAE1B,OAASV,EAAI,CACnB,CAEA,SAASwD,EAAY9C,GAGjB,IAFA,IAAI+C,EAAI,IAAIrC,MAAMV,GACdV,GAAK,IACAA,EAAIU,GACT+C,EAAEzD,GAAK,EAEX,OAAOyD,CACX,CAEA,SAASC,EAASR,GACd,OAAIA,EAAI,EAAUC,KAAKC,MAAMF,GACtBC,KAAKQ,KAAKT,EACrB,CAEA,SAASU,EAAIC,EAAGC,GACZ,IAKIC,EAAK/D,EALLgE,EAAMH,EAAEnD,OACRuD,EAAMH,EAAEpD,OACRwD,EAAI,IAAI9C,MAAM4C,GACdG,EAAQ,EACRC,EAAOxC,EAEX,IAAK5B,EAAI,EAAGA,EAAIiE,EAAKjE,IAEjBmE,GADAJ,EAAMF,EAAE7D,GAAK8D,EAAE9D,GAAKmE,IACLC,EAAO,EAAI,EAC1BF,EAAElE,GAAK+D,EAAMI,EAAQC,EAEzB,KAAOpE,EAAIgE,GAEPG,GADAJ,EAAMF,EAAE7D,GAAKmE,KACGC,EAAO,EAAI,EAC3BF,EAAElE,KAAO+D,EAAMI,EAAQC,EAG3B,OADID,EAAQ,GAAGD,EAAEnD,KAAKoD,GACfD,CACX,CAEA,SAASG,EAAOR,EAAGC,GACf,OAAID,EAAEnD,QAAUoD,EAAEpD,OAAekD,EAAIC,EAAGC,GACjCF,EAAIE,EAAGD,EAClB,CAEA,SAASS,EAAST,EAAGM,GACjB,IAGIJ,EAAK/D,EAHLuE,EAAIV,EAAEnD,OACNwD,EAAI,IAAI9C,MAAMmD,GACdH,EAAOxC,EAEX,IAAK5B,EAAI,EAAGA,EAAIuE,EAAGvE,IACf+D,EAAMF,EAAE7D,GAAKoE,EAAOD,EACpBA,EAAQhB,KAAKC,MAAMW,EAAMK,GACzBF,EAAElE,GAAK+D,EAAMI,EAAQC,EACrBD,GAAS,EAEb,KAAOA,EAAQ,GACXD,EAAElE,KAAOmE,EAAQC,EACjBD,EAAQhB,KAAKC,MAAMe,EAAQC,GAE/B,OAAOF,CACX,CAmCA,SAASM,EAASX,EAAGC,GACjB,IAKI9D,EAAGyE,EALHC,EAAMb,EAAEnD,OACRiE,EAAMb,EAAEpD,OACRwD,EAAI,IAAI9C,MAAMsD,GACdE,EAAS,EACTR,EAAOxC,EAEX,IAAK5B,EAAI,EAAGA,EAAI2E,EAAK3E,KACjByE,EAAaZ,EAAE7D,GAAK4E,EAASd,EAAE9D,IACd,GACbyE,GAAcL,EACdQ,EAAS,GACNA,EAAS,EAChBV,EAAElE,GAAKyE,EAEX,IAAKzE,EAAI2E,EAAK3E,EAAI0E,EAAK1E,IAAK,CAExB,MADAyE,EAAaZ,EAAE7D,GAAK4E,GACH,GACZ,CACDV,EAAElE,KAAOyE,EACT,KACJ,CAJoBA,GAAcL,EAKlCF,EAAElE,GAAKyE,CACX,CACA,KAAOzE,EAAI0E,EAAK1E,IACZkE,EAAElE,GAAK6D,EAAE7D,GAGb,OADAsD,EAAKY,GACEA,CACX,CAkBA,SAASW,EAAchB,EAAGC,EAAGlB,GACzB,IAII5C,EAAGyE,EAJHF,EAAIV,EAAEnD,OACNwD,EAAI,IAAI9C,MAAMmD,GACdJ,GAASL,EACTM,EAAOxC,EAEX,IAAK5B,EAAI,EAAGA,EAAIuE,EAAGvE,IACfyE,EAAaZ,EAAE7D,GAAKmE,EACpBA,EAAQhB,KAAKC,MAAMqB,EAAaL,GAChCK,GAAcL,EACdF,EAAElE,GAAKyE,EAAa,EAAIA,EAAaL,EAAOK,EAGhD,MAAiB,iBADjBP,EAAIb,EAAaa,KAETtB,IAAMsB,GAAKA,GACR,IAAInB,EAAamB,IACnB,IAAIxB,EAAWwB,EAAGtB,EAC/B,CAyDA,SAASkC,EAAajB,EAAGC,GACrB,IAKIiB,EAASZ,EAAOnE,EAAGgF,EALnBN,EAAMb,EAAEnD,OACRiE,EAAMb,EAAEpD,OAERwD,EAAIV,EADAkB,EAAMC,GAEVP,EAAOxC,EAEX,IAAK5B,EAAI,EAAGA,EAAI0E,IAAO1E,EAAG,CACtBgF,EAAMnB,EAAE7D,GACR,IAAK,IAAIiF,EAAI,EAAGA,EAAIN,IAAOM,EAEvBF,EAAUC,EADJlB,EAAEmB,GACcf,EAAElE,EAAIiF,GAC5Bd,EAAQhB,KAAKC,MAAM2B,EAAUX,GAC7BF,EAAElE,EAAIiF,GAAKF,EAAUZ,EAAQC,EAC7BF,EAAElE,EAAIiF,EAAI,IAAMd,CAExB,CAEA,OADAb,EAAKY,GACEA,CACX,CAEA,SAASgB,EAAcrB,EAAGC,GACtB,IAIIiB,EAAS/E,EAJTuE,EAAIV,EAAEnD,OACNwD,EAAI,IAAI9C,MAAMmD,GACdH,EAAOxC,EACPuC,EAAQ,EAEZ,IAAKnE,EAAI,EAAGA,EAAIuE,EAAGvE,IACf+E,EAAUlB,EAAE7D,GAAK8D,EAAIK,EACrBA,EAAQhB,KAAKC,MAAM2B,EAAUX,GAC7BF,EAAElE,GAAK+E,EAAUZ,EAAQC,EAE7B,KAAOD,EAAQ,GACXD,EAAElE,KAAOmE,EAAQC,EACjBD,EAAQhB,KAAKC,MAAMe,EAAQC,GAE/B,OAAOF,CACX,CAEA,SAASiB,EAAU1B,EAAGP,GAElB,IADA,IAAIgB,EAAI,GACDhB,KAAM,GAAGgB,EAAEnD,KAAK,GACvB,OAAOmD,EAAEkB,OAAO3B,EACpB,CAEA,SAAS4B,EAAkB5B,EAAG6B,GAC1B,IAAIpC,EAAIC,KAAKoC,IAAI9B,EAAE/C,OAAQ4E,EAAE5E,QAE7B,GAAIwC,GAAK,GAAI,OAAO4B,EAAarB,EAAG6B,GACpCpC,EAAIC,KAAKQ,KAAKT,EAAI,GAElB,IAAIY,EAAIL,EAAE+B,MAAMtC,GACZW,EAAIJ,EAAE+B,MAAM,EAAGtC,GACfuC,EAAIH,EAAEE,MAAMtC,GACZwC,EAAIJ,EAAEE,MAAM,EAAGtC,GAEfyC,EAAKN,EAAkBxB,EAAG6B,GAC1BE,EAAKP,EAAkBvB,EAAG2B,GAC1BI,EAAOR,EAAkBhB,EAAOR,EAAGC,GAAIO,EAAOqB,EAAGD,IAEjDV,EAAUV,EAAOA,EAAOsB,EAAIR,EAAUX,EAASA,EAASqB,EAAMF,GAAKC,GAAK1C,IAAKiC,EAAUS,EAAI,EAAI1C,IAEnG,OADAI,EAAKyB,GACEA,CACX,CA8BA,SAASe,EAAsBjC,EAAGC,EAAGlB,GACjC,OACW,IAAIF,EADXmB,EAAIjC,EACkBsD,EAAcpB,EAAGD,GAErBiB,EAAahB,EAAG/B,EAAa8B,IAFJjB,EAGnD,CAuBA,SAASmD,EAAOlC,GAEZ,IAGIkB,EAASZ,EAAOnE,EAAGgF,EAHnBT,EAAIV,EAAEnD,OACNwD,EAAIV,EAAYe,EAAIA,GACpBH,EAAOxC,EAEX,IAAK5B,EAAI,EAAGA,EAAIuE,EAAGvE,IAAK,CAEpBmE,EAAQ,GADRa,EAAMnB,EAAE7D,IACUgF,EAClB,IAAK,IAAIC,EAAIjF,EAAGiF,EAAIV,EAAGU,IAEnBF,EAAeC,EADTnB,EAAEoB,GACE,EAAkBf,EAAElE,EAAIiF,GAAKd,EACvCA,EAAQhB,KAAKC,MAAM2B,EAAUX,GAC7BF,EAAElE,EAAIiF,GAAKF,EAAUZ,EAAQC,EAEjCF,EAAElE,EAAIuE,GAAKJ,CACf,CAEA,OADAb,EAAKY,GACEA,CACX,CA4GA,SAAS8B,EAAYrD,EAAOsD,GACxB,IAGIjG,EAAGkG,EAAGC,EAAWC,EAHjB1F,EAASiC,EAAMjC,OACf2F,EAAW7C,EAAY9C,GAI3B,IADAyF,EAAY,EACPnG,EAAIU,EAAS,EAAGV,GAAK,IAAKA,EAG3BmG,GAFAC,EAJOxE,IAIGuE,EAAmBxD,EAAM3C,KACnCkG,EAAIxC,EAAS0C,EAAUH,IACGA,EAC1BI,EAASrG,GAAS,EAAJkG,EAElB,MAAO,CAACG,EAAsB,EAAZF,EACtB,CAEA,SAASG,EAAU/G,EAAM6C,GACrB,IAAIO,EAAOO,EAAIV,EAAWJ,GAC1B,GAAIH,EACA,MAAO,CAAC,IAAIe,EAAazD,EAAKoD,MAAQO,EAAEP,OAAQ,IAAIK,EAAazD,EAAKoD,MAAQO,EAAEP,QAEpF,IACI0D,EADAxC,EAAItE,EAAKoD,MAAOmB,EAAIZ,EAAEP,MAE1B,GAAU,IAANmB,EAAS,MAAM,IAAIxC,MAAM,yBAC7B,GAAI/B,EAAKuD,QACL,OAAII,EAAEJ,QACK,CAAC,IAAIC,EAAaW,EAASG,EAAIC,IAAK,IAAIf,EAAac,EAAIC,IAE7D,CAAC3B,EAAQ,GAAI5C,GAExB,GAAI2D,EAAEJ,QAAS,CACX,GAAU,IAANgB,EAAS,MAAO,CAACvE,EAAM4C,EAAQ,IACnC,IAAU,GAAN2B,EAAS,MAAO,CAACvE,EAAKgH,SAAUpE,EAAQ,IAC5C,IAAIqE,EAAMrD,KAAKqD,IAAI1C,GACnB,GAAI0C,EAAM5E,EAAM,CAEZyE,EAAWhD,GADXV,EAAQqD,EAAYnC,EAAG2C,IACO,IAC9B,IAAIL,EAAYxD,EAAM,GAEtB,OADIpD,EAAKqD,OAAMuD,GAAaA,GACJ,iBAAbE,GACH9G,EAAKqD,OAASM,EAAEN,OAAMyD,GAAYA,GAC/B,CAAC,IAAItD,EAAasD,GAAW,IAAItD,EAAaoD,KAElD,CAAC,IAAIzD,EAAW2D,EAAU9G,EAAKqD,OAASM,EAAEN,MAAO,IAAIG,EAAaoD,GAC7E,CACArC,EAAI/B,EAAayE,EACrB,CACA,IAAIC,EAAalD,EAAWM,EAAGC,GAC/B,IAAoB,IAAhB2C,EAAmB,MAAO,CAACtE,EAAQ,GAAI5C,GAC3C,GAAmB,IAAfkH,EAAkB,MAAO,CAACtE,EAAQ5C,EAAKqD,OAASM,EAAEN,KAAO,GAAK,GAAIT,EAAQ,IAI1EQ,EADAkB,EAAEnD,OAASoD,EAAEpD,QAAU,IA/I/B,SAAiBmD,EAAGC,GAChB,IASI4C,EAAeC,EAAOxC,EAAOS,EAAQ5E,EAAGuE,EAAG2B,EAT3CxB,EAAMb,EAAEnD,OACRiE,EAAMb,EAAEpD,OACR0D,EAAOxC,EACPgF,EAASpD,EAAYM,EAAEpD,QACvBmG,EAA8B/C,EAAEa,EAAM,GAEtCsB,EAAS9C,KAAKQ,KAAKS,GAAQ,EAAIyC,IAC/BV,EAAYjB,EAAcrB,EAAGoC,GAC7BG,EAAUlB,EAAcpB,EAAGmC,GAK/B,IAHIE,EAAUzF,QAAUgE,GAAKyB,EAAUpF,KAAK,GAC5CqF,EAAQrF,KAAK,GACb8F,EAA8BT,EAAQzB,EAAM,GACvCgC,EAAQjC,EAAMC,EAAKgC,GAAS,EAAGA,IAAS,CASzC,IARAD,EAAgBtC,EAAO,EACnB+B,EAAUQ,EAAQhC,KAASkC,IAC3BH,EAAgBvD,KAAKC,OAAO+C,EAAUQ,EAAQhC,GAAOP,EAAO+B,EAAUQ,EAAQhC,EAAM,IAAMkC,IAG9F1C,EAAQ,EACRS,EAAS,EACTL,EAAI6B,EAAQ1F,OACPV,EAAI,EAAGA,EAAIuE,EAAGvE,IACfmE,GAASuC,EAAgBN,EAAQpG,GACjCkG,EAAI/C,KAAKC,MAAMe,EAAQC,GACvBQ,GAAUuB,EAAUQ,EAAQ3G,IAAMmE,EAAQ+B,EAAI9B,GAC9CD,EAAQ+B,EACJtB,EAAS,GACTuB,EAAUQ,EAAQ3G,GAAK4E,EAASR,EAChCQ,GAAU,IAEVuB,EAAUQ,EAAQ3G,GAAK4E,EACvBA,EAAS,GAGjB,KAAkB,IAAXA,GAAc,CAGjB,IAFA8B,GAAiB,EACjBvC,EAAQ,EACHnE,EAAI,EAAGA,EAAIuE,EAAGvE,KACfmE,GAASgC,EAAUQ,EAAQ3G,GAAKoE,EAAOgC,EAAQpG,IACnC,GACRmG,EAAUQ,EAAQ3G,GAAKmE,EAAQC,EAC/BD,EAAQ,IAERgC,EAAUQ,EAAQ3G,GAAKmE,EACvBA,EAAQ,GAGhBS,GAAUT,CACd,CACAyC,EAAOD,GAASD,CACpB,CAGA,OADAP,EAAYH,EAAYG,EAAWF,GAAQ,GACpC,CAAC5C,EAAauD,GAASvD,EAAa8C,GAC/C,CAwFgBW,CAAQjD,EAAGC,GAtF3B,SAAiBD,EAAGC,GAQhB,IANA,IAKIiD,EAAOC,EAAMC,EAAOC,EAAOC,EAL3BzC,EAAMb,EAAEnD,OACRiE,EAAMb,EAAEpD,OACRkG,EAAS,GACTQ,EAAO,GACPhD,EAAOxC,EAEJ8C,GAGH,GAFA0C,EAAKC,QAAQxD,IAAIa,IACjBpB,EAAK8D,GACD7D,EAAW6D,EAAMtD,GAAK,EACtB8C,EAAO7F,KAAK,OADhB,CAKAkG,EAAQG,GADRJ,EAAOI,EAAK1G,QACQ,GAAK0D,EAAOgD,EAAKJ,EAAO,GAC5CE,EAAQpD,EAAEa,EAAM,GAAKP,EAAON,EAAEa,EAAM,GAChCqC,EAAOrC,IACPsC,GAASA,EAAQ,GAAK7C,GAE1B2C,EAAQ5D,KAAKQ,KAAKsD,EAAQC,GAC1B,EAAG,CAEC,GAAI3D,EADJ4D,EAAQjC,EAAcpB,EAAGiD,GACHK,IAAS,EAAG,MAClCL,GACJ,OAASA,GACTH,EAAO7F,KAAKgG,GACZK,EAAO5C,EAAS4C,EAAMD,EAdtB,CAiBJ,OADAP,EAAOU,UACA,CAACjE,EAAauD,GAASvD,EAAa+D,GAC/C,CAuDiBG,CAAQ1D,EAAGC,GAExBuC,EAAW1D,EAAM,GACjB,IAAI6E,EAAQjI,EAAKqD,OAASM,EAAEN,KACxB6E,EAAM9E,EAAM,GACZ+E,EAAQnI,EAAKqD,KASjB,MARwB,iBAAbyD,GACHmB,IAAOnB,GAAYA,GACvBA,EAAW,IAAItD,EAAasD,IACzBA,EAAW,IAAI3D,EAAW2D,EAAUmB,GACxB,iBAARC,GACHC,IAAOD,GAAOA,GAClBA,EAAM,IAAI1E,EAAa0E,IACpBA,EAAM,IAAI/E,EAAW+E,EAAKC,GAC1B,CAACrB,EAAUoB,EACtB,CAuGA,SAASlE,EAAWM,EAAGC,GACnB,GAAID,EAAEnD,SAAWoD,EAAEpD,OACf,OAAOmD,EAAEnD,OAASoD,EAAEpD,OAAS,GAAK,EAEtC,IAAK,IAAIV,EAAI6D,EAAEnD,OAAS,EAAGV,GAAK,EAAGA,IAC/B,GAAI6D,EAAE7D,KAAO8D,EAAE9D,GAAI,OAAO6D,EAAE7D,GAAK8D,EAAE9D,GAAK,GAAK,EAEjD,OAAO,CACX,CAmLA,SAAS2H,EAAavF,GAClB,IAAIc,EAAId,EAAEoE,MACV,OAAItD,EAAE0E,cACF1E,EAAE2E,OAAO,IAAM3E,EAAE2E,OAAO,IAAM3E,EAAE2E,OAAO,OACvC3E,EAAE4E,UAAY5E,EAAE6E,cAAc,IAAM7E,EAAE6E,cAAc,QACpD7E,EAAE8E,OAAO,UAAb,GAEJ,CAEA,SAASC,EAAgB/E,EAAGW,GAKxB,IAJA,IAGI4B,EAAMzF,EAAGyD,EAHTyE,EAAQhF,EAAEiF,OACVrE,EAAIoE,EACJhE,EAAI,EAEDJ,EAAEgE,UAAUhE,EAAIA,EAAEsE,OAAO,GAAIlE,IACpCmE,EAAM,IAAKrI,EAAI,EAAGA,EAAI6D,EAAEnD,OAAQV,IAC5B,IAAIkD,EAAE8E,OAAOnE,EAAE7D,OACfyD,EAAI6E,EAAOzE,EAAE7D,IAAIuI,OAAOzE,EAAGZ,IACrB0E,WAAYnE,EAAEoE,OAAOK,GAA3B,CACA,IAAKzC,EAAIvB,EAAI,EAAQ,GAALuB,EAAQA,IAAK,CAEzB,IADAhC,EAAIA,EAAEsC,SAAS0B,IAAIvE,IACb0E,SAAU,OAAO,EACvB,GAAInE,EAAEoE,OAAOK,GAAQ,SAASG,CAClC,CACA,OAAO,CANoC,CAQ/C,OAAO,CACX,CA33BA3F,EAAW8F,UAAYC,OAAOC,OAAOvG,EAAQqG,WAO7CzF,EAAayF,UAAYC,OAAOC,OAAOvG,EAAQqG,WAK/CxF,EAAawF,UAAYC,OAAOC,OAAOvG,EAAQqG,WA4F/C9F,EAAW8F,UAAU5E,IAAM,SAAUxB,GACjC,IAAIc,EAAIV,EAAWJ,GACnB,GAAIS,KAAKD,OAASM,EAAEN,KAChB,OAAOC,KAAK2B,SAAStB,EAAEqD,UAE3B,IAAI1C,EAAIhB,KAAKF,MAAOmB,EAAIZ,EAAEP,MAC1B,OAAIO,EAAEJ,QACK,IAAIJ,EAAW4B,EAAST,EAAGV,KAAKqD,IAAI1C,IAAKjB,KAAKD,MAElD,IAAIF,EAAW2B,EAAOR,EAAGC,GAAIjB,KAAKD,KAC7C,EACAF,EAAW8F,UAAUG,KAAOjG,EAAW8F,UAAU5E,IAEjDb,EAAayF,UAAU5E,IAAM,SAAUxB,GACnC,IAAIc,EAAIV,EAAWJ,GACfyB,EAAIhB,KAAKF,MACb,GAAIkB,EAAI,IAAMX,EAAEN,KACZ,OAAOC,KAAK2B,SAAStB,EAAEqD,UAE3B,IAAIzC,EAAIZ,EAAEP,MACV,GAAIO,EAAEJ,QAAS,CACX,GAAIG,EAAUY,EAAIC,GAAI,OAAO,IAAIf,EAAac,EAAIC,GAClDA,EAAI/B,EAAaoB,KAAKqD,IAAI1C,GAC9B,CACA,OAAO,IAAIpB,EAAW4B,EAASR,EAAGX,KAAKqD,IAAI3C,IAAKA,EAAI,EACxD,EACAd,EAAayF,UAAUG,KAAO5F,EAAayF,UAAU5E,IAErDZ,EAAawF,UAAU5E,IAAM,SAAUxB,GACnC,OAAO,IAAIY,EAAaH,KAAKF,MAAQH,EAAWJ,GAAGO,MACvD,EACAK,EAAawF,UAAUG,KAAO3F,EAAawF,UAAU5E,IAoErDlB,EAAW8F,UAAUhE,SAAW,SAAUpC,GACtC,IAAIc,EAAIV,EAAWJ,GACnB,GAAIS,KAAKD,OAASM,EAAEN,KAChB,OAAOC,KAAKe,IAAIV,EAAEqD,UAEtB,IAAI1C,EAAIhB,KAAKF,MAAOmB,EAAIZ,EAAEP,MAC1B,OAAIO,EAAEJ,QACK+B,EAAchB,EAAGV,KAAKqD,IAAI1C,GAAIjB,KAAKD,MA1ClD,SAAqBiB,EAAGC,EAAGlB,GACvB,IAAID,EAQJ,OAPIY,EAAWM,EAAGC,IAAM,EACpBnB,EAAQ6B,EAASX,EAAGC,IAEpBnB,EAAQ6B,EAASV,EAAGD,GACpBjB,GAAQA,GAGS,iBADrBD,EAAQU,EAAaV,KAEbC,IAAMD,GAASA,GACZ,IAAII,EAAaJ,IAErB,IAAID,EAAWC,EAAOC,EACjC,CA6BWgG,CAAY/E,EAAGC,EAAGjB,KAAKD,KAClC,EACAF,EAAW8F,UAAUK,MAAQnG,EAAW8F,UAAUhE,SAElDzB,EAAayF,UAAUhE,SAAW,SAAUpC,GACxC,IAAIc,EAAIV,EAAWJ,GACfyB,EAAIhB,KAAKF,MACb,GAAIkB,EAAI,IAAMX,EAAEN,KACZ,OAAOC,KAAKe,IAAIV,EAAEqD,UAEtB,IAAIzC,EAAIZ,EAAEP,MACV,OAAIO,EAAEJ,QACK,IAAIC,EAAac,EAAIC,GAEzBe,EAAcf,EAAGX,KAAKqD,IAAI3C,GAAIA,GAAK,EAC9C,EACAd,EAAayF,UAAUK,MAAQ9F,EAAayF,UAAUhE,SAEtDxB,EAAawF,UAAUhE,SAAW,SAAUpC,GACxC,OAAO,IAAIY,EAAaH,KAAKF,MAAQH,EAAWJ,GAAGO,MACvD,EACAK,EAAawF,UAAUK,MAAQ7F,EAAawF,UAAUhE,SAEtD9B,EAAW8F,UAAUjC,OAAS,WAC1B,OAAO,IAAI7D,EAAWG,KAAKF,OAAQE,KAAKD,KAC5C,EACAG,EAAayF,UAAUjC,OAAS,WAC5B,IAAI3D,EAAOC,KAAKD,KACZkG,EAAQ,IAAI/F,GAAcF,KAAKF,OAEnC,OADAmG,EAAMlG,MAAQA,EACPkG,CACX,EACA9F,EAAawF,UAAUjC,OAAS,WAC5B,OAAO,IAAIvD,GAAcH,KAAKF,MAClC,EAEAD,EAAW8F,UAAUhC,IAAM,WACvB,OAAO,IAAI9D,EAAWG,KAAKF,OAAO,EACtC,EACAI,EAAayF,UAAUhC,IAAM,WACzB,OAAO,IAAIzD,EAAaI,KAAKqD,IAAI3D,KAAKF,OAC1C,EACAK,EAAawF,UAAUhC,IAAM,WACzB,OAAO,IAAIxD,EAAaH,KAAKF,OAAS,EAAIE,KAAKF,OAASE,KAAKF,MACjE,EA0EAD,EAAW8F,UAAUO,SAAW,SAAU3G,GACtC,IAGIoE,EARcwC,EAAIC,EAKlB/F,EAAIV,EAAWJ,GACfyB,EAAIhB,KAAKF,MAAOmB,EAAIZ,EAAEP,MACtBC,EAAOC,KAAKD,OAASM,EAAEN,KAE3B,GAAIM,EAAEJ,QAAS,CACX,GAAU,IAANgB,EAAS,OAAO3B,EAAQ,GAC5B,GAAU,IAAN2B,EAAS,OAAOjB,KACpB,IAAW,IAAPiB,EAAU,OAAOjB,KAAK0D,SAE1B,IADAC,EAAMrD,KAAKqD,IAAI1C,IACLlC,EACN,OAAO,IAAIc,EAAWwC,EAAcrB,EAAG2C,GAAM5D,GAEjDkB,EAAI/B,EAAayE,EACrB,CACA,OACW,IAAI9D,GAnBP,MADUsG,EAmBDnF,EAAEnD,QAlBE,MADCuI,EAmBKnF,EAAEpD,QAlBK,MAAWsI,EAAKC,EAAK,EAmB7B5D,EAAkBxB,EAAGC,GACzBgB,EAAajB,EAAGC,GADalB,EAEvD,EAEAF,EAAW8F,UAAUU,MAAQxG,EAAW8F,UAAUO,SAQlDhG,EAAayF,UAAUW,iBAAmB,SAAUtF,GAChD,OAAIZ,EAAUY,EAAElB,MAAQE,KAAKF,OAClB,IAAII,EAAac,EAAElB,MAAQE,KAAKF,OAEpCmD,EAAsB3C,KAAKqD,IAAI3C,EAAElB,OAAQZ,EAAaoB,KAAKqD,IAAI3D,KAAKF,QAASE,KAAKD,OAASiB,EAAEjB,KACxG,EACAF,EAAW8F,UAAUW,iBAAmB,SAAUtF,GAC9C,OAAgB,IAAZA,EAAElB,MAAoBR,EAAQ,GAClB,IAAZ0B,EAAElB,MAAoBE,MACT,IAAbgB,EAAElB,MAAqBE,KAAK0D,SACzBT,EAAsB3C,KAAKqD,IAAI3C,EAAElB,OAAQE,KAAKF,MAAOE,KAAKD,OAASiB,EAAEjB,KAChF,EACAG,EAAayF,UAAUO,SAAW,SAAU3G,GACxC,OAAOI,EAAWJ,GAAG+G,iBAAiBtG,KAC1C,EACAE,EAAayF,UAAUU,MAAQnG,EAAayF,UAAUO,SAEtD/F,EAAawF,UAAUO,SAAW,SAAU3G,GACxC,OAAO,IAAIY,EAAaH,KAAKF,MAAQH,EAAWJ,GAAGO,MACvD,EACAK,EAAawF,UAAUU,MAAQlG,EAAawF,UAAUO,SAuBtDrG,EAAW8F,UAAUzC,OAAS,WAC1B,OAAO,IAAIrD,EAAWqD,EAAOlD,KAAKF,QAAQ,EAC9C,EAEAI,EAAayF,UAAUzC,OAAS,WAC5B,IAAIpD,EAAQE,KAAKF,MAAQE,KAAKF,MAC9B,OAAIM,EAAUN,GAAe,IAAII,EAAaJ,GACvC,IAAID,EAAWqD,EAAOhE,EAAaoB,KAAKqD,IAAI3D,KAAKF,UAAU,EACtE,EAEAK,EAAawF,UAAUzC,OAAS,SAAU3D,GACtC,OAAO,IAAIY,EAAaH,KAAKF,MAAQE,KAAKF,MAC9C,EAoKAD,EAAW8F,UAAUY,OAAS,SAAUhH,GACpC,IAAIwE,EAASN,EAAUzD,KAAMT,GAC7B,MAAO,CACHiE,SAAUO,EAAO,GACjBT,UAAWS,EAAO,GAE1B,EACA5D,EAAawF,UAAUY,OAASrG,EAAayF,UAAUY,OAAS1G,EAAW8F,UAAUY,OAGrF1G,EAAW8F,UAAUJ,OAAS,SAAUhG,GACpC,OAAOkE,EAAUzD,KAAMT,GAAG,EAC9B,EACAY,EAAawF,UAAUa,KAAOrG,EAAawF,UAAUJ,OAAS,SAAUhG,GACpE,OAAO,IAAIY,EAAaH,KAAKF,MAAQH,EAAWJ,GAAGO,MACvD,EACAI,EAAayF,UAAUa,KAAOtG,EAAayF,UAAUJ,OAAS1F,EAAW8F,UAAUa,KAAO3G,EAAW8F,UAAUJ,OAE/G1F,EAAW8F,UAAUf,IAAM,SAAUrF,GACjC,OAAOkE,EAAUzD,KAAMT,GAAG,EAC9B,EACAY,EAAawF,UAAUf,IAAMzE,EAAawF,UAAUrC,UAAY,SAAU/D,GACtE,OAAO,IAAIY,EAAaH,KAAKF,MAAQH,EAAWJ,GAAGO,MACvD,EACAI,EAAayF,UAAUrC,UAAYpD,EAAayF,UAAUf,IAAM/E,EAAW8F,UAAUrC,UAAYzD,EAAW8F,UAAUf,IAEtH/E,EAAW8F,UAAUc,IAAM,SAAUlH,GACjC,IAGIO,EAAOc,EAAG6B,EAHVpC,EAAIV,EAAWJ,GACfyB,EAAIhB,KAAKF,MACTmB,EAAIZ,EAAEP,MAEV,GAAU,IAANmB,EAAS,OAAO3B,EAAQ,GAC5B,GAAU,IAAN0B,EAAS,OAAO1B,EAAQ,GAC5B,GAAU,IAAN0B,EAAS,OAAO1B,EAAQ,GAC5B,IAAW,IAAP0B,EAAU,OAAOX,EAAE4E,SAAW3F,EAAQ,GAAKA,GAAS,GACxD,GAAIe,EAAEN,KACF,OAAOT,EAAQ,GAEnB,IAAKe,EAAEJ,QAAS,MAAM,IAAIxB,MAAM,gBAAkB4B,EAAEqG,WAAa,kBACjE,GAAI1G,KAAKC,SACDG,EAAUN,EAAQQ,KAAKmG,IAAIzF,EAAGC,IAC9B,OAAO,IAAIf,EAAaW,EAASf,IAIzC,IAFAc,EAAIZ,KACJyC,EAAInD,EAAQ,IAEA,EAAJ2B,IACAwB,EAAIA,EAAE4D,MAAMzF,KACVK,GAEI,IAANA,GACJA,GAAK,EACLL,EAAIA,EAAEsC,SAEV,OAAOT,CACX,EACAvC,EAAayF,UAAUc,IAAM5G,EAAW8F,UAAUc,IAElDtG,EAAawF,UAAUc,IAAM,SAAUlH,GACnC,IAAIc,EAAIV,EAAWJ,GACfyB,EAAIhB,KAAKF,MAAOmB,EAAIZ,EAAEP,MACtB6G,EAAKtH,OAAO,GAAIuH,EAAKvH,OAAO,GAAIwH,EAAKxH,OAAO,GAChD,GAAI4B,IAAM0F,EAAI,OAAOrH,EAAQ,GAC7B,GAAI0B,IAAM2F,EAAI,OAAOrH,EAAQ,GAC7B,GAAI0B,IAAM4F,EAAI,OAAOtH,EAAQ,GAC7B,GAAI0B,IAAM3B,QAAQ,GAAI,OAAOgB,EAAE4E,SAAW3F,EAAQ,GAAKA,GAAS,GAChE,GAAIe,EAAEyG,aAAc,OAAO,IAAI3G,EAAawG,GAG5C,IAFA,IAAI/F,EAAIZ,KACJyC,EAAInD,EAAQ,IAEP2B,EAAI2F,KAAQA,IACbnE,EAAIA,EAAE4D,MAAMzF,KACVK,GAEFA,IAAM0F,GACV1F,GAAK4F,EACLjG,EAAIA,EAAEsC,SAEV,OAAOT,CACX,EAEA5C,EAAW8F,UAAUD,OAAS,SAAUqB,EAAKnC,GAGzC,GAFAmC,EAAMpH,EAAWoH,IACjBnC,EAAMjF,EAAWiF,IACToC,SAAU,MAAM,IAAIvI,MAAM,qCAClC,IAAI4C,EAAI/B,EAAQ,GACZiC,EAAOvB,KAAK4E,IAAIA,GAKpB,IAJImC,EAAID,eACJC,EAAMA,EAAIb,SAAS5G,GAAS,IAC5BiC,EAAOA,EAAK0F,OAAOrC,IAEhBmC,EAAIG,cAAc,CACrB,GAAI3F,EAAKyF,SAAU,OAAO1H,EAAQ,GAC9ByH,EAAII,UAAS9F,EAAIA,EAAE6E,SAAS3E,GAAMqD,IAAIA,IAC1CmC,EAAMA,EAAIxB,OAAO,GACjBhE,EAAOA,EAAK2B,SAAS0B,IAAIA,EAC7B,CACA,OAAOvD,CACX,EACAlB,EAAawF,UAAUD,OAASxF,EAAayF,UAAUD,OAAS7F,EAAW8F,UAAUD,OAYrF7F,EAAW8F,UAAUjF,WAAa,SAAUnB,GACxC,IAAIc,EAAIV,EAAWJ,GACfyB,EAAIhB,KAAKF,MACTmB,EAAIZ,EAAEP,MACV,OAAIO,EAAEJ,QAAgB,EACfS,EAAWM,EAAGC,EACzB,EACAf,EAAayF,UAAUjF,WAAa,SAAUnB,GAC1C,IAAIc,EAAIV,EAAWJ,GACfyB,EAAIV,KAAKqD,IAAI3D,KAAKF,OAClBmB,EAAIZ,EAAEP,MACV,OAAIO,EAAEJ,QAEKe,KADPC,EAAIX,KAAKqD,IAAI1C,IACI,EAAID,EAAIC,EAAI,GAAK,GAE9B,CACZ,EACAd,EAAawF,UAAUjF,WAAa,SAAUnB,GAC1C,IAAIyB,EAAIhB,KAAKF,MACTmB,EAAItB,EAAWJ,GAAGO,MAGtB,OAFAkB,EAAIA,GAAK,EAAIA,GAAKA,MAClBC,EAAIA,GAAK,EAAIA,GAAKA,GACD,EAAID,EAAIC,EAAI,GAAK,CACtC,EAEApB,EAAW8F,UAAUyB,QAAU,SAAU7H,GAGrC,GAAIA,IAAM8H,IACN,OAAQ,EAEZ,GAAI9H,KAAM,IACN,OAAO,EAGX,IAAIc,EAAIV,EAAWJ,GACfyB,EAAIhB,KAAKF,MACTmB,EAAIZ,EAAEP,MACV,OAAIE,KAAKD,OAASM,EAAEN,KACTM,EAAEN,KAAO,GAAK,EAErBM,EAAEJ,QACKD,KAAKD,MAAQ,EAAI,EAErBW,EAAWM,EAAGC,IAAMjB,KAAKD,MAAQ,EAAI,EAChD,EACAF,EAAW8F,UAAU2B,UAAYzH,EAAW8F,UAAUyB,QAEtDlH,EAAayF,UAAUyB,QAAU,SAAU7H,GACvC,GAAIA,IAAM8H,IACN,OAAQ,EAEZ,GAAI9H,KAAM,IACN,OAAO,EAGX,IAAIc,EAAIV,EAAWJ,GACfyB,EAAIhB,KAAKF,MACTmB,EAAIZ,EAAEP,MACV,OAAIO,EAAEJ,QACKe,GAAKC,EAAI,EAAID,EAAIC,EAAI,GAAK,EAEjCD,EAAI,IAAMX,EAAEN,KACLiB,EAAI,GAAK,EAAI,EAEjBA,EAAI,EAAI,GAAK,CACxB,EACAd,EAAayF,UAAU2B,UAAYpH,EAAayF,UAAUyB,QAE1DjH,EAAawF,UAAUyB,QAAU,SAAU7H,GACvC,GAAIA,IAAM8H,IACN,OAAQ,EAEZ,GAAI9H,KAAM,IACN,OAAO,EAEX,IAAIyB,EAAIhB,KAAKF,MACTmB,EAAItB,EAAWJ,GAAGO,MACtB,OAAOkB,IAAMC,EAAI,EAAID,EAAIC,EAAI,GAAK,CACtC,EACAd,EAAawF,UAAU2B,UAAYnH,EAAawF,UAAUyB,QAE1DvH,EAAW8F,UAAUX,OAAS,SAAUzF,GACpC,OAA2B,IAApBS,KAAKoH,QAAQ7H,EACxB,EACAY,EAAawF,UAAU4B,GAAKpH,EAAawF,UAAUX,OAAS9E,EAAayF,UAAU4B,GAAKrH,EAAayF,UAAUX,OAASnF,EAAW8F,UAAU4B,GAAK1H,EAAW8F,UAAUX,OAEvKnF,EAAW8F,UAAU6B,UAAY,SAAUjI,GACvC,OAA2B,IAApBS,KAAKoH,QAAQ7H,EACxB,EACAY,EAAawF,UAAU8B,IAAMtH,EAAawF,UAAU6B,UAAYtH,EAAayF,UAAU8B,IAAMvH,EAAayF,UAAU6B,UAAY3H,EAAW8F,UAAU8B,IAAM5H,EAAW8F,UAAU6B,UAEhL3H,EAAW8F,UAAU+B,QAAU,SAAUnI,GACrC,OAAOS,KAAKoH,QAAQ7H,GAAK,CAC7B,EACAY,EAAawF,UAAUgC,GAAKxH,EAAawF,UAAU+B,QAAUxH,EAAayF,UAAUgC,GAAKzH,EAAayF,UAAU+B,QAAU7H,EAAW8F,UAAUgC,GAAK9H,EAAW8F,UAAU+B,QAEzK7H,EAAW8F,UAAUR,OAAS,SAAU5F,GACpC,OAAOS,KAAKoH,QAAQ7H,GAAK,CAC7B,EACAY,EAAawF,UAAUiC,GAAKzH,EAAawF,UAAUR,OAASjF,EAAayF,UAAUiC,GAAK1H,EAAayF,UAAUR,OAAStF,EAAW8F,UAAUiC,GAAK/H,EAAW8F,UAAUR,OAEvKtF,EAAW8F,UAAUkC,gBAAkB,SAAUtI,GAC7C,OAAOS,KAAKoH,QAAQ7H,IAAM,CAC9B,EACAY,EAAawF,UAAUmC,IAAM3H,EAAawF,UAAUkC,gBAAkB3H,EAAayF,UAAUmC,IAAM5H,EAAayF,UAAUkC,gBAAkBhI,EAAW8F,UAAUmC,IAAMjI,EAAW8F,UAAUkC,gBAE5LhI,EAAW8F,UAAUoC,eAAiB,SAAUxI,GAC5C,OAAOS,KAAKoH,QAAQ7H,IAAM,CAC9B,EACAY,EAAawF,UAAUqC,IAAM7H,EAAawF,UAAUoC,eAAiB7H,EAAayF,UAAUqC,IAAM9H,EAAayF,UAAUoC,eAAiBlI,EAAW8F,UAAUqC,IAAMnI,EAAW8F,UAAUoC,eAE1LlI,EAAW8F,UAAUV,OAAS,WAC1B,OAA+B,IAAP,EAAhBjF,KAAKF,MAAM,GACvB,EACAI,EAAayF,UAAUV,OAAS,WAC5B,OAA4B,IAAP,EAAbjF,KAAKF,MACjB,EACAK,EAAawF,UAAUV,OAAS,WAC5B,OAAQjF,KAAKF,MAAQT,OAAO,MAAQA,OAAO,EAC/C,EAEAQ,EAAW8F,UAAUwB,MAAQ,WACzB,OAA+B,IAAP,EAAhBnH,KAAKF,MAAM,GACvB,EACAI,EAAayF,UAAUwB,MAAQ,WAC3B,OAA4B,IAAP,EAAbnH,KAAKF,MACjB,EACAK,EAAawF,UAAUwB,MAAQ,WAC3B,OAAQnH,KAAKF,MAAQT,OAAO,MAAQA,OAAO,EAC/C,EAEAQ,EAAW8F,UAAUuB,WAAa,WAC9B,OAAQlH,KAAKD,IACjB,EACAG,EAAayF,UAAUuB,WAAa,WAChC,OAAOlH,KAAKF,MAAQ,CACxB,EACAK,EAAawF,UAAUuB,WAAahH,EAAayF,UAAUuB,WAE3DrH,EAAW8F,UAAUmB,WAAa,WAC9B,OAAO9G,KAAKD,IAChB,EACAG,EAAayF,UAAUmB,WAAa,WAChC,OAAO9G,KAAKF,MAAQ,CACxB,EACAK,EAAawF,UAAUmB,WAAa5G,EAAayF,UAAUmB,WAE3DjH,EAAW8F,UAAUZ,OAAS,WAC1B,OAAO,CACX,EACA7E,EAAayF,UAAUZ,OAAS,WAC5B,OAAgC,IAAzBzE,KAAKqD,IAAI3D,KAAKF,MACzB,EACAK,EAAawF,UAAUZ,OAAS,WAC5B,OAAO/E,KAAK2D,MAAM7D,QAAUT,OAAO,EACvC,EAEAQ,EAAW8F,UAAUqB,OAAS,WAC1B,OAAO,CACX,EACA9G,EAAayF,UAAUqB,OAAS,WAC5B,OAAsB,IAAfhH,KAAKF,KAChB,EACAK,EAAawF,UAAUqB,OAAS,WAC5B,OAAOhH,KAAKF,QAAUT,OAAO,EACjC,EAEAQ,EAAW8F,UAAUT,cAAgB,SAAU3F,GAC3C,IAAIc,EAAIV,EAAWJ,GACnB,OAAIc,EAAE2G,aACF3G,EAAE0E,WACkB,IAApB1E,EAAEK,WAAW,GAAiBV,KAAKiF,SAChCjF,KAAK4E,IAAIvE,GAAG2G,UACvB,EACA7G,EAAawF,UAAUT,cAAgBhF,EAAayF,UAAUT,cAAgBrF,EAAW8F,UAAUT,cAgCnGrF,EAAW8F,UAAUsC,QAAU,SAAUC,GACrC,IAAID,EAAUnD,EAAa9E,MAC3B,GAAIiI,IAAYE,EAAW,OAAOF,EAClC,IAAI5H,EAAIL,KAAK2D,MACTyE,EAAO/H,EAAEgI,YACb,GAAID,GAAQ,GACR,OAAOhD,EAAgB/E,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAGvE,IAFA,IAAIiI,EAAOhI,KAAKiI,IAAI,GAAKH,EAAKI,aAC1BC,EAAInI,KAAKQ,MAAiB,IAAXoH,EAAoB,EAAI5H,KAAKmG,IAAI6B,EAAM,GAAMA,GACvDtH,EAAI,GAAI7D,EAAI,EAAGA,EAAIsL,EAAGtL,IAC3B6D,EAAE9C,KAAKuH,EAAOtI,EAAI,IAEtB,OAAOiI,EAAgB/E,EAAGW,EAC9B,EACAb,EAAawF,UAAUsC,QAAU/H,EAAayF,UAAUsC,QAAUpI,EAAW8F,UAAUsC,QAEvFpI,EAAW8F,UAAU+C,gBAAkB,SAAUC,EAAYC,GACzD,IAAIX,EAAUnD,EAAa9E,MAC3B,GAAIiI,IAAYE,EAAW,OAAOF,EAGlC,IAFA,IAAI5H,EAAIL,KAAK2D,MACT8E,EAAIE,IAAeR,EAAY,EAAIQ,EAC9B3H,EAAI,GAAI7D,EAAI,EAAGA,EAAIsL,EAAGtL,IAC3B6D,EAAE9C,KAAKuH,EAAOoD,YAAY,EAAGxI,EAAE2F,MAAM,GAAI4C,IAE7C,OAAOxD,EAAgB/E,EAAGW,EAC9B,EACAb,EAAawF,UAAU+C,gBAAkBxI,EAAayF,UAAU+C,gBAAkB7I,EAAW8F,UAAU+C,gBAEvG7I,EAAW8F,UAAUsB,OAAS,SAAU5G,GAEpC,IADA,IAA8EgD,EAAGyF,EAAOC,EAApFN,EAAIhD,EAAOuD,KAAMC,EAAOxD,EAAOyD,IAAK7H,EAAI1B,EAAWU,GAAI8I,EAAOnJ,KAAK2D,OAC/DwF,EAAKnC,UACT3D,EAAIhC,EAAEkE,OAAO4D,GACbL,EAAQL,EACRM,EAAQ1H,EACRoH,EAAIQ,EACJ5H,EAAI8H,EACJF,EAAOH,EAAMnH,SAAS0B,EAAE6C,SAAS+C,IACjCE,EAAOJ,EAAMpH,SAAS0B,EAAE6C,SAASiD,IAErC,IAAK9H,EAAE0D,SAAU,MAAM,IAAItG,MAAMuB,KAAK0G,WAAa,QAAUrG,EAAEqG,WAAa,qBAI5E,OAHsB,IAAlB+B,EAAErB,QAAQ,KACVqB,EAAIA,EAAE1H,IAAIV,IAEVL,KAAK8G,aACE2B,EAAE/E,SAEN+E,CACX,EAEAtI,EAAawF,UAAUsB,OAAS/G,EAAayF,UAAUsB,OAASpH,EAAW8F,UAAUsB,OAErFpH,EAAW8F,UAAUH,KAAO,WACxB,IAAI1F,EAAQE,KAAKF,MACjB,OAAIE,KAAKD,KACEiC,EAAclC,EAAO,EAAGE,KAAKD,MAEjC,IAAIF,EAAW4B,EAAS3B,EAAO,GAAIE,KAAKD,KACnD,EACAG,EAAayF,UAAUH,KAAO,WAC1B,IAAI1F,EAAQE,KAAKF,MACjB,OAAIA,EAAQ,EAAId,EAAgB,IAAIkB,EAAaJ,EAAQ,GAClD,IAAID,EAAWZ,GAAa,EACvC,EACAkB,EAAawF,UAAUH,KAAO,WAC1B,OAAO,IAAIrF,EAAaH,KAAKF,MAAQT,OAAO,GAChD,EAEAQ,EAAW8F,UAAUL,KAAO,WACxB,IAAIxF,EAAQE,KAAKF,MACjB,OAAIE,KAAKD,KACE,IAAIF,EAAW4B,EAAS3B,EAAO,IAAI,GAEvCkC,EAAclC,EAAO,EAAGE,KAAKD,KACxC,EACAG,EAAayF,UAAUL,KAAO,WAC1B,IAAIxF,EAAQE,KAAKF,MACjB,OAAIA,EAAQ,GAAKd,EAAgB,IAAIkB,EAAaJ,EAAQ,GACnD,IAAID,EAAWZ,GAAa,EACvC,EACAkB,EAAawF,UAAUL,KAAO,WAC1B,OAAO,IAAInF,EAAaH,KAAKF,MAAQT,OAAO,GAChD,EAGA,IADA,IAAI+J,EAAc,CAAC,GACZ,EAAIA,EAAYA,EAAYvL,OAAS,IAAMkB,GAAMqK,EAAYlL,KAAK,EAAIkL,EAAYA,EAAYvL,OAAS,IAC9G,IAAIwL,EAAgBD,EAAYvL,OAAQyL,EAAgBF,EAAYC,EAAgB,GAEpF,SAASE,EAAclJ,GACnB,OAAOC,KAAKqD,IAAItD,IAAMtB,CAC1B,CAqCA,SAASyK,EAAQ5I,EAAG6B,EAAGgH,GACnBhH,EAAI9C,EAAW8C,GAOf,IANA,IAAIiH,EAAQ9I,EAAEkG,aAAc6C,EAAQlH,EAAEqE,aAClC8C,EAAOF,EAAQ9I,EAAEiJ,MAAQjJ,EACzBkJ,EAAOH,EAAQlH,EAAEoH,MAAQpH,EACzBsH,EAAS,EAAGC,EAAS,EACrBC,EAAU,KAAMC,EAAU,KAC1BnG,EAAS,IACL6F,EAAK5C,WAAa8C,EAAK9C,UAE3B+C,GADAE,EAAUxG,EAAUmG,EAAMN,IACT,GAAGd,aAChBkB,IACAK,EAAST,EAAgB,EAAIS,GAIjCC,GADAE,EAAUzG,EAAUqG,EAAMR,IACT,GAAGd,aAChBmB,IACAK,EAASV,EAAgB,EAAIU,GAGjCJ,EAAOK,EAAQ,GACfH,EAAOI,EAAQ,GACfnG,EAAO7F,KAAKuL,EAAGM,EAAQC,IAG3B,IADA,IAAI9I,EAA2C,IAArCuI,EAAGC,EAAQ,EAAI,EAAGC,EAAQ,EAAI,GAAWlE,GAAQ,GAAKA,EAAO,GAC9DtI,EAAI4G,EAAOlG,OAAS,EAAGV,GAAK,EAAGA,GAAK,EACzC+D,EAAMA,EAAIgF,SAASoD,GAAevI,IAAI0E,EAAO1B,EAAO5G,KAExD,OAAO+D,CACX,CAjEArB,EAAW8F,UAAUrD,UAAY,SAAU/C,GACvC,IAAIc,EAAIV,EAAWJ,GAAGiJ,aACtB,IAAKe,EAAclJ,GACf,MAAM,IAAI5B,MAAM0L,OAAO9J,GAAK,+BAEhC,GAAIA,EAAI,EAAG,OAAOL,KAAKoK,YAAY/J,GACnC,IAAI0D,EAAS/D,KACb,GAAI+D,EAAOiD,SAAU,OAAOjD,EAC5B,KAAO1D,GAAKgJ,GACRtF,EAASA,EAAOmC,SAASoD,GACzBjJ,GAAKgJ,EAAgB,EAEzB,OAAOtF,EAAOmC,SAASkD,EAAY/I,GACvC,EACAF,EAAawF,UAAUrD,UAAYpC,EAAayF,UAAUrD,UAAYzC,EAAW8F,UAAUrD,UAE3FzC,EAAW8F,UAAUyE,WAAa,SAAU7K,GACxC,IAAI8K,EACAhK,EAAIV,EAAWJ,GAAGiJ,aACtB,IAAKe,EAAclJ,GACf,MAAM,IAAI5B,MAAM0L,OAAO9J,GAAK,+BAEhC,GAAIA,EAAI,EAAG,OAAOL,KAAKsC,WAAWjC,GAElC,IADA,IAAI0D,EAAS/D,KACNK,GAAKgJ,GAAe,CACvB,GAAItF,EAAOiD,UAAajD,EAAO+C,cAAgB/C,EAAOgB,SAAW,OAAOhB,EAExEA,GADAsG,EAAS5G,EAAUM,EAAQuF,IACX,GAAGxC,aAAeuD,EAAO,GAAG/E,OAAS+E,EAAO,GAC5DhK,GAAKgJ,EAAgB,CACzB,CAEA,OADAgB,EAAS5G,EAAUM,EAAQqF,EAAY/I,KACzB,GAAGyG,aAAeuD,EAAO,GAAG/E,OAAS+E,EAAO,EAC9D,EACAlK,EAAawF,UAAUyE,WAAalK,EAAayF,UAAUyE,WAAavK,EAAW8F,UAAUyE,WAkC7FvK,EAAW8F,UAAUkE,IAAM,WACvB,OAAO7J,KAAK0D,SAAS4B,MACzB,EACAnF,EAAawF,UAAUkE,IAAM3J,EAAayF,UAAUkE,IAAMhK,EAAW8F,UAAUkE,IAE/EhK,EAAW8F,UAAU2E,IAAM,SAAUjK,GACjC,OAAOmJ,EAAQxJ,KAAMK,GAAG,SAAUW,EAAGC,GAAK,OAAOD,EAAIC,CAAG,GAC5D,EACAd,EAAawF,UAAU2E,IAAMpK,EAAayF,UAAU2E,IAAMzK,EAAW8F,UAAU2E,IAE/EzK,EAAW8F,UAAU4E,GAAK,SAAUlK,GAChC,OAAOmJ,EAAQxJ,KAAMK,GAAG,SAAUW,EAAGC,GAAK,OAAOD,EAAIC,CAAG,GAC5D,EACAd,EAAawF,UAAU4E,GAAKrK,EAAayF,UAAU4E,GAAK1K,EAAW8F,UAAU4E,GAE7E1K,EAAW8F,UAAU6E,IAAM,SAAUnK,GACjC,OAAOmJ,EAAQxJ,KAAMK,GAAG,SAAUW,EAAGC,GAAK,OAAOD,EAAIC,CAAG,GAC5D,EACAd,EAAawF,UAAU6E,IAAMtK,EAAayF,UAAU6E,IAAM3K,EAAW8F,UAAU6E,IAE/E,IAAIC,EAAY,GAAK,GACrB,SAASC,EAASrK,GAGd,IAAId,EAAIc,EAAEP,MACNc,EAAiB,iBAANrB,EAAiBA,EAAIkL,EACf,iBAANlL,EAAiBA,EAAIF,OAAOoL,GAC/BlL,EAAE,GAAKA,EAAE,GAAKR,EAPQ,WAQlC,OAAO6B,GAAKA,CAChB,CAEA,SAAS+J,EAAiB7K,EAAOyB,GAC7B,GAAIA,EAAK+F,UAAUxH,IAAU,EAAG,CAC5B,IAAI5C,EAAMyN,EAAiB7K,EAAOyB,EAAK2B,OAAO3B,IAC1CqJ,EAAI1N,EAAI0N,EACRC,EAAI3N,EAAI2N,EACRpC,EAAImC,EAAE1E,SAAS3E,GACnB,OAAOkH,EAAEnB,UAAUxH,IAAU,EAAI,CAAE8K,EAAGnC,EAAGoC,EAAO,EAAJA,EAAQ,GAAM,CAAED,EAAGA,EAAGC,EAAO,EAAJA,EACzE,CACA,MAAO,CAAED,EAAGnF,EAAO,GAAIoF,EAAG,EAC9B,CAcA,SAASnI,EAAI1B,EAAGC,GAGZ,OAFAD,EAAIrB,EAAWqB,GACfC,EAAItB,EAAWsB,GACRD,EAAE0G,QAAQzG,GAAKD,EAAIC,CAC9B,CACA,SAAS6J,EAAI9J,EAAGC,GAGZ,OAFAD,EAAIrB,EAAWqB,GACfC,EAAItB,EAAWsB,GACRD,EAAEmE,OAAOlE,GAAKD,EAAIC,CAC7B,CACA,SAAS8J,EAAI/J,EAAGC,GAGZ,GAFAD,EAAIrB,EAAWqB,GAAG2C,MAClB1C,EAAItB,EAAWsB,GAAG0C,MACd3C,EAAEgE,OAAO/D,GAAI,OAAOD,EACxB,GAAIA,EAAEgG,SAAU,OAAO/F,EACvB,GAAIA,EAAE+F,SAAU,OAAOhG,EAEvB,IADA,IAAoB4B,EAAG6F,EAAnB5F,EAAIvD,EAAQ,GACT0B,EAAEiE,UAAYhE,EAAEgE,UACnBrC,EAAIkI,EAAIJ,EAAS1J,GAAI0J,EAASzJ,IAC9BD,EAAIA,EAAEuE,OAAO3C,GACb3B,EAAIA,EAAEsE,OAAO3C,GACbC,EAAIA,EAAEqD,SAAStD,GAEnB,KAAO5B,EAAEiE,UACLjE,EAAIA,EAAEuE,OAAOmF,EAAS1J,IAE1B,EAAG,CACC,KAAOC,EAAEgE,UACLhE,EAAIA,EAAEsE,OAAOmF,EAASzJ,IAEtBD,EAAE0G,QAAQzG,KACVwH,EAAIxH,EAAGA,EAAID,EAAGA,EAAIyH,GAEtBxH,EAAIA,EAAEU,SAASX,EACnB,QAAUC,EAAE+F,UACZ,OAAOnE,EAAEkC,SAAW/D,EAAIA,EAAEkF,SAASrD,EACvC,CAhDAhD,EAAW8F,UAAU0C,UAAY,WAC7B,IAAIhI,EAAIL,KAIR,OAHIK,EAAEiH,UAAU7B,EAAO,IAAM,IACzBpF,EAAIA,EAAEqD,SAAS/B,SAAS8D,EAAO,KAEJ,IAA3BpF,EAAEiH,UAAU7B,EAAO,IACZA,EAAO,GAEXA,EAAOkF,EAAiBtK,EAAGoF,EAAO,IAAIoF,GAAG9J,IAAI0E,EAAO,GAC/D,EACAtF,EAAawF,UAAU0C,UAAYnI,EAAayF,UAAU0C,UAAYxI,EAAW8F,UAAU0C,UA8D3F,IAAIzI,EAAY,SAAUoL,EAAMzJ,EAAM9B,EAAUC,GAC5CD,EAAWA,GAAYN,EACvB6L,EAAOb,OAAOa,GACTtL,IACDsL,EAAOA,EAAKC,cACZxL,EAAWA,EAASwL,eAExB,IACI9N,EADAU,EAASmN,EAAKnN,OAEdqN,EAAU5K,KAAKqD,IAAIpC,GACnB4J,EAAiB,CAAC,EACtB,IAAKhO,EAAI,EAAGA,EAAIsC,EAAS5B,OAAQV,IAC7BgO,EAAe1L,EAAStC,IAAMA,EAElC,IAAKA,EAAI,EAAGA,EAAIU,EAAQV,IAEpB,GAAU,OADN0F,EAAImI,EAAK7N,KAET0F,KAAKsI,GACDA,EAAetI,IAAMqI,EAAS,CAC9B,GAAU,MAANrI,GAAyB,IAAZqI,EAAe,SAChC,MAAM,IAAIzM,MAAMoE,EAAI,iCAAmCtB,EAAO,IAClE,CAGRA,EAAO5B,EAAW4B,GAClB,IAAI6J,EAAS,GACTtE,EAAyB,MAAZkE,EAAK,GACtB,IAAK7N,EAAI2J,EAAa,EAAI,EAAG3J,EAAI6N,EAAKnN,OAAQV,IAAK,CAC/C,IAAI0F,EACJ,IADIA,EAAImI,EAAK7N,MACJgO,EAAgBC,EAAOlN,KAAKyB,EAAWwL,EAAetI,SAC1D,IAAU,MAANA,EAKJ,MAAM,IAAIpE,MAAMoE,EAAI,6BAJrB,IAAIlE,EAAQxB,EACZ,GAAKA,UAA0B,MAAZ6N,EAAK7N,IAAcA,EAAI6N,EAAKnN,QAC/CuN,EAAOlN,KAAKyB,EAAWqL,EAAKrI,MAAMhE,EAAQ,EAAGxB,IAEI,CACzD,CACA,OAAOkO,EAAmBD,EAAQ7J,EAAMuF,EAC5C,EAEA,SAASuE,EAAmBD,EAAQ7J,EAAMuF,GACtC,IAAwC3J,EAApCmO,EAAMhM,EAAQ,GAAImH,EAAMnH,EAAQ,GACpC,IAAKnC,EAAIiO,EAAOvN,OAAS,EAAGV,GAAK,EAAGA,IAChCmO,EAAMA,EAAIvK,IAAIqK,EAAOjO,GAAGkJ,MAAMI,IAC9BA,EAAMA,EAAIJ,MAAM9E,GAEpB,OAAOuF,EAAawE,EAAI5H,SAAW4H,CACvC,CAUA,SAASC,EAAOlL,EAAGkB,GAEf,IADAA,EAAOkE,EAAOlE,IACLyF,SAAU,CACf,GAAI3G,EAAE2G,SAAU,MAAO,CAAElH,MAAO,CAAC,GAAIgH,YAAY,GACjD,MAAM,IAAIrI,MAAM,4CACpB,CACA,GAAI8C,EAAKyD,QAAQ,GAAI,CACjB,GAAI3E,EAAE2G,SAAU,MAAO,CAAElH,MAAO,CAAC,GAAIgH,YAAY,GACjD,GAAIzG,EAAEyG,aACF,MAAO,CACHhH,MAAO,GAAGyC,OAAOiJ,MAAM,GAAIjN,MAAMiN,MAAM,KAAMjN,OAAO8B,EAAEmI,eACjDiD,IAAIlN,MAAMoH,UAAU+F,QAAS,CAAC,EAAG,KAEtC5E,YAAY,GAGpB,IAAI1J,EAAMmB,MAAMiN,MAAM,KAAMjN,MAAM8B,EAAEmI,aAAe,IAC9CiD,IAAIlN,MAAMoH,UAAU+F,QAAS,CAAC,EAAG,IAEtC,OADAtO,EAAIoH,QAAQ,CAAC,IACN,CACH1E,MAAO,GAAGyC,OAAOiJ,MAAM,GAAIpO,GAC3B0J,YAAY,EAEpB,CAEA,IAAI6E,GAAM,EAKV,GAJItL,EAAEyG,cAAgBvF,EAAK2F,eACvByE,GAAM,EACNtL,EAAIA,EAAEsD,OAENpC,EAAKwD,SACL,OAAI1E,EAAE2G,SAAiB,CAAElH,MAAO,CAAC,GAAIgH,YAAY,GAE1C,CACHhH,MAAOvB,MAAMiN,MAAM,KAAMjN,MAAM8B,EAAEmI,eAC5BiD,IAAIG,OAAOjG,UAAU+F,QAAS,GACnC5E,WAAY6E,GAKpB,IAFA,IACcpF,EADVsF,EAAM,GACNC,EAAOzL,EACJyL,EAAKhF,cAAgBgF,EAAKpL,WAAWa,IAAS,GAAG,CACpDgF,EAASuF,EAAKvF,OAAOhF,GACrBuK,EAAOvF,EAAO/C,SACd,IAAIuI,EAAQxF,EAAOjD,UACfyI,EAAMjF,eACNiF,EAAQxK,EAAKyE,MAAM+F,GAAOpI,MAC1BmI,EAAOA,EAAKtG,QAEhBqG,EAAI3N,KAAK6N,EAAMvD,aACnB,CAEA,OADAqD,EAAI3N,KAAK4N,EAAKtD,cACP,CAAE1I,MAAO+L,EAAIpH,UAAWqC,WAAY6E,EAC/C,CAEA,SAASK,EAAa3L,EAAGkB,EAAM9B,GAC3B,IAAIrC,EAAMmO,EAAOlL,EAAGkB,GACpB,OAAQnE,EAAI0J,WAAa,IAAM,IAAM1J,EAAI0C,MAAM2L,KAAI,SAAU7K,GACzD,OAlER,SAAmBmL,EAAOtM,GAEtB,OAAIsM,GADJtM,EAAWA,GAAYN,GACFtB,OACV4B,EAASsM,GAEb,IAAMA,EAAQ,GACzB,CA4DeE,CAAUrL,EAAGnB,EACxB,IAAGpB,KAAK,GACZ,CAiDA,SAAS6N,EAAiB3M,GACtB,GAAIa,GAAWb,GAAI,CACf,IAAIqB,GAAKrB,EACT,GAAIqB,IAAMC,EAASD,GACf,OAAOxB,EAAuB,IAAIe,EAAad,OAAOuB,IAAM,IAAIV,EAAaU,GACjF,MAAM,IAAInC,MAAM,oBAAsBc,EAC1C,CACA,IAAIQ,EAAgB,MAATR,EAAE,GACTQ,IAAMR,EAAIA,EAAEoD,MAAM,IACtB,IAAIwJ,EAAQ5M,EAAE4M,MAAM,MACpB,GAAIA,EAAMtO,OAAS,EAAG,MAAM,IAAIY,MAAM,oBAAsB0N,EAAM9N,KAAK,MACvE,GAAqB,IAAjB8N,EAAMtO,OAAc,CACpB,IAAIkJ,EAAMoF,EAAM,GAGhB,GAFe,MAAXpF,EAAI,KAAYA,EAAMA,EAAIpE,MAAM,KACpCoE,GAAOA,KACKlG,EAASkG,KAAS3G,EAAU2G,GAAM,MAAM,IAAItI,MAAM,oBAAsBsI,EAAM,6BAC1F,IAAIiE,EAAOmB,EAAM,GACbC,EAAepB,EAAKtM,QAAQ,KAKhC,GAJI0N,GAAgB,IAChBrF,GAAOiE,EAAKnN,OAASuO,EAAe,EACpCpB,EAAOA,EAAKrI,MAAM,EAAGyJ,GAAgBpB,EAAKrI,MAAMyJ,EAAe,IAE/DrF,EAAM,EAAG,MAAM,IAAItI,MAAM,sDAE7Bc,EADAyL,GAAQ,IAAKzM,MAAMwI,EAAM,GAAI1I,KAAK,IAEtC,CAEA,IADc,kBAAkBgO,KAAK9M,GACvB,MAAM,IAAId,MAAM,oBAAsBc,GACpD,GAAIH,EACA,OAAO,IAAIe,EAAad,OAAOU,EAAO,IAAMR,EAAIA,IAGpD,IADA,IAAI8B,EAAI,GAAIqB,EAAMnD,EAAE1B,OAAsBiN,EAAMpI,EAr2CrC,EAs2CJA,EAAM,GACTrB,EAAEnD,MAAMqB,EAAEoD,MAAMmI,EAAKpI,KACrBoI,GAx2CO,GAy2CG,IAAGA,EAAM,GACnBpI,GA12CO,EA62CX,OADAjC,EAAKY,GACE,IAAIxB,EAAWwB,EAAGtB,EAC7B,CAaA,SAASJ,EAAWJ,GAChB,MAAiB,iBAANA,EAZf,SAA0BA,GACtB,GAAIH,EACA,OAAO,IAAIe,EAAad,OAAOE,IAEnC,GAAIa,EAAUb,GAAI,CACd,GAAIA,IAAMsB,EAAStB,GAAI,MAAM,IAAId,MAAMc,EAAI,uBAC3C,OAAO,IAAIW,EAAaX,EAC5B,CACA,OAAO2M,EAAiB3M,EAAEmH,WAC9B,CAIe4F,CAAiB/M,GAEX,iBAANA,EACA2M,EAAiB3M,GAEX,iBAANA,EACA,IAAIY,EAAaZ,GAErBA,CACX,CA/GAM,EAAW8F,UAAU4G,QAAU,SAAU/M,GACrC,OAAO+L,EAAOvL,KAAMR,EACxB,EAEAU,EAAayF,UAAU4G,QAAU,SAAU/M,GACvC,OAAO+L,EAAOvL,KAAMR,EACxB,EAEAW,EAAawF,UAAU4G,QAAU,SAAU/M,GACvC,OAAO+L,EAAOvL,KAAMR,EACxB,EAEAK,EAAW8F,UAAUe,SAAW,SAAUlH,EAAOC,GAE7C,GADID,IAAU2I,IAAW3I,EAAQ,IACnB,KAAVA,EAAc,OAAOwM,EAAahM,KAAMR,EAAOC,GAEnD,IADA,IAA2EsM,EAAvExM,EAAIS,KAAKF,MAAO4B,EAAInC,EAAE1B,OAAQ2O,EAAMrC,OAAO5K,IAAImC,MAC1CA,GAAK,GACVqK,EAAQ5B,OAAO5K,EAAEmC,IACjB8K,GAH4D,UAG/C7J,MAAMoJ,EAAMlO,QAAUkO,EAGvC,OADW/L,KAAKD,KAAO,IAAM,IACfyM,CAClB,EAEAtM,EAAayF,UAAUe,SAAW,SAAUlH,EAAOC,GAE/C,OADID,IAAU2I,IAAW3I,EAAQ,IACpB,IAATA,EAAoBwM,EAAahM,KAAMR,EAAOC,GAC3C0K,OAAOnK,KAAKF,MACvB,EAEAK,EAAawF,UAAUe,SAAWxG,EAAayF,UAAUe,SAEzDvG,EAAawF,UAAU8G,OAAS5M,EAAW8F,UAAU8G,OAASvM,EAAayF,UAAU8G,OAAS,WAAc,OAAOzM,KAAK0G,UAAY,EAEpI7G,EAAW8F,UAAU+F,QAAU,WAC3B,OAAOgB,SAAS1M,KAAK0G,WAAY,GACrC,EACA7G,EAAW8F,UAAU6C,WAAa3I,EAAW8F,UAAU+F,QAEvDxL,EAAayF,UAAU+F,QAAU,WAC7B,OAAO1L,KAAKF,KAChB,EACAI,EAAayF,UAAU6C,WAAatI,EAAayF,UAAU+F,QAC3DvL,EAAawF,UAAU+F,QAAUvL,EAAawF,UAAU6C,WAAa,WACjE,OAAOkE,SAAS1M,KAAK0G,WAAY,GACrC,EAoEA,IAAK,IAAIvJ,EAAI,EAAGA,EAAI,IAAMA,IACtBmC,EAAQnC,GAAKwC,EAAWxC,GACpBA,EAAI,IAAGmC,GAASnC,GAAKwC,GAAYxC,IAiBzC,OAdAmC,EAAQ4J,IAAM5J,EAAQ,GACtBA,EAAQ0J,KAAO1J,EAAQ,GACvBA,EAAQqN,SAAWrN,GAAS,GAC5BA,EAAQoD,IAAMA,EACdpD,EAAQwL,IAAMA,EACdxL,EAAQyL,IAAMA,EACdzL,EAAQsN,IA1QR,SAAa5L,EAAGC,GAGZ,OAFAD,EAAIrB,EAAWqB,GAAG2C,MAClB1C,EAAItB,EAAWsB,GAAG0C,MACX3C,EAAEuE,OAAOwF,EAAI/J,EAAGC,IAAIiF,SAASjF,EACxC,EAuQA3B,EAAQuN,WAAa,SAAUjM,GAAK,OAAOA,aAAaf,GAAce,aAAaV,GAAgBU,aAAaT,CAAc,EAC9Hb,EAAQuJ,YAvQR,SAAqB7H,EAAGC,EAAG2H,GACvB5H,EAAIrB,EAAWqB,GACfC,EAAItB,EAAWsB,GACf,IAAI6L,EAAUlE,GAAOtI,KAAKyM,OACtBC,EAAMlC,EAAI9J,EAAGC,GACbgM,EADwBvK,EAAI1B,EAAGC,GAClBU,SAASqL,GAAKjM,IAAI,GACnC,GAAIkM,EAAMhN,QAAS,OAAO+M,EAAIjM,IAAIT,KAAKC,MAAMuM,IAAYG,IAGzD,IAFA,IAAI7B,EAASG,EAAO0B,EAAOlO,GAAMe,MAC7BiE,EAAS,GAAImJ,GAAa,EACrB/P,EAAI,EAAGA,EAAIiO,EAAOvN,OAAQV,IAAK,CACpC,IAAIgQ,EAAMD,EAAa9B,EAAOjO,IAAMA,EAAI,EAAIiO,EAAOvN,OAASuN,EAAOjO,EAAI,GAAK4B,EAAO,GAAKA,EACpFgN,EAAQlL,EAASiM,IAAYK,GACjCpJ,EAAO7F,KAAK6N,GACRA,EAAQX,EAAOjO,KAAI+P,GAAa,EACxC,CACA,OAAOF,EAAIjM,IAAIzB,EAAQ8N,UAAUrJ,EAAQhF,GAAM,GACnD,EAyPAO,EAAQ8N,UAAY,SAAUhC,EAAQ7J,EAAMuF,GACxC,OAAOuE,EAAmBD,EAAOK,IAAI9L,GAAaA,EAAW4B,GAAQ,IAAKuF,EAC9E,EAEOxH,CACV,CAh6CD,GAm6CqC/C,EAAO8Q,eAAe,aACvD9Q,EAAOD,QAAUmJ,QAOhB,KAFD,aACI,OAAOA,CACV,6DCj6CL,MAAM6H,EAAS,EAAQ,MACjBC,EAAU,EAAQ,KAClBC,EACe,mBAAXC,QAAkD,mBAAlBA,OAAY,IAChDA,OAAY,IAAE,8BACd,KAENnR,EAAQ,GAASoR,EAEjBpR,EAAQ,GAAoB,GAE5B,MAAMqR,EAAe,WAwDrB,SAASC,EAAc/P,GACrB,GAAIA,EAAS8P,EACX,MAAM,IAAIE,WAAW,cAAgBhQ,EAAS,kCAGhD,MAAMiQ,EAAM,IAAIxP,WAAWT,GAE3B,OADA+H,OAAOmI,eAAeD,EAAKJ,EAAO/H,WAC3BmI,CACT,CAYA,SAASJ,EAAQM,EAAKC,EAAkBpQ,GAEtC,GAAmB,iBAARmQ,EAAkB,CAC3B,GAAgC,iBAArBC,EACT,MAAM,IAAIC,UACR,sEAGJ,OAAOC,EAAYH,EACrB,CACA,OAAOI,EAAKJ,EAAKC,EAAkBpQ,EACrC,CAIA,SAASuQ,EAAMtO,EAAOmO,EAAkBpQ,GACtC,GAAqB,iBAAViC,EACT,OAqHJ,SAAqBuO,EAAQC,GAK3B,GAJwB,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,SAGRZ,EAAOa,WAAWD,GACrB,MAAM,IAAIJ,UAAU,qBAAuBI,GAG7C,MAAMzQ,EAAwC,EAA/BlB,EAAW0R,EAAQC,GAClC,IAAIR,EAAMF,EAAa/P,GAEvB,MAAM2Q,EAASV,EAAIW,MAAMJ,EAAQC,GASjC,OAPIE,IAAW3Q,IAIbiQ,EAAMA,EAAInL,MAAM,EAAG6L,IAGdV,CACT,CA3IWY,CAAW5O,EAAOmO,GAG3B,GAAIU,YAAYC,OAAO9O,GACrB,OAkJJ,SAAwB+O,GACtB,GAAIhC,EAAWgC,EAAWvQ,YAAa,CACrC,MAAMwQ,EAAO,IAAIxQ,WAAWuQ,GAC5B,OAAOE,EAAgBD,EAAKE,OAAQF,EAAKG,WAAYH,EAAKnS,WAC5D,CACA,OAAOuS,EAAcL,EACvB,CAxJWM,CAAcrP,GAGvB,GAAa,MAATA,EACF,MAAM,IAAIoO,UACR,yHACiDpO,GAIrD,GAAI+M,EAAW/M,EAAO6O,cACjB7O,GAAS+M,EAAW/M,EAAMkP,OAAQL,aACrC,OAAOI,EAAgBjP,EAAOmO,EAAkBpQ,GAGlD,GAAiC,oBAAtBuR,oBACNvC,EAAW/M,EAAOsP,oBAClBtP,GAAS+M,EAAW/M,EAAMkP,OAAQI,oBACrC,OAAOL,EAAgBjP,EAAOmO,EAAkBpQ,GAGlD,GAAqB,iBAAViC,EACT,MAAM,IAAIoO,UACR,yEAIJ,MAAMxC,EAAU5L,EAAM4L,SAAW5L,EAAM4L,UACvC,GAAe,MAAXA,GAAmBA,IAAY5L,EACjC,OAAO4N,EAAOU,KAAK1C,EAASuC,EAAkBpQ,GAGhD,MAAMoD,EAkJR,SAAqBoO,GACnB,GAAI3B,EAAO4B,SAASD,GAAM,CACxB,MAAM7R,EAA4B,EAAtB+R,EAAQF,EAAIxR,QAClBiQ,EAAMF,EAAapQ,GAEzB,OAAmB,IAAfsQ,EAAIjQ,QAIRwR,EAAIP,KAAKhB,EAAK,EAAG,EAAGtQ,GAHXsQ,CAKX,CAEA,YAAmB3F,IAAfkH,EAAIxR,OACoB,iBAAfwR,EAAIxR,QAAuB2R,EAAYH,EAAIxR,QAC7C+P,EAAa,GAEfsB,EAAcG,GAGN,WAAbA,EAAII,MAAqBlR,MAAMmR,QAAQL,EAAIM,MACtCT,EAAcG,EAAIM,WAD3B,CAGF,CAzKYC,CAAW9P,GACrB,GAAImB,EAAG,OAAOA,EAEd,GAAsB,oBAAXwM,QAAgD,MAAtBA,OAAOoC,aACH,mBAA9B/P,EAAM2N,OAAOoC,aACtB,OAAOnC,EAAOU,KAAKtO,EAAM2N,OAAOoC,aAAa,UAAW5B,EAAkBpQ,GAG5E,MAAM,IAAIqQ,UACR,yHACiDpO,EAErD,CAmBA,SAASgQ,EAAYC,GACnB,GAAoB,iBAATA,EACT,MAAM,IAAI7B,UAAU,0CACf,GAAI6B,EAAO,EAChB,MAAM,IAAIlC,WAAW,cAAgBkC,EAAO,iCAEhD,CA0BA,SAAS5B,EAAa4B,GAEpB,OADAD,EAAWC,GACJnC,EAAamC,EAAO,EAAI,EAAoB,EAAhBR,EAAQQ,GAC7C,CAuCA,SAASb,EAAec,GACtB,MAAMnS,EAASmS,EAAMnS,OAAS,EAAI,EAA4B,EAAxB0R,EAAQS,EAAMnS,QAC9CiQ,EAAMF,EAAa/P,GACzB,IAAK,IAAIV,EAAI,EAAGA,EAAIU,EAAQV,GAAK,EAC/B2Q,EAAI3Q,GAAgB,IAAX6S,EAAM7S,GAEjB,OAAO2Q,CACT,CAUA,SAASiB,EAAiBiB,EAAOf,EAAYpR,GAC3C,GAAIoR,EAAa,GAAKe,EAAMrT,WAAasS,EACvC,MAAM,IAAIpB,WAAW,wCAGvB,GAAImC,EAAMrT,WAAasS,GAAcpR,GAAU,GAC7C,MAAM,IAAIgQ,WAAW,wCAGvB,IAAIC,EAYJ,OAVEA,OADiB3F,IAAf8G,QAAuC9G,IAAXtK,EACxB,IAAIS,WAAW0R,QACD7H,IAAXtK,EACH,IAAIS,WAAW0R,EAAOf,GAEtB,IAAI3Q,WAAW0R,EAAOf,EAAYpR,GAI1C+H,OAAOmI,eAAeD,EAAKJ,EAAO/H,WAE3BmI,CACT,CA2BA,SAASyB,EAAS1R,GAGhB,GAAIA,GAAU8P,EACZ,MAAM,IAAIE,WAAW,0DACaF,EAAajH,SAAS,IAAM,UAEhE,OAAgB,EAAT7I,CACT,CAsGA,SAASlB,EAAY0R,EAAQC,GAC3B,GAAIZ,EAAO4B,SAASjB,GAClB,OAAOA,EAAOxQ,OAEhB,GAAI8Q,YAAYC,OAAOP,IAAWxB,EAAWwB,EAAQM,aACnD,OAAON,EAAO1R,WAEhB,GAAsB,iBAAX0R,EACT,MAAM,IAAIH,UACR,kGAC0BG,GAI9B,MAAM7Q,EAAM6Q,EAAOxQ,OACboS,EAAaC,UAAUrS,OAAS,IAAsB,IAAjBqS,UAAU,GACrD,IAAKD,GAAqB,IAARzS,EAAW,OAAO,EAGpC,IAAI2S,GAAc,EAClB,OACE,OAAQ7B,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO9Q,EACT,IAAK,OACL,IAAK,QACH,OAAO4S,EAAY/B,GAAQxQ,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAANL,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAO6S,EAAchC,GAAQxQ,OAC/B,QACE,GAAIsS,EACF,OAAOF,GAAa,EAAIG,EAAY/B,GAAQxQ,OAE9CyQ,GAAY,GAAKA,GAAUrD,cAC3BkF,GAAc,EAGtB,CAGA,SAASG,EAAchC,EAAU3P,EAAOC,GACtC,IAAIuR,GAAc,EAclB,SALchI,IAAVxJ,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQqB,KAAKnC,OACf,MAAO,GAOT,SAJYsK,IAARvJ,GAAqBA,EAAMoB,KAAKnC,UAClCe,EAAMoB,KAAKnC,QAGTe,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTD,KAAW,GAGT,MAAO,GAKT,IAFK2P,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOiC,EAASvQ,KAAMrB,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAO4R,EAAUxQ,KAAMrB,EAAOC,GAEhC,IAAK,QACH,OAAO6R,EAAWzQ,KAAMrB,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAO8R,EAAY1Q,KAAMrB,EAAOC,GAElC,IAAK,SACH,OAAO+R,EAAY3Q,KAAMrB,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOgS,EAAa5Q,KAAMrB,EAAOC,GAEnC,QACE,GAAIuR,EAAa,MAAM,IAAIjC,UAAU,qBAAuBI,GAC5DA,GAAYA,EAAW,IAAIrD,cAC3BkF,GAAc,EAGtB,CAUA,SAASU,EAAM5P,EAAGZ,EAAGyQ,GACnB,MAAM3T,EAAI8D,EAAEZ,GACZY,EAAEZ,GAAKY,EAAE6P,GACT7P,EAAE6P,GAAK3T,CACT,CA2IA,SAAS4T,EAAsB/B,EAAQ1D,EAAK2D,EAAYX,EAAU0C,GAEhE,GAAsB,IAAlBhC,EAAOnR,OAAc,OAAQ,EAmBjC,GAhB0B,iBAAfoR,GACTX,EAAWW,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAGZO,EADJP,GAAcA,KAGZA,EAAa+B,EAAM,EAAKhC,EAAOnR,OAAS,GAItCoR,EAAa,IAAGA,EAAaD,EAAOnR,OAASoR,GAC7CA,GAAcD,EAAOnR,OAAQ,CAC/B,GAAImT,EAAK,OAAQ,EACZ/B,EAAaD,EAAOnR,OAAS,CACpC,MAAO,GAAIoR,EAAa,EAAG,CACzB,IAAI+B,EACC,OAAQ,EADJ/B,EAAa,CAExB,CAQA,GALmB,iBAAR3D,IACTA,EAAMoC,EAAOU,KAAK9C,EAAKgD,IAIrBZ,EAAO4B,SAAShE,GAElB,OAAmB,IAAfA,EAAIzN,QACE,EAEHoT,EAAajC,EAAQ1D,EAAK2D,EAAYX,EAAU0C,GAClD,GAAmB,iBAAR1F,EAEhB,OADAA,GAAY,IACgC,mBAAjChN,WAAWqH,UAAUjH,QAC1BsS,EACK1S,WAAWqH,UAAUjH,QAAQwS,KAAKlC,EAAQ1D,EAAK2D,GAE/C3Q,WAAWqH,UAAUwL,YAAYD,KAAKlC,EAAQ1D,EAAK2D,GAGvDgC,EAAajC,EAAQ,CAAC1D,GAAM2D,EAAYX,EAAU0C,GAG3D,MAAM,IAAI9C,UAAU,uCACtB,CAEA,SAAS+C,EAAc7T,EAAKkO,EAAK2D,EAAYX,EAAU0C,GACrD,IA0BI7T,EA1BAiU,EAAY,EACZC,EAAYjU,EAAIS,OAChByT,EAAYhG,EAAIzN,OAEpB,QAAiBsK,IAAbmG,IAEe,UADjBA,EAAWnE,OAAOmE,GAAUrD,gBACY,UAAbqD,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAIlR,EAAIS,OAAS,GAAKyN,EAAIzN,OAAS,EACjC,OAAQ,EAEVuT,EAAY,EACZC,GAAa,EACbC,GAAa,EACbrC,GAAc,CAChB,CAGF,SAASsC,EAAMzD,EAAK3Q,GAClB,OAAkB,IAAdiU,EACKtD,EAAI3Q,GAEJ2Q,EAAI0D,aAAarU,EAAIiU,EAEhC,CAGA,GAAIJ,EAAK,CACP,IAAIS,GAAc,EAClB,IAAKtU,EAAI8R,EAAY9R,EAAIkU,EAAWlU,IAClC,GAAIoU,EAAKnU,EAAKD,KAAOoU,EAAKjG,GAAqB,IAAhBmG,EAAoB,EAAItU,EAAIsU,IAEzD,IADoB,IAAhBA,IAAmBA,EAAatU,GAChCA,EAAIsU,EAAa,IAAMH,EAAW,OAAOG,EAAaL,OAEtC,IAAhBK,IAAmBtU,GAAKA,EAAIsU,GAChCA,GAAc,CAGpB,MAEE,IADIxC,EAAaqC,EAAYD,IAAWpC,EAAaoC,EAAYC,GAC5DnU,EAAI8R,EAAY9R,GAAK,EAAGA,IAAK,CAChC,IAAIuU,GAAQ,EACZ,IAAK,IAAItP,EAAI,EAAGA,EAAIkP,EAAWlP,IAC7B,GAAImP,EAAKnU,EAAKD,EAAIiF,KAAOmP,EAAKjG,EAAKlJ,GAAI,CACrCsP,GAAQ,EACR,KACF,CAEF,GAAIA,EAAO,OAAOvU,CACpB,CAGF,OAAQ,CACV,CAcA,SAASwU,EAAU7D,EAAKO,EAAQuD,EAAQ/T,GACtC+T,EAAShG,OAAOgG,IAAW,EAC3B,MAAMC,EAAY/D,EAAIjQ,OAAS+T,EAC1B/T,GAGHA,EAAS+N,OAAO/N,IACHgU,IACXhU,EAASgU,GAJXhU,EAASgU,EAQX,MAAMC,EAASzD,EAAOxQ,OAKtB,IAAIV,EACJ,IAJIU,EAASiU,EAAS,IACpBjU,EAASiU,EAAS,GAGf3U,EAAI,EAAGA,EAAIU,IAAUV,EAAG,CAC3B,MAAM4U,EAASrF,SAAS2B,EAAO2D,OAAW,EAAJ7U,EAAO,GAAI,IACjD,GAAIqS,EAAYuC,GAAS,OAAO5U,EAChC2Q,EAAI8D,EAASzU,GAAK4U,CACpB,CACA,OAAO5U,CACT,CAEA,SAAS8U,EAAWnE,EAAKO,EAAQuD,EAAQ/T,GACvC,OAAOqU,EAAW9B,EAAY/B,EAAQP,EAAIjQ,OAAS+T,GAAS9D,EAAK8D,EAAQ/T,EAC3E,CAEA,SAASsU,EAAYrE,EAAKO,EAAQuD,EAAQ/T,GACxC,OAAOqU,EAypCT,SAAuB1F,GACrB,MAAM4F,EAAY,GAClB,IAAK,IAAIjV,EAAI,EAAGA,EAAIqP,EAAI3O,SAAUV,EAEhCiV,EAAUlU,KAAyB,IAApBsO,EAAI9O,WAAWP,IAEhC,OAAOiV,CACT,CAhqCoBC,CAAahE,GAASP,EAAK8D,EAAQ/T,EACvD,CAEA,SAASyU,EAAaxE,EAAKO,EAAQuD,EAAQ/T,GACzC,OAAOqU,EAAW7B,EAAchC,GAASP,EAAK8D,EAAQ/T,EACxD,CAEA,SAAS0U,EAAWzE,EAAKO,EAAQuD,EAAQ/T,GACvC,OAAOqU,EA0pCT,SAAyB1F,EAAKgG,GAC5B,IAAI3P,EAAG4P,EAAIC,EACX,MAAMN,EAAY,GAClB,IAAK,IAAIjV,EAAI,EAAGA,EAAIqP,EAAI3O,WACjB2U,GAAS,GAAK,KADarV,EAGhC0F,EAAI2J,EAAI9O,WAAWP,GACnBsV,EAAK5P,GAAK,EACV6P,EAAK7P,EAAI,IACTuP,EAAUlU,KAAKwU,GACfN,EAAUlU,KAAKuU,GAGjB,OAAOL,CACT,CAxqCoBO,CAAetE,EAAQP,EAAIjQ,OAAS+T,GAAS9D,EAAK8D,EAAQ/T,EAC9E,CA8EA,SAAS8S,EAAa7C,EAAKnP,EAAOC,GAChC,OAAc,IAAVD,GAAeC,IAAQkP,EAAIjQ,OACtByP,EAAO3P,cAAcmQ,GAErBR,EAAO3P,cAAcmQ,EAAInL,MAAMhE,EAAOC,GAEjD,CAEA,SAAS4R,EAAW1C,EAAKnP,EAAOC,GAC9BA,EAAM0B,KAAKwK,IAAIgD,EAAIjQ,OAAQe,GAC3B,MAAMgU,EAAM,GAEZ,IAAIzV,EAAIwB,EACR,KAAOxB,EAAIyB,GAAK,CACd,MAAMiU,EAAY/E,EAAI3Q,GACtB,IAAI2V,EAAY,KACZC,EAAoBF,EAAY,IAChC,EACCA,EAAY,IACT,EACCA,EAAY,IACT,EACA,EAEZ,GAAI1V,EAAI4V,GAAoBnU,EAAK,CAC/B,IAAIoU,EAAYC,EAAWC,EAAYC,EAEvC,OAAQJ,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EACHG,EAAalF,EAAI3Q,EAAI,GACO,MAAV,IAAb6V,KACHG,GAA6B,GAAZN,IAAqB,EAAoB,GAAbG,EACzCG,EAAgB,MAClBL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAalF,EAAI3Q,EAAI,GACrB8V,EAAYnF,EAAI3Q,EAAI,GACQ,MAAV,IAAb6V,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZN,IAAoB,IAAoB,GAAbG,IAAsB,EAAmB,GAAZC,EACrEE,EAAgB,OAAUA,EAAgB,OAAUA,EAAgB,SACtEL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAalF,EAAI3Q,EAAI,GACrB8V,EAAYnF,EAAI3Q,EAAI,GACpB+V,EAAapF,EAAI3Q,EAAI,GACO,MAAV,IAAb6V,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZN,IAAoB,IAAqB,GAAbG,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,EAClGC,EAAgB,OAAUA,EAAgB,UAC5CL,EAAYK,IAItB,CAEkB,OAAdL,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbF,EAAI1U,KAAK4U,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBF,EAAI1U,KAAK4U,GACT3V,GAAK4V,CACP,CAEA,OAQF,SAAgCK,GAC9B,MAAM5V,EAAM4V,EAAWvV,OACvB,GAAIL,GAAO6V,EACT,OAAOlJ,OAAOmJ,aAAa9H,MAAMrB,OAAQiJ,GAI3C,IAAIR,EAAM,GACNzV,EAAI,EACR,KAAOA,EAAIK,GACToV,GAAOzI,OAAOmJ,aAAa9H,MACzBrB,OACAiJ,EAAWzQ,MAAMxF,EAAGA,GAAKkW,IAG7B,OAAOT,CACT,CAxBSW,CAAsBX,EAC/B,CA39BAlF,EAAO8F,oBAUP,WAEE,IACE,MAAMpW,EAAM,IAAIkB,WAAW,GACrBmV,EAAQ,CAAEC,IAAK,WAAc,OAAO,EAAG,GAG7C,OAFA9N,OAAOmI,eAAe0F,EAAOnV,WAAWqH,WACxCC,OAAOmI,eAAe3Q,EAAKqW,GACN,KAAdrW,EAAIsW,KAGb,CAFE,MAAO7I,GACP,OAAO,CACT,CACF,CArB6B8I,GAExBjG,EAAO8F,qBAA0C,oBAAZI,SACb,mBAAlBA,QAAQC,OACjBD,QAAQC,MACN,iJAkBJjO,OAAOkO,eAAepG,EAAO/H,UAAW,SAAU,CAChDoO,YAAY,EACZC,IAAK,WACH,GAAKtG,EAAO4B,SAAStP,MACrB,OAAOA,KAAKgP,MACd,IAGFpJ,OAAOkO,eAAepG,EAAO/H,UAAW,SAAU,CAChDoO,YAAY,EACZC,IAAK,WACH,GAAKtG,EAAO4B,SAAStP,MACrB,OAAOA,KAAKiP,UACd,IAoCFvB,EAAOuG,SAAW,KA8DlBvG,EAAOU,KAAO,SAAUtO,EAAOmO,EAAkBpQ,GAC/C,OAAOuQ,EAAKtO,EAAOmO,EAAkBpQ,EACvC,EAIA+H,OAAOmI,eAAeL,EAAO/H,UAAWrH,WAAWqH,WACnDC,OAAOmI,eAAeL,EAAQpP,YA8B9BoP,EAAOwG,MAAQ,SAAUnE,EAAMoE,EAAM7F,GACnC,OArBF,SAAgByB,EAAMoE,EAAM7F,GAE1B,OADAwB,EAAWC,GACPA,GAAQ,EACHnC,EAAamC,QAET5H,IAATgM,EAIyB,iBAAb7F,EACVV,EAAamC,GAAMoE,KAAKA,EAAM7F,GAC9BV,EAAamC,GAAMoE,KAAKA,GAEvBvG,EAAamC,EACtB,CAOSmE,CAAMnE,EAAMoE,EAAM7F,EAC3B,EAUAZ,EAAOS,YAAc,SAAU4B,GAC7B,OAAO5B,EAAY4B,EACrB,EAIArC,EAAO0G,gBAAkB,SAAUrE,GACjC,OAAO5B,EAAY4B,EACrB,EA6GArC,EAAO4B,SAAW,SAAmBrO,GACnC,OAAY,MAALA,IAA6B,IAAhBA,EAAEoT,WACpBpT,IAAMyM,EAAO/H,SACjB,EAEA+H,EAAOtG,QAAU,SAAkBpG,EAAGC,GAGpC,GAFI4L,EAAW7L,EAAG1C,cAAa0C,EAAI0M,EAAOU,KAAKpN,EAAGA,EAAE4Q,OAAQ5Q,EAAErE,aAC1DkQ,EAAW5L,EAAG3C,cAAa2C,EAAIyM,EAAOU,KAAKnN,EAAGA,EAAE2Q,OAAQ3Q,EAAEtE,cACzD+Q,EAAO4B,SAAStO,KAAO0M,EAAO4B,SAASrO,GAC1C,MAAM,IAAIiN,UACR,yEAIJ,GAAIlN,IAAMC,EAAG,OAAO,EAEpB,IAAIL,EAAII,EAAEnD,OACN4E,EAAIxB,EAAEpD,OAEV,IAAK,IAAIV,EAAI,EAAGK,EAAM8C,KAAKwK,IAAIlK,EAAG6B,GAAItF,EAAIK,IAAOL,EAC/C,GAAI6D,EAAE7D,KAAO8D,EAAE9D,GAAI,CACjByD,EAAII,EAAE7D,GACNsF,EAAIxB,EAAE9D,GACN,KACF,CAGF,OAAIyD,EAAI6B,GAAW,EACfA,EAAI7B,EAAU,EACX,CACT,EAEA8M,EAAOa,WAAa,SAAqBD,GACvC,OAAQnE,OAAOmE,GAAUrD,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,EAEb,EAEAyC,EAAOnL,OAAS,SAAiB+R,EAAMzW,GACrC,IAAKU,MAAMmR,QAAQ4E,GACjB,MAAM,IAAIpG,UAAU,+CAGtB,GAAoB,IAAhBoG,EAAKzW,OACP,OAAO6P,EAAOwG,MAAM,GAGtB,IAAI/W,EACJ,QAAegL,IAAXtK,EAEF,IADAA,EAAS,EACJV,EAAI,EAAGA,EAAImX,EAAKzW,SAAUV,EAC7BU,GAAUyW,EAAKnX,GAAGU,OAItB,MAAMmR,EAAStB,EAAOS,YAAYtQ,GAClC,IAAI0W,EAAM,EACV,IAAKpX,EAAI,EAAGA,EAAImX,EAAKzW,SAAUV,EAAG,CAChC,IAAI2Q,EAAMwG,EAAKnX,GACf,GAAI0P,EAAWiB,EAAKxP,YACdiW,EAAMzG,EAAIjQ,OAASmR,EAAOnR,QACvB6P,EAAO4B,SAASxB,KAAMA,EAAMJ,EAAOU,KAAKN,IAC7CA,EAAIgB,KAAKE,EAAQuF,IAEjBjW,WAAWqH,UAAU6O,IAAItD,KACvBlC,EACAlB,EACAyG,OAGC,KAAK7G,EAAO4B,SAASxB,GAC1B,MAAM,IAAII,UAAU,+CAEpBJ,EAAIgB,KAAKE,EAAQuF,EACnB,CACAA,GAAOzG,EAAIjQ,MACb,CACA,OAAOmR,CACT,EAiDAtB,EAAO/Q,WAAaA,EA8EpB+Q,EAAO/H,UAAU0O,WAAY,EAQ7B3G,EAAO/H,UAAU8O,OAAS,WACxB,MAAMjX,EAAMwC,KAAKnC,OACjB,GAAIL,EAAM,GAAM,EACd,MAAM,IAAIqQ,WAAW,6CAEvB,IAAK,IAAI1Q,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EAC5B0T,EAAK7Q,KAAM7C,EAAGA,EAAI,GAEpB,OAAO6C,IACT,EAEA0N,EAAO/H,UAAU+O,OAAS,WACxB,MAAMlX,EAAMwC,KAAKnC,OACjB,GAAIL,EAAM,GAAM,EACd,MAAM,IAAIqQ,WAAW,6CAEvB,IAAK,IAAI1Q,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EAC5B0T,EAAK7Q,KAAM7C,EAAGA,EAAI,GAClB0T,EAAK7Q,KAAM7C,EAAI,EAAGA,EAAI,GAExB,OAAO6C,IACT,EAEA0N,EAAO/H,UAAUgP,OAAS,WACxB,MAAMnX,EAAMwC,KAAKnC,OACjB,GAAIL,EAAM,GAAM,EACd,MAAM,IAAIqQ,WAAW,6CAEvB,IAAK,IAAI1Q,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EAC5B0T,EAAK7Q,KAAM7C,EAAGA,EAAI,GAClB0T,EAAK7Q,KAAM7C,EAAI,EAAGA,EAAI,GACtB0T,EAAK7Q,KAAM7C,EAAI,EAAGA,EAAI,GACtB0T,EAAK7Q,KAAM7C,EAAI,EAAGA,EAAI,GAExB,OAAO6C,IACT,EAEA0N,EAAO/H,UAAUe,SAAW,WAC1B,MAAM7I,EAASmC,KAAKnC,OACpB,OAAe,IAAXA,EAAqB,GACA,IAArBqS,UAAUrS,OAAqB2S,EAAUxQ,KAAM,EAAGnC,GAC/CyS,EAAa9E,MAAMxL,KAAMkQ,UAClC,EAEAxC,EAAO/H,UAAUiP,eAAiBlH,EAAO/H,UAAUe,SAEnDgH,EAAO/H,UAAUX,OAAS,SAAiB/D,GACzC,IAAKyM,EAAO4B,SAASrO,GAAI,MAAM,IAAIiN,UAAU,6BAC7C,OAAIlO,OAASiB,GACsB,IAA5ByM,EAAOtG,QAAQpH,KAAMiB,EAC9B,EAEAyM,EAAO/H,UAAUkP,QAAU,WACzB,IAAIrI,EAAM,GACV,MAAM9J,EAAMpG,EAAQ,GAGpB,OAFAkQ,EAAMxM,KAAK0G,SAAS,MAAO,EAAGhE,GAAKoS,QAAQ,UAAW,OAAOrU,OACzDT,KAAKnC,OAAS6E,IAAK8J,GAAO,SACvB,WAAaA,EAAM,GAC5B,EACIgB,IACFE,EAAO/H,UAAU6H,GAAuBE,EAAO/H,UAAUkP,SAG3DnH,EAAO/H,UAAUyB,QAAU,SAAkB2N,EAAQpW,EAAOC,EAAKoW,EAAWC,GAI1E,GAHIpI,EAAWkI,EAAQzW,cACrByW,EAASrH,EAAOU,KAAK2G,EAAQA,EAAOnD,OAAQmD,EAAOpY,cAEhD+Q,EAAO4B,SAASyF,GACnB,MAAM,IAAI7G,UACR,wFAC2B6G,GAiB/B,QAbc5M,IAAVxJ,IACFA,EAAQ,QAEEwJ,IAARvJ,IACFA,EAAMmW,EAASA,EAAOlX,OAAS,QAEfsK,IAAd6M,IACFA,EAAY,QAEE7M,IAAZ8M,IACFA,EAAUjV,KAAKnC,QAGbc,EAAQ,GAAKC,EAAMmW,EAAOlX,QAAUmX,EAAY,GAAKC,EAAUjV,KAAKnC,OACtE,MAAM,IAAIgQ,WAAW,sBAGvB,GAAImH,GAAaC,GAAWtW,GAASC,EACnC,OAAO,EAET,GAAIoW,GAAaC,EACf,OAAQ,EAEV,GAAItW,GAASC,EACX,OAAO,EAQT,GAAIoB,OAAS+U,EAAQ,OAAO,EAE5B,IAAInU,GAJJqU,KAAa,IADbD,KAAe,GAMXvS,GAPJ7D,KAAS,IADTD,KAAW,GASX,MAAMnB,EAAM8C,KAAKwK,IAAIlK,EAAG6B,GAElByS,EAAWlV,KAAK2C,MAAMqS,EAAWC,GACjCE,EAAaJ,EAAOpS,MAAMhE,EAAOC,GAEvC,IAAK,IAAIzB,EAAI,EAAGA,EAAIK,IAAOL,EACzB,GAAI+X,EAAS/X,KAAOgY,EAAWhY,GAAI,CACjCyD,EAAIsU,EAAS/X,GACbsF,EAAI0S,EAAWhY,GACf,KACF,CAGF,OAAIyD,EAAI6B,GAAW,EACfA,EAAI7B,EAAU,EACX,CACT,EA2HA8M,EAAO/H,UAAUyP,SAAW,SAAmB9J,EAAK2D,EAAYX,GAC9D,OAAoD,IAA7CtO,KAAKtB,QAAQ4M,EAAK2D,EAAYX,EACvC,EAEAZ,EAAO/H,UAAUjH,QAAU,SAAkB4M,EAAK2D,EAAYX,GAC5D,OAAOyC,EAAqB/Q,KAAMsL,EAAK2D,EAAYX,GAAU,EAC/D,EAEAZ,EAAO/H,UAAUwL,YAAc,SAAsB7F,EAAK2D,EAAYX,GACpE,OAAOyC,EAAqB/Q,KAAMsL,EAAK2D,EAAYX,GAAU,EAC/D,EA4CAZ,EAAO/H,UAAU8I,MAAQ,SAAgBJ,EAAQuD,EAAQ/T,EAAQyQ,GAE/D,QAAenG,IAAXyJ,EACFtD,EAAW,OACXzQ,EAASmC,KAAKnC,OACd+T,EAAS,OAEJ,QAAezJ,IAAXtK,GAA0C,iBAAX+T,EACxCtD,EAAWsD,EACX/T,EAASmC,KAAKnC,OACd+T,EAAS,MAEJ,KAAIyD,SAASzD,GAUlB,MAAM,IAAInT,MACR,2EAVFmT,KAAoB,EAChByD,SAASxX,IACXA,KAAoB,OACHsK,IAAbmG,IAAwBA,EAAW,UAEvCA,EAAWzQ,EACXA,OAASsK,EAMb,CAEA,MAAM0J,EAAY7R,KAAKnC,OAAS+T,EAGhC,SAFezJ,IAAXtK,GAAwBA,EAASgU,KAAWhU,EAASgU,GAEpDxD,EAAOxQ,OAAS,IAAMA,EAAS,GAAK+T,EAAS,IAAOA,EAAS5R,KAAKnC,OACrE,MAAM,IAAIgQ,WAAW,0CAGlBS,IAAUA,EAAW,QAE1B,IAAI6B,GAAc,EAClB,OACE,OAAQ7B,GACN,IAAK,MACH,OAAOqD,EAAS3R,KAAMqO,EAAQuD,EAAQ/T,GAExC,IAAK,OACL,IAAK,QACH,OAAOoU,EAAUjS,KAAMqO,EAAQuD,EAAQ/T,GAEzC,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOsU,EAAWnS,KAAMqO,EAAQuD,EAAQ/T,GAE1C,IAAK,SAEH,OAAOyU,EAAYtS,KAAMqO,EAAQuD,EAAQ/T,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO0U,EAAUvS,KAAMqO,EAAQuD,EAAQ/T,GAEzC,QACE,GAAIsS,EAAa,MAAM,IAAIjC,UAAU,qBAAuBI,GAC5DA,GAAY,GAAKA,GAAUrD,cAC3BkF,GAAc,EAGtB,EAEAzC,EAAO/H,UAAU8G,OAAS,WACxB,MAAO,CACLgD,KAAM,SACNE,KAAMpR,MAAMoH,UAAUhD,MAAMuO,KAAKlR,KAAKsV,MAAQtV,KAAM,GAExD,EAyFA,MAAMqT,EAAuB,KAoB7B,SAAS5C,EAAY3C,EAAKnP,EAAOC,GAC/B,IAAI2W,EAAM,GACV3W,EAAM0B,KAAKwK,IAAIgD,EAAIjQ,OAAQe,GAE3B,IAAK,IAAIzB,EAAIwB,EAAOxB,EAAIyB,IAAOzB,EAC7BoY,GAAOpL,OAAOmJ,aAAsB,IAATxF,EAAI3Q,IAEjC,OAAOoY,CACT,CAEA,SAAS7E,EAAa5C,EAAKnP,EAAOC,GAChC,IAAI2W,EAAM,GACV3W,EAAM0B,KAAKwK,IAAIgD,EAAIjQ,OAAQe,GAE3B,IAAK,IAAIzB,EAAIwB,EAAOxB,EAAIyB,IAAOzB,EAC7BoY,GAAOpL,OAAOmJ,aAAaxF,EAAI3Q,IAEjC,OAAOoY,CACT,CAEA,SAAShF,EAAUzC,EAAKnP,EAAOC,GAC7B,MAAMpB,EAAMsQ,EAAIjQ,SAEXc,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAMpB,KAAKoB,EAAMpB,GAExC,IAAIqO,EAAM,GACV,IAAK,IAAI1O,EAAIwB,EAAOxB,EAAIyB,IAAOzB,EAC7B0O,GAAO2J,EAAoB1H,EAAI3Q,IAEjC,OAAO0O,CACT,CAEA,SAAS+E,EAAc9C,EAAKnP,EAAOC,GACjC,MAAM6W,EAAQ3H,EAAInL,MAAMhE,EAAOC,GAC/B,IAAIgU,EAAM,GAEV,IAAK,IAAIzV,EAAI,EAAGA,EAAIsY,EAAM5X,OAAS,EAAGV,GAAK,EACzCyV,GAAOzI,OAAOmJ,aAAamC,EAAMtY,GAAqB,IAAfsY,EAAMtY,EAAI,IAEnD,OAAOyV,CACT,CAiCA,SAAS8C,EAAa9D,EAAQ+D,EAAK9X,GACjC,GAAK+T,EAAS,GAAO,GAAKA,EAAS,EAAG,MAAM,IAAI/D,WAAW,sBAC3D,GAAI+D,EAAS+D,EAAM9X,EAAQ,MAAM,IAAIgQ,WAAW,wCAClD,CAyQA,SAAS+H,EAAU9H,EAAKhO,EAAO8R,EAAQ+D,EAAKjT,EAAKoI,GAC/C,IAAK4C,EAAO4B,SAASxB,GAAM,MAAM,IAAII,UAAU,+CAC/C,GAAIpO,EAAQ4C,GAAO5C,EAAQgL,EAAK,MAAM,IAAI+C,WAAW,qCACrD,GAAI+D,EAAS+D,EAAM7H,EAAIjQ,OAAQ,MAAM,IAAIgQ,WAAW,qBACtD,CA+FA,SAASgI,EAAgB/H,EAAKhO,EAAO8R,EAAQ9G,EAAKpI,GAChDoT,EAAWhW,EAAOgL,EAAKpI,EAAKoL,EAAK8D,EAAQ,GAEzC,IAAIc,EAAK9G,OAAO9L,EAAQT,OAAO,aAC/ByO,EAAI8D,KAAYc,EAChBA,IAAW,EACX5E,EAAI8D,KAAYc,EAChBA,IAAW,EACX5E,EAAI8D,KAAYc,EAChBA,IAAW,EACX5E,EAAI8D,KAAYc,EAChB,IAAID,EAAK7G,OAAO9L,GAAST,OAAO,IAAMA,OAAO,aAQ7C,OAPAyO,EAAI8D,KAAYa,EAChBA,IAAW,EACX3E,EAAI8D,KAAYa,EAChBA,IAAW,EACX3E,EAAI8D,KAAYa,EAChBA,IAAW,EACX3E,EAAI8D,KAAYa,EACTb,CACT,CAEA,SAASmE,EAAgBjI,EAAKhO,EAAO8R,EAAQ9G,EAAKpI,GAChDoT,EAAWhW,EAAOgL,EAAKpI,EAAKoL,EAAK8D,EAAQ,GAEzC,IAAIc,EAAK9G,OAAO9L,EAAQT,OAAO,aAC/ByO,EAAI8D,EAAS,GAAKc,EAClBA,IAAW,EACX5E,EAAI8D,EAAS,GAAKc,EAClBA,IAAW,EACX5E,EAAI8D,EAAS,GAAKc,EAClBA,IAAW,EACX5E,EAAI8D,EAAS,GAAKc,EAClB,IAAID,EAAK7G,OAAO9L,GAAST,OAAO,IAAMA,OAAO,aAQ7C,OAPAyO,EAAI8D,EAAS,GAAKa,EAClBA,IAAW,EACX3E,EAAI8D,EAAS,GAAKa,EAClBA,IAAW,EACX3E,EAAI8D,EAAS,GAAKa,EAClBA,IAAW,EACX3E,EAAI8D,GAAUa,EACPb,EAAS,CAClB,CAkHA,SAASoE,EAAclI,EAAKhO,EAAO8R,EAAQ+D,EAAKjT,EAAKoI,GACnD,GAAI8G,EAAS+D,EAAM7H,EAAIjQ,OAAQ,MAAM,IAAIgQ,WAAW,sBACpD,GAAI+D,EAAS,EAAG,MAAM,IAAI/D,WAAW,qBACvC,CAEA,SAASoI,EAAYnI,EAAKhO,EAAO8R,EAAQsE,EAAcC,GAOrD,OANArW,GAASA,EACT8R,KAAoB,EACfuE,GACHH,EAAalI,EAAKhO,EAAO8R,EAAQ,GAEnCrE,EAAQkB,MAAMX,EAAKhO,EAAO8R,EAAQsE,EAAc,GAAI,GAC7CtE,EAAS,CAClB,CAUA,SAASwE,EAAatI,EAAKhO,EAAO8R,EAAQsE,EAAcC,GAOtD,OANArW,GAASA,EACT8R,KAAoB,EACfuE,GACHH,EAAalI,EAAKhO,EAAO8R,EAAQ,GAEnCrE,EAAQkB,MAAMX,EAAKhO,EAAO8R,EAAQsE,EAAc,GAAI,GAC7CtE,EAAS,CAClB,CAzkBAlE,EAAO/H,UAAUhD,MAAQ,SAAgBhE,EAAOC,GAC9C,MAAMpB,EAAMwC,KAAKnC,QACjBc,IAAUA,GAGE,GACVA,GAASnB,GACG,IAAGmB,EAAQ,GACdA,EAAQnB,IACjBmB,EAAQnB,IANVoB,OAAcuJ,IAARvJ,EAAoBpB,IAAQoB,GASxB,GACRA,GAAOpB,GACG,IAAGoB,EAAM,GACVA,EAAMpB,IACfoB,EAAMpB,GAGJoB,EAAMD,IAAOC,EAAMD,GAEvB,MAAM0X,EAASrW,KAAKsW,SAAS3X,EAAOC,GAIpC,OAFAgH,OAAOmI,eAAesI,EAAQ3I,EAAO/H,WAE9B0Q,CACT,EAUA3I,EAAO/H,UAAU4Q,WACjB7I,EAAO/H,UAAU6Q,WAAa,SAAqB5E,EAAQjV,EAAYwZ,GACrEvE,KAAoB,EACpBjV,KAA4B,EACvBwZ,GAAUT,EAAY9D,EAAQjV,EAAYqD,KAAKnC,QAEpD,IAAIyN,EAAMtL,KAAK4R,GACX6E,EAAM,EACNtZ,EAAI,EACR,OAASA,EAAIR,IAAe8Z,GAAO,MACjCnL,GAAOtL,KAAK4R,EAASzU,GAAKsZ,EAG5B,OAAOnL,CACT,EAEAoC,EAAO/H,UAAU+Q,WACjBhJ,EAAO/H,UAAUgR,WAAa,SAAqB/E,EAAQjV,EAAYwZ,GACrEvE,KAAoB,EACpBjV,KAA4B,EACvBwZ,GACHT,EAAY9D,EAAQjV,EAAYqD,KAAKnC,QAGvC,IAAIyN,EAAMtL,KAAK4R,IAAWjV,GACtB8Z,EAAM,EACV,KAAO9Z,EAAa,IAAM8Z,GAAO,MAC/BnL,GAAOtL,KAAK4R,IAAWjV,GAAc8Z,EAGvC,OAAOnL,CACT,EAEAoC,EAAO/H,UAAUiR,UACjBlJ,EAAO/H,UAAUkR,UAAY,SAAoBjF,EAAQuE,GAGvD,OAFAvE,KAAoB,EACfuE,GAAUT,EAAY9D,EAAQ,EAAG5R,KAAKnC,QACpCmC,KAAK4R,EACd,EAEAlE,EAAO/H,UAAUmR,aACjBpJ,EAAO/H,UAAUoR,aAAe,SAAuBnF,EAAQuE,GAG7D,OAFAvE,KAAoB,EACfuE,GAAUT,EAAY9D,EAAQ,EAAG5R,KAAKnC,QACpCmC,KAAK4R,GAAW5R,KAAK4R,EAAS,IAAM,CAC7C,EAEAlE,EAAO/H,UAAUqR,aACjBtJ,EAAO/H,UAAU6L,aAAe,SAAuBI,EAAQuE,GAG7D,OAFAvE,KAAoB,EACfuE,GAAUT,EAAY9D,EAAQ,EAAG5R,KAAKnC,QACnCmC,KAAK4R,IAAW,EAAK5R,KAAK4R,EAAS,EAC7C,EAEAlE,EAAO/H,UAAUsR,aACjBvJ,EAAO/H,UAAUuR,aAAe,SAAuBtF,EAAQuE,GAI7D,OAHAvE,KAAoB,EACfuE,GAAUT,EAAY9D,EAAQ,EAAG5R,KAAKnC,SAElCmC,KAAK4R,GACT5R,KAAK4R,EAAS,IAAM,EACpB5R,KAAK4R,EAAS,IAAM,IACD,SAAnB5R,KAAK4R,EAAS,EACrB,EAEAlE,EAAO/H,UAAUwR,aACjBzJ,EAAO/H,UAAUyR,aAAe,SAAuBxF,EAAQuE,GAI7D,OAHAvE,KAAoB,EACfuE,GAAUT,EAAY9D,EAAQ,EAAG5R,KAAKnC,QAEpB,SAAfmC,KAAK4R,IACT5R,KAAK4R,EAAS,IAAM,GACrB5R,KAAK4R,EAAS,IAAM,EACrB5R,KAAK4R,EAAS,GAClB,EAEAlE,EAAO/H,UAAU0R,gBAAkBC,GAAmB,SAA0B1F,GAE9E2F,EADA3F,KAAoB,EACG,UACvB,MAAM4F,EAAQxX,KAAK4R,GACb6F,EAAOzX,KAAK4R,EAAS,QACbzJ,IAAVqP,QAAgCrP,IAATsP,GACzBC,EAAY9F,EAAQ5R,KAAKnC,OAAS,GAGpC,MAAM6U,EAAK8E,EACQ,IAAjBxX,OAAO4R,GACU,MAAjB5R,OAAO4R,GACP5R,OAAO4R,GAAU,GAAK,GAElBa,EAAKzS,OAAO4R,GACC,IAAjB5R,OAAO4R,GACU,MAAjB5R,OAAO4R,GACP6F,EAAO,GAAK,GAEd,OAAOpY,OAAOqT,IAAOrT,OAAOoT,IAAOpT,OAAO,IAC5C,IAEAqO,EAAO/H,UAAUgS,gBAAkBL,GAAmB,SAA0B1F,GAE9E2F,EADA3F,KAAoB,EACG,UACvB,MAAM4F,EAAQxX,KAAK4R,GACb6F,EAAOzX,KAAK4R,EAAS,QACbzJ,IAAVqP,QAAgCrP,IAATsP,GACzBC,EAAY9F,EAAQ5R,KAAKnC,OAAS,GAGpC,MAAM4U,EAAK+E,EAAQ,GAAK,GACL,MAAjBxX,OAAO4R,GACU,IAAjB5R,OAAO4R,GACP5R,OAAO4R,GAEHc,EAAK1S,OAAO4R,GAAU,GAAK,GACd,MAAjB5R,OAAO4R,GACU,IAAjB5R,OAAO4R,GACP6F,EAEF,OAAQpY,OAAOoT,IAAOpT,OAAO,KAAOA,OAAOqT,EAC7C,IAEAhF,EAAO/H,UAAUiS,UAAY,SAAoBhG,EAAQjV,EAAYwZ,GACnEvE,KAAoB,EACpBjV,KAA4B,EACvBwZ,GAAUT,EAAY9D,EAAQjV,EAAYqD,KAAKnC,QAEpD,IAAIyN,EAAMtL,KAAK4R,GACX6E,EAAM,EACNtZ,EAAI,EACR,OAASA,EAAIR,IAAe8Z,GAAO,MACjCnL,GAAOtL,KAAK4R,EAASzU,GAAKsZ,EAM5B,OAJAA,GAAO,IAEHnL,GAAOmL,IAAKnL,GAAOhL,KAAKmG,IAAI,EAAG,EAAI9J,IAEhC2O,CACT,EAEAoC,EAAO/H,UAAUkS,UAAY,SAAoBjG,EAAQjV,EAAYwZ,GACnEvE,KAAoB,EACpBjV,KAA4B,EACvBwZ,GAAUT,EAAY9D,EAAQjV,EAAYqD,KAAKnC,QAEpD,IAAIV,EAAIR,EACJ8Z,EAAM,EACNnL,EAAMtL,KAAK4R,IAAWzU,GAC1B,KAAOA,EAAI,IAAMsZ,GAAO,MACtBnL,GAAOtL,KAAK4R,IAAWzU,GAAKsZ,EAM9B,OAJAA,GAAO,IAEHnL,GAAOmL,IAAKnL,GAAOhL,KAAKmG,IAAI,EAAG,EAAI9J,IAEhC2O,CACT,EAEAoC,EAAO/H,UAAUmS,SAAW,SAAmBlG,EAAQuE,GAGrD,OAFAvE,KAAoB,EACfuE,GAAUT,EAAY9D,EAAQ,EAAG5R,KAAKnC,QACtB,IAAfmC,KAAK4R,IAC0B,GAA5B,IAAO5R,KAAK4R,GAAU,GADK5R,KAAK4R,EAE3C,EAEAlE,EAAO/H,UAAUoS,YAAc,SAAsBnG,EAAQuE,GAC3DvE,KAAoB,EACfuE,GAAUT,EAAY9D,EAAQ,EAAG5R,KAAKnC,QAC3C,MAAMyN,EAAMtL,KAAK4R,GAAW5R,KAAK4R,EAAS,IAAM,EAChD,OAAc,MAANtG,EAAsB,WAANA,EAAmBA,CAC7C,EAEAoC,EAAO/H,UAAUqS,YAAc,SAAsBpG,EAAQuE,GAC3DvE,KAAoB,EACfuE,GAAUT,EAAY9D,EAAQ,EAAG5R,KAAKnC,QAC3C,MAAMyN,EAAMtL,KAAK4R,EAAS,GAAM5R,KAAK4R,IAAW,EAChD,OAAc,MAANtG,EAAsB,WAANA,EAAmBA,CAC7C,EAEAoC,EAAO/H,UAAUsS,YAAc,SAAsBrG,EAAQuE,GAI3D,OAHAvE,KAAoB,EACfuE,GAAUT,EAAY9D,EAAQ,EAAG5R,KAAKnC,QAEnCmC,KAAK4R,GACV5R,KAAK4R,EAAS,IAAM,EACpB5R,KAAK4R,EAAS,IAAM,GACpB5R,KAAK4R,EAAS,IAAM,EACzB,EAEAlE,EAAO/H,UAAUuS,YAAc,SAAsBtG,EAAQuE,GAI3D,OAHAvE,KAAoB,EACfuE,GAAUT,EAAY9D,EAAQ,EAAG5R,KAAKnC,QAEnCmC,KAAK4R,IAAW,GACrB5R,KAAK4R,EAAS,IAAM,GACpB5R,KAAK4R,EAAS,IAAM,EACpB5R,KAAK4R,EAAS,EACnB,EAEAlE,EAAO/H,UAAUwS,eAAiBb,GAAmB,SAAyB1F,GAE5E2F,EADA3F,KAAoB,EACG,UACvB,MAAM4F,EAAQxX,KAAK4R,GACb6F,EAAOzX,KAAK4R,EAAS,QACbzJ,IAAVqP,QAAgCrP,IAATsP,GACzBC,EAAY9F,EAAQ5R,KAAKnC,OAAS,GAGpC,MAAMyN,EAAMtL,KAAK4R,EAAS,GACL,IAAnB5R,KAAK4R,EAAS,GACK,MAAnB5R,KAAK4R,EAAS,IACb6F,GAAQ,IAEX,OAAQpY,OAAOiM,IAAQjM,OAAO,KAC5BA,OAAOmY,EACU,IAAjBxX,OAAO4R,GACU,MAAjB5R,OAAO4R,GACP5R,OAAO4R,GAAU,GAAK,GAC1B,IAEAlE,EAAO/H,UAAUyS,eAAiBd,GAAmB,SAAyB1F,GAE5E2F,EADA3F,KAAoB,EACG,UACvB,MAAM4F,EAAQxX,KAAK4R,GACb6F,EAAOzX,KAAK4R,EAAS,QACbzJ,IAAVqP,QAAgCrP,IAATsP,GACzBC,EAAY9F,EAAQ5R,KAAKnC,OAAS,GAGpC,MAAMyN,GAAOkM,GAAS,IACH,MAAjBxX,OAAO4R,GACU,IAAjB5R,OAAO4R,GACP5R,OAAO4R,GAET,OAAQvS,OAAOiM,IAAQjM,OAAO,KAC5BA,OAAOW,OAAO4R,GAAU,GAAK,GACZ,MAAjB5R,OAAO4R,GACU,IAAjB5R,OAAO4R,GACP6F,EACJ,IAEA/J,EAAO/H,UAAU0S,YAAc,SAAsBzG,EAAQuE,GAG3D,OAFAvE,KAAoB,EACfuE,GAAUT,EAAY9D,EAAQ,EAAG5R,KAAKnC,QACpC0P,EAAQgE,KAAKvR,KAAM4R,GAAQ,EAAM,GAAI,EAC9C,EAEAlE,EAAO/H,UAAU2S,YAAc,SAAsB1G,EAAQuE,GAG3D,OAFAvE,KAAoB,EACfuE,GAAUT,EAAY9D,EAAQ,EAAG5R,KAAKnC,QACpC0P,EAAQgE,KAAKvR,KAAM4R,GAAQ,EAAO,GAAI,EAC/C,EAEAlE,EAAO/H,UAAU4S,aAAe,SAAuB3G,EAAQuE,GAG7D,OAFAvE,KAAoB,EACfuE,GAAUT,EAAY9D,EAAQ,EAAG5R,KAAKnC,QACpC0P,EAAQgE,KAAKvR,KAAM4R,GAAQ,EAAM,GAAI,EAC9C,EAEAlE,EAAO/H,UAAU6S,aAAe,SAAuB5G,EAAQuE,GAG7D,OAFAvE,KAAoB,EACfuE,GAAUT,EAAY9D,EAAQ,EAAG5R,KAAKnC,QACpC0P,EAAQgE,KAAKvR,KAAM4R,GAAQ,EAAO,GAAI,EAC/C,EAQAlE,EAAO/H,UAAU8S,YACjB/K,EAAO/H,UAAU+S,YAAc,SAAsB5Y,EAAO8R,EAAQjV,EAAYwZ,GAC9ErW,GAASA,EACT8R,KAAoB,EACpBjV,KAA4B,EACvBwZ,GAEHP,EAAS5V,KAAMF,EAAO8R,EAAQjV,EADb2D,KAAKmG,IAAI,EAAG,EAAI9J,GAAc,EACK,GAGtD,IAAI8Z,EAAM,EACNtZ,EAAI,EAER,IADA6C,KAAK4R,GAAkB,IAAR9R,IACN3C,EAAIR,IAAe8Z,GAAO,MACjCzW,KAAK4R,EAASzU,GAAM2C,EAAQ2W,EAAO,IAGrC,OAAO7E,EAASjV,CAClB,EAEA+Q,EAAO/H,UAAUgT,YACjBjL,EAAO/H,UAAUiT,YAAc,SAAsB9Y,EAAO8R,EAAQjV,EAAYwZ,GAC9ErW,GAASA,EACT8R,KAAoB,EACpBjV,KAA4B,EACvBwZ,GAEHP,EAAS5V,KAAMF,EAAO8R,EAAQjV,EADb2D,KAAKmG,IAAI,EAAG,EAAI9J,GAAc,EACK,GAGtD,IAAIQ,EAAIR,EAAa,EACjB8Z,EAAM,EAEV,IADAzW,KAAK4R,EAASzU,GAAa,IAAR2C,IACV3C,GAAK,IAAMsZ,GAAO,MACzBzW,KAAK4R,EAASzU,GAAM2C,EAAQ2W,EAAO,IAGrC,OAAO7E,EAASjV,CAClB,EAEA+Q,EAAO/H,UAAUkT,WACjBnL,EAAO/H,UAAUmT,WAAa,SAAqBhZ,EAAO8R,EAAQuE,GAKhE,OAJArW,GAASA,EACT8R,KAAoB,EACfuE,GAAUP,EAAS5V,KAAMF,EAAO8R,EAAQ,EAAG,IAAM,GACtD5R,KAAK4R,GAAmB,IAAR9R,EACT8R,EAAS,CAClB,EAEAlE,EAAO/H,UAAUoT,cACjBrL,EAAO/H,UAAUqT,cAAgB,SAAwBlZ,EAAO8R,EAAQuE,GAMtE,OALArW,GAASA,EACT8R,KAAoB,EACfuE,GAAUP,EAAS5V,KAAMF,EAAO8R,EAAQ,EAAG,MAAQ,GACxD5R,KAAK4R,GAAmB,IAAR9R,EAChBE,KAAK4R,EAAS,GAAM9R,IAAU,EACvB8R,EAAS,CAClB,EAEAlE,EAAO/H,UAAUsT,cACjBvL,EAAO/H,UAAUuT,cAAgB,SAAwBpZ,EAAO8R,EAAQuE,GAMtE,OALArW,GAASA,EACT8R,KAAoB,EACfuE,GAAUP,EAAS5V,KAAMF,EAAO8R,EAAQ,EAAG,MAAQ,GACxD5R,KAAK4R,GAAW9R,IAAU,EAC1BE,KAAK4R,EAAS,GAAc,IAAR9R,EACb8R,EAAS,CAClB,EAEAlE,EAAO/H,UAAUwT,cACjBzL,EAAO/H,UAAUyT,cAAgB,SAAwBtZ,EAAO8R,EAAQuE,GAQtE,OAPArW,GAASA,EACT8R,KAAoB,EACfuE,GAAUP,EAAS5V,KAAMF,EAAO8R,EAAQ,EAAG,WAAY,GAC5D5R,KAAK4R,EAAS,GAAM9R,IAAU,GAC9BE,KAAK4R,EAAS,GAAM9R,IAAU,GAC9BE,KAAK4R,EAAS,GAAM9R,IAAU,EAC9BE,KAAK4R,GAAmB,IAAR9R,EACT8R,EAAS,CAClB,EAEAlE,EAAO/H,UAAU0T,cACjB3L,EAAO/H,UAAU2T,cAAgB,SAAwBxZ,EAAO8R,EAAQuE,GAQtE,OAPArW,GAASA,EACT8R,KAAoB,EACfuE,GAAUP,EAAS5V,KAAMF,EAAO8R,EAAQ,EAAG,WAAY,GAC5D5R,KAAK4R,GAAW9R,IAAU,GAC1BE,KAAK4R,EAAS,GAAM9R,IAAU,GAC9BE,KAAK4R,EAAS,GAAM9R,IAAU,EAC9BE,KAAK4R,EAAS,GAAc,IAAR9R,EACb8R,EAAS,CAClB,EA8CAlE,EAAO/H,UAAU4T,iBAAmBjC,GAAmB,SAA2BxX,EAAO8R,EAAS,GAChG,OAAOiE,EAAe7V,KAAMF,EAAO8R,EAAQvS,OAAO,GAAIA,OAAO,sBAC/D,IAEAqO,EAAO/H,UAAU6T,iBAAmBlC,GAAmB,SAA2BxX,EAAO8R,EAAS,GAChG,OAAOmE,EAAe/V,KAAMF,EAAO8R,EAAQvS,OAAO,GAAIA,OAAO,sBAC/D,IAEAqO,EAAO/H,UAAU8T,WAAa,SAAqB3Z,EAAO8R,EAAQjV,EAAYwZ,GAG5E,GAFArW,GAASA,EACT8R,KAAoB,GACfuE,EAAU,CACb,MAAMuD,EAAQpZ,KAAKmG,IAAI,EAAI,EAAI9J,EAAc,GAE7CiZ,EAAS5V,KAAMF,EAAO8R,EAAQjV,EAAY+c,EAAQ,GAAIA,EACxD,CAEA,IAAIvc,EAAI,EACJsZ,EAAM,EACNkD,EAAM,EAEV,IADA3Z,KAAK4R,GAAkB,IAAR9R,IACN3C,EAAIR,IAAe8Z,GAAO,MAC7B3W,EAAQ,GAAa,IAAR6Z,GAAsC,IAAzB3Z,KAAK4R,EAASzU,EAAI,KAC9Cwc,EAAM,GAER3Z,KAAK4R,EAASzU,IAAO2C,EAAQ2W,GAAQ,GAAKkD,EAAM,IAGlD,OAAO/H,EAASjV,CAClB,EAEA+Q,EAAO/H,UAAUiU,WAAa,SAAqB9Z,EAAO8R,EAAQjV,EAAYwZ,GAG5E,GAFArW,GAASA,EACT8R,KAAoB,GACfuE,EAAU,CACb,MAAMuD,EAAQpZ,KAAKmG,IAAI,EAAI,EAAI9J,EAAc,GAE7CiZ,EAAS5V,KAAMF,EAAO8R,EAAQjV,EAAY+c,EAAQ,GAAIA,EACxD,CAEA,IAAIvc,EAAIR,EAAa,EACjB8Z,EAAM,EACNkD,EAAM,EAEV,IADA3Z,KAAK4R,EAASzU,GAAa,IAAR2C,IACV3C,GAAK,IAAMsZ,GAAO,MACrB3W,EAAQ,GAAa,IAAR6Z,GAAsC,IAAzB3Z,KAAK4R,EAASzU,EAAI,KAC9Cwc,EAAM,GAER3Z,KAAK4R,EAASzU,IAAO2C,EAAQ2W,GAAQ,GAAKkD,EAAM,IAGlD,OAAO/H,EAASjV,CAClB,EAEA+Q,EAAO/H,UAAUkU,UAAY,SAAoB/Z,EAAO8R,EAAQuE,GAM9D,OALArW,GAASA,EACT8R,KAAoB,EACfuE,GAAUP,EAAS5V,KAAMF,EAAO8R,EAAQ,EAAG,KAAO,KACnD9R,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCE,KAAK4R,GAAmB,IAAR9R,EACT8R,EAAS,CAClB,EAEAlE,EAAO/H,UAAUmU,aAAe,SAAuBha,EAAO8R,EAAQuE,GAMpE,OALArW,GAASA,EACT8R,KAAoB,EACfuE,GAAUP,EAAS5V,KAAMF,EAAO8R,EAAQ,EAAG,OAAS,OACzD5R,KAAK4R,GAAmB,IAAR9R,EAChBE,KAAK4R,EAAS,GAAM9R,IAAU,EACvB8R,EAAS,CAClB,EAEAlE,EAAO/H,UAAUoU,aAAe,SAAuBja,EAAO8R,EAAQuE,GAMpE,OALArW,GAASA,EACT8R,KAAoB,EACfuE,GAAUP,EAAS5V,KAAMF,EAAO8R,EAAQ,EAAG,OAAS,OACzD5R,KAAK4R,GAAW9R,IAAU,EAC1BE,KAAK4R,EAAS,GAAc,IAAR9R,EACb8R,EAAS,CAClB,EAEAlE,EAAO/H,UAAUqU,aAAe,SAAuBla,EAAO8R,EAAQuE,GAQpE,OAPArW,GAASA,EACT8R,KAAoB,EACfuE,GAAUP,EAAS5V,KAAMF,EAAO8R,EAAQ,EAAG,YAAa,YAC7D5R,KAAK4R,GAAmB,IAAR9R,EAChBE,KAAK4R,EAAS,GAAM9R,IAAU,EAC9BE,KAAK4R,EAAS,GAAM9R,IAAU,GAC9BE,KAAK4R,EAAS,GAAM9R,IAAU,GACvB8R,EAAS,CAClB,EAEAlE,EAAO/H,UAAUsU,aAAe,SAAuBna,EAAO8R,EAAQuE,GASpE,OARArW,GAASA,EACT8R,KAAoB,EACfuE,GAAUP,EAAS5V,KAAMF,EAAO8R,EAAQ,EAAG,YAAa,YACzD9R,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5CE,KAAK4R,GAAW9R,IAAU,GAC1BE,KAAK4R,EAAS,GAAM9R,IAAU,GAC9BE,KAAK4R,EAAS,GAAM9R,IAAU,EAC9BE,KAAK4R,EAAS,GAAc,IAAR9R,EACb8R,EAAS,CAClB,EAEAlE,EAAO/H,UAAUuU,gBAAkB5C,GAAmB,SAA0BxX,EAAO8R,EAAS,GAC9F,OAAOiE,EAAe7V,KAAMF,EAAO8R,GAASvS,OAAO,sBAAuBA,OAAO,sBACnF,IAEAqO,EAAO/H,UAAUwU,gBAAkB7C,GAAmB,SAA0BxX,EAAO8R,EAAS,GAC9F,OAAOmE,EAAe/V,KAAMF,EAAO8R,GAASvS,OAAO,sBAAuBA,OAAO,sBACnF,IAiBAqO,EAAO/H,UAAUyU,aAAe,SAAuBta,EAAO8R,EAAQuE,GACpE,OAAOF,EAAWjW,KAAMF,EAAO8R,GAAQ,EAAMuE,EAC/C,EAEAzI,EAAO/H,UAAU0U,aAAe,SAAuBva,EAAO8R,EAAQuE,GACpE,OAAOF,EAAWjW,KAAMF,EAAO8R,GAAQ,EAAOuE,EAChD,EAYAzI,EAAO/H,UAAU2U,cAAgB,SAAwBxa,EAAO8R,EAAQuE,GACtE,OAAOC,EAAYpW,KAAMF,EAAO8R,GAAQ,EAAMuE,EAChD,EAEAzI,EAAO/H,UAAU4U,cAAgB,SAAwBza,EAAO8R,EAAQuE,GACtE,OAAOC,EAAYpW,KAAMF,EAAO8R,GAAQ,EAAOuE,EACjD,EAGAzI,EAAO/H,UAAUmJ,KAAO,SAAeiG,EAAQyF,EAAa7b,EAAOC,GACjE,IAAK8O,EAAO4B,SAASyF,GAAS,MAAM,IAAI7G,UAAU,+BAQlD,GAPKvP,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAMoB,KAAKnC,QAC9B2c,GAAezF,EAAOlX,SAAQ2c,EAAczF,EAAOlX,QAClD2c,IAAaA,EAAc,GAC5B5b,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlBoW,EAAOlX,QAAgC,IAAhBmC,KAAKnC,OAAc,OAAO,EAGrD,GAAI2c,EAAc,EAChB,MAAM,IAAI3M,WAAW,6BAEvB,GAAIlP,EAAQ,GAAKA,GAASqB,KAAKnC,OAAQ,MAAM,IAAIgQ,WAAW,sBAC5D,GAAIjP,EAAM,EAAG,MAAM,IAAIiP,WAAW,2BAG9BjP,EAAMoB,KAAKnC,SAAQe,EAAMoB,KAAKnC,QAC9BkX,EAAOlX,OAAS2c,EAAc5b,EAAMD,IACtCC,EAAMmW,EAAOlX,OAAS2c,EAAc7b,GAGtC,MAAMnB,EAAMoB,EAAMD,EAalB,OAXIqB,OAAS+U,GAAqD,mBAApCzW,WAAWqH,UAAU8U,WAEjDza,KAAKya,WAAWD,EAAa7b,EAAOC,GAEpCN,WAAWqH,UAAU6O,IAAItD,KACvB6D,EACA/U,KAAKsW,SAAS3X,EAAOC,GACrB4b,GAIGhd,CACT,EAMAkQ,EAAO/H,UAAUwO,KAAO,SAAe7I,EAAK3M,EAAOC,EAAK0P,GAEtD,GAAmB,iBAARhD,EAAkB,CAS3B,GARqB,iBAAV3M,GACT2P,EAAW3P,EACXA,EAAQ,EACRC,EAAMoB,KAAKnC,QACa,iBAARe,IAChB0P,EAAW1P,EACXA,EAAMoB,KAAKnC,aAEIsK,IAAbmG,GAA8C,iBAAbA,EACnC,MAAM,IAAIJ,UAAU,6BAEtB,GAAwB,iBAAbI,IAA0BZ,EAAOa,WAAWD,GACrD,MAAM,IAAIJ,UAAU,qBAAuBI,GAE7C,GAAmB,IAAfhD,EAAIzN,OAAc,CACpB,MAAMW,EAAO8M,EAAI5N,WAAW,IACV,SAAb4Q,GAAuB9P,EAAO,KAClB,WAAb8P,KAEFhD,EAAM9M,EAEV,CACF,KAA0B,iBAAR8M,EAChBA,GAAY,IACY,kBAARA,IAChBA,EAAMM,OAAON,IAIf,GAAI3M,EAAQ,GAAKqB,KAAKnC,OAASc,GAASqB,KAAKnC,OAASe,EACpD,MAAM,IAAIiP,WAAW,sBAGvB,GAAIjP,GAAOD,EACT,OAAOqB,KAQT,IAAI7C,EACJ,GANAwB,KAAkB,EAClBC,OAAcuJ,IAARvJ,EAAoBoB,KAAKnC,OAASe,IAAQ,EAE3C0M,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAKnO,EAAIwB,EAAOxB,EAAIyB,IAAOzB,EACzB6C,KAAK7C,GAAKmO,MAEP,CACL,MAAMmK,EAAQ/H,EAAO4B,SAAShE,GAC1BA,EACAoC,EAAOU,KAAK9C,EAAKgD,GACf9Q,EAAMiY,EAAM5X,OAClB,GAAY,IAARL,EACF,MAAM,IAAI0Q,UAAU,cAAgB5C,EAClC,qCAEJ,IAAKnO,EAAI,EAAGA,EAAIyB,EAAMD,IAASxB,EAC7B6C,KAAK7C,EAAIwB,GAAS8W,EAAMtY,EAAIK,EAEhC,CAEA,OAAOwC,IACT,EAMA,MAAM0a,EAAS,CAAC,EAChB,SAASC,EAAGC,EAAKC,EAAYC,GAC3BJ,EAAOE,GAAO,cAAwBE,EACpCC,cACEC,QAEApV,OAAOkO,eAAe9T,KAAM,UAAW,CACrCF,MAAO+a,EAAWrP,MAAMxL,KAAMkQ,WAC9B+K,UAAU,EACVC,cAAc,IAIhBlb,KAAKmb,KAAO,GAAGnb,KAAKmb,SAASP,KAG7B5a,KAAKob,aAEEpb,KAAKmb,IACd,CAEI3c,WACF,OAAOoc,CACT,CAEIpc,SAAMsB,GACR8F,OAAOkO,eAAe9T,KAAM,OAAQ,CAClCkb,cAAc,EACdnH,YAAY,EACZjU,QACAmb,UAAU,GAEd,CAEAvU,WACE,MAAO,GAAG1G,KAAKmb,SAASP,OAAS5a,KAAKqb,SACxC,EAEJ,CA+BA,SAASC,EAAuBhQ,GAC9B,IAAIsH,EAAM,GACNzV,EAAImO,EAAIzN,OACZ,MAAMc,EAAmB,MAAX2M,EAAI,GAAa,EAAI,EACnC,KAAOnO,GAAKwB,EAAQ,EAAGxB,GAAK,EAC1ByV,EAAM,IAAItH,EAAI3I,MAAMxF,EAAI,EAAGA,KAAKyV,IAElC,MAAO,GAAGtH,EAAI3I,MAAM,EAAGxF,KAAKyV,GAC9B,CAYA,SAASkD,EAAYhW,EAAOgL,EAAKpI,EAAKoL,EAAK8D,EAAQjV,GACjD,GAAImD,EAAQ4C,GAAO5C,EAAQgL,EAAK,CAC9B,MAAMzK,EAAmB,iBAARyK,EAAmB,IAAM,GAC1C,IAAImC,EAWJ,MARIA,EAFAtQ,EAAa,EACH,IAARmO,GAAaA,IAAQzL,OAAO,GACtB,OAAOgB,YAAYA,QAA2B,GAAlB1D,EAAa,KAAS0D,IAElD,SAASA,QAA2B,GAAlB1D,EAAa,GAAS,IAAI0D,iBACtB,GAAlB1D,EAAa,GAAS,IAAI0D,IAGhC,MAAMyK,IAAMzK,YAAYqC,IAAMrC,IAElC,IAAIqa,EAAOa,iBAAiB,QAAStO,EAAOnN,EACpD,EAtBF,SAAsBgO,EAAK8D,EAAQjV,GACjC4a,EAAe3F,EAAQ,eACHzJ,IAAhB2F,EAAI8D,SAAsDzJ,IAA7B2F,EAAI8D,EAASjV,IAC5C+a,EAAY9F,EAAQ9D,EAAIjQ,QAAUlB,EAAa,GAEnD,CAkBE6e,CAAY1N,EAAK8D,EAAQjV,EAC3B,CAEA,SAAS4a,EAAgBzX,EAAOqb,GAC9B,GAAqB,iBAAVrb,EACT,MAAM,IAAI4a,EAAOe,qBAAqBN,EAAM,SAAUrb,EAE1D,CAEA,SAAS4X,EAAa5X,EAAOjC,EAAQ4R,GACnC,GAAInP,KAAKC,MAAMT,KAAWA,EAExB,MADAyX,EAAezX,EAAO2P,GAChB,IAAIiL,EAAOa,iBAAiB9L,GAAQ,SAAU,aAAc3P,GAGpE,GAAIjC,EAAS,EACX,MAAM,IAAI6c,EAAOgB,yBAGnB,MAAM,IAAIhB,EAAOa,iBAAiB9L,GAAQ,SACR,MAAMA,EAAO,EAAI,YAAY5R,IAC7BiC,EACpC,CAvFA6a,EAAE,4BACA,SAAUQ,GACR,OAAIA,EACK,GAAGA,gCAGL,gDACT,GAAGtN,YACL8M,EAAE,wBACA,SAAUQ,EAAM3M,GACd,MAAO,QAAQ2M,4DAA+D3M,GAChF,GAAGN,WACLyM,EAAE,oBACA,SAAUnO,EAAKS,EAAO0O,GACpB,IAAIC,EAAM,iBAAiBpP,sBACvBqP,EAAWF,EAWf,OAVI/P,OAAOkQ,UAAUH,IAAUrb,KAAKqD,IAAIgY,GAAS,GAAK,GACpDE,EAAWP,EAAsBnR,OAAOwR,IACd,iBAAVA,IAChBE,EAAW1R,OAAOwR,IACdA,EAAQtc,OAAO,IAAMA,OAAO,KAAOsc,IAAUtc,OAAO,IAAMA,OAAO,QACnEwc,EAAWP,EAAsBO,IAEnCA,GAAY,KAEdD,GAAO,eAAe3O,eAAmB4O,IAClCD,CACT,GAAG/N,YAiEL,MAAMkO,EAAoB,oBAgB1B,SAAS3L,EAAa/B,EAAQmE,GAE5B,IAAIM,EADJN,EAAQA,GAASnL,IAEjB,MAAMxJ,EAASwQ,EAAOxQ,OACtB,IAAIme,EAAgB,KACpB,MAAMvG,EAAQ,GAEd,IAAK,IAAItY,EAAI,EAAGA,EAAIU,IAAUV,EAAG,CAI/B,GAHA2V,EAAYzE,EAAO3Q,WAAWP,GAG1B2V,EAAY,OAAUA,EAAY,MAAQ,CAE5C,IAAKkJ,EAAe,CAElB,GAAIlJ,EAAY,MAAQ,EAEjBN,GAAS,IAAM,GAAGiD,EAAMvX,KAAK,IAAM,IAAM,KAC9C,QACF,CAAO,GAAIf,EAAI,IAAMU,EAAQ,EAEtB2U,GAAS,IAAM,GAAGiD,EAAMvX,KAAK,IAAM,IAAM,KAC9C,QACF,CAGA8d,EAAgBlJ,EAEhB,QACF,CAGA,GAAIA,EAAY,MAAQ,EACjBN,GAAS,IAAM,GAAGiD,EAAMvX,KAAK,IAAM,IAAM,KAC9C8d,EAAgBlJ,EAChB,QACF,CAGAA,EAAkE,OAArDkJ,EAAgB,OAAU,GAAKlJ,EAAY,MAC1D,MAAWkJ,IAEJxJ,GAAS,IAAM,GAAGiD,EAAMvX,KAAK,IAAM,IAAM,KAMhD,GAHA8d,EAAgB,KAGZlJ,EAAY,IAAM,CACpB,IAAKN,GAAS,GAAK,EAAG,MACtBiD,EAAMvX,KAAK4U,EACb,MAAO,GAAIA,EAAY,KAAO,CAC5B,IAAKN,GAAS,GAAK,EAAG,MACtBiD,EAAMvX,KACJ4U,GAAa,EAAM,IACP,GAAZA,EAAmB,IAEvB,MAAO,GAAIA,EAAY,MAAS,CAC9B,IAAKN,GAAS,GAAK,EAAG,MACtBiD,EAAMvX,KACJ4U,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAEvB,KAAO,MAAIA,EAAY,SASrB,MAAM,IAAIrU,MAAM,sBARhB,IAAK+T,GAAS,GAAK,EAAG,MACtBiD,EAAMvX,KACJ4U,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAIvB,CACF,CAEA,OAAO2C,CACT,CA2BA,SAASpF,EAAe7D,GACtB,OAAOc,EAAOrQ,YAxHhB,SAAsBuP,GAMpB,IAFAA,GAFAA,EAAMA,EAAIL,MAAM,KAAK,IAEX1L,OAAOqU,QAAQiH,EAAmB,KAEpCle,OAAS,EAAG,MAAO,GAE3B,KAAO2O,EAAI3O,OAAS,GAAM,GACxB2O,GAAY,IAEd,OAAOA,CACT,CA4G4ByP,CAAYzP,GACxC,CAEA,SAAS0F,EAAYgK,EAAKC,EAAKvK,EAAQ/T,GACrC,IAAIV,EACJ,IAAKA,EAAI,EAAGA,EAAIU,KACTV,EAAIyU,GAAUuK,EAAIte,QAAYV,GAAK+e,EAAIre,UADpBV,EAExBgf,EAAIhf,EAAIyU,GAAUsK,EAAI/e,GAExB,OAAOA,CACT,CAKA,SAAS0P,EAAYwC,EAAKI,GACxB,OAAOJ,aAAeI,GACZ,MAAPJ,GAAkC,MAAnBA,EAAI0L,aAA+C,MAAxB1L,EAAI0L,YAAYI,MACzD9L,EAAI0L,YAAYI,OAAS1L,EAAK0L,IACpC,CACA,SAAS3L,EAAaH,GAEpB,OAAOA,GAAQA,CACjB,CAIA,MAAMmG,EAAsB,WAC1B,MAAM/V,EAAW,mBACX2c,EAAQ,IAAI7d,MAAM,KACxB,IAAK,IAAIpB,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,MAAMkf,EAAU,GAAJlf,EACZ,IAAK,IAAIiF,EAAI,EAAGA,EAAI,KAAMA,EACxBga,EAAMC,EAAMja,GAAK3C,EAAStC,GAAKsC,EAAS2C,EAE5C,CACA,OAAOga,CACR,CAV2B,GAa5B,SAAS9E,EAAoB7N,GAC3B,MAAyB,oBAAXpK,OAAyBid,EAAyB7S,CAClE,CAEA,SAAS6S,IACP,MAAM,IAAI7d,MAAM,uBAClB,eCxjEAnC,EAAQiV,KAAO,SAAUvC,EAAQ4C,EAAQ2K,EAAMC,EAAMC,GACnD,IAAI5R,EAAGiG,EACH4L,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACT1f,EAAIof,EAAQE,EAAS,EAAK,EAC1B7Z,EAAI2Z,GAAQ,EAAI,EAChBO,EAAI9N,EAAO4C,EAASzU,GAOxB,IALAA,GAAKyF,EAELiI,EAAIiS,GAAM,IAAOD,GAAU,EAC3BC,KAAQD,EACRA,GAASH,EACFG,EAAQ,EAAGhS,EAAS,IAAJA,EAAWmE,EAAO4C,EAASzU,GAAIA,GAAKyF,EAAGia,GAAS,GAKvE,IAHA/L,EAAIjG,GAAM,IAAOgS,GAAU,EAC3BhS,KAAQgS,EACRA,GAASL,EACFK,EAAQ,EAAG/L,EAAS,IAAJA,EAAW9B,EAAO4C,EAASzU,GAAIA,GAAKyF,EAAGia,GAAS,GAEvE,GAAU,IAANhS,EACFA,EAAI,EAAI+R,MACH,IAAI/R,IAAM8R,EACf,OAAO7L,EAAIiM,IAAsB1V,KAAdyV,GAAK,EAAI,GAE5BhM,GAAQxQ,KAAKmG,IAAI,EAAG+V,GACpB3R,GAAQ+R,CACV,CACA,OAAQE,GAAK,EAAI,GAAKhM,EAAIxQ,KAAKmG,IAAI,EAAGoE,EAAI2R,EAC5C,EAEAlgB,EAAQmS,MAAQ,SAAUO,EAAQlP,EAAO8R,EAAQ2K,EAAMC,EAAMC,GAC3D,IAAI5R,EAAGiG,EAAGjO,EACN6Z,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBK,EAAe,KAATR,EAAclc,KAAKmG,IAAI,GAAI,IAAMnG,KAAKmG,IAAI,GAAI,IAAM,EAC1DtJ,EAAIof,EAAO,EAAKE,EAAS,EACzB7Z,EAAI2Z,EAAO,GAAK,EAChBO,EAAIhd,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQQ,KAAKqD,IAAI7D,GAEbmd,MAAMnd,IAAUA,IAAUuH,KAC5ByJ,EAAImM,MAAMnd,GAAS,EAAI,EACvB+K,EAAI8R,IAEJ9R,EAAIvK,KAAKC,MAAMD,KAAKiI,IAAIzI,GAASQ,KAAK4c,KAClCpd,GAAS+C,EAAIvC,KAAKmG,IAAI,GAAIoE,IAAM,IAClCA,IACAhI,GAAK,IAGL/C,GADE+K,EAAI+R,GAAS,EACNI,EAAKna,EAELma,EAAK1c,KAAKmG,IAAI,EAAG,EAAImW,IAEpB/Z,GAAK,IACfgI,IACAhI,GAAK,GAGHgI,EAAI+R,GAASD,GACf7L,EAAI,EACJjG,EAAI8R,GACK9R,EAAI+R,GAAS,GACtB9L,GAAMhR,EAAQ+C,EAAK,GAAKvC,KAAKmG,IAAI,EAAG+V,GACpC3R,GAAQ+R,IAER9L,EAAIhR,EAAQQ,KAAKmG,IAAI,EAAGmW,EAAQ,GAAKtc,KAAKmG,IAAI,EAAG+V,GACjD3R,EAAI,IAID2R,GAAQ,EAAGxN,EAAO4C,EAASzU,GAAS,IAAJ2T,EAAU3T,GAAKyF,EAAGkO,GAAK,IAAK0L,GAAQ,GAI3E,IAFA3R,EAAKA,GAAK2R,EAAQ1L,EAClB4L,GAAQF,EACDE,EAAO,EAAG1N,EAAO4C,EAASzU,GAAS,IAAJ0N,EAAU1N,GAAKyF,EAAGiI,GAAK,IAAK6R,GAAQ,GAE1E1N,EAAO4C,EAASzU,EAAIyF,IAAU,IAAJka,CAC5B,iGClFA,gBACA,UACA,UACA,UACA,UACA,UACA,SACA,UAMA,SAaA,MAAqBK,EAkBjBpC,YAAYvc,EAAgC4e,EAAgDC,GAAhD,KAAAD,eAAAA,EAAgD,KAAAC,YAAAA,EAjB5F,KAAAC,GAAa,EACb,KAAAlC,MAAe,IAAI,UACnB,KAAAmC,OAAc,CAAC,EACf,KAAAC,QAAoB,GACpB,KAAAC,aAA8B,GAC9B,KAAAC,QAAe,CAAC,EAChB,KAAAC,MAAa,CAAC,EAEd,KAAAC,SAAoB,CAAC,EACrB,KAAAC,MAAgB,EAChB,KAAAC,QAAkB,EAClB,KAAAC,UAAiB,CAAC,EAClB,KAAAC,UAAsB,CAAC,EACvB,KAAAC,OAAgB,CAAC,EACjB,KAAAC,QAAkB,EAClB,KAAAC,WAAkB,GAIVne,KAAKxB,KADLA,aAAgBkP,EACJlP,EAEAkP,EAAOU,KAAK5P,EAAKsW,QAAQ,KAAM,IAAK,MAExD,CAEAsJ,QACI,MAAMA,EAAQ,IAAIjB,EAAInd,KAAKxB,KAAMwB,KAAKod,eAAgBpd,KAAKqd,aAc3D,OAbAe,EAAMd,GAAKtd,KAAKsd,GAChBc,EAAMZ,QAAUxd,KAAKwd,QACrBY,EAAMhD,MAAQpb,KAAKob,MAAMgD,QACzBA,EAAMb,OAAS,IAAKvd,KAAKud,QACzBa,EAAMV,QAAU1d,KAAK0d,QACrBU,EAAMT,MAAQ,IAAK3d,KAAK2d,OACxBS,EAAMR,SAAW5d,KAAK4d,SACtBQ,EAAMP,MAAQ7d,KAAK6d,MAAQ,EAC3BO,EAAML,UAAY/d,KAAK+d,UACvBK,EAAMJ,UAAYhe,KAAKge,UACvBI,EAAMH,OAASje,KAAKie,OACpBG,EAAMF,QAAUle,KAAKke,QACrBE,EAAMD,WAAa,IAAIne,KAAKme,YACrBC,CACX,CAEAC,cACI,MAAO,KAAOre,KAAKxB,KAAKkI,SAAS,MACrC,CAEA4X,aACI,GAA4B,IAAxBte,KAAKwd,QAAQ3f,OACb,IAAK,IAAI0gB,EAAQ,EAAGA,EAAQve,KAAKxB,KAAKX,OAAQ0gB,IAAS,CACnD,MAAMC,EAAoB,CACtBlB,GAAIiB,EACJE,OAAQze,KAAKxB,KAAK+f,GAClBpD,KAAM,WAMV,GAJIqD,EAAUC,UAAU,EAAAC,QACpBF,EAAUrD,KAAQ,EAAAuD,MAAc1e,KAAKxB,KAAK+f,KAE9Cve,KAAKwd,QAAQtf,KAAKsgB,GACdA,EAAUrD,KAAKwD,WAAW,QAAS,CACnC,MAAMC,EAAiB5e,KAAKxB,KAAK+f,GAAS,GACpCM,EAAW7e,KAAKxB,KAAKmE,MAAM4b,EAAQ,EAAGA,EAAQK,EAAiB,GACrEJ,EAAUK,SAAWA,EACrBN,GAASK,GAIrB,OAAO5e,KAAKwd,OAChB,CAEAsB,eACI,MAAO,IACA,IAAIC,IACH/e,KAAKse,aACAU,QAAOP,GAA0B,UAAhBA,EAAOtD,OACxB1P,KAAIgT,GAAWA,EAAOI,SAAWJ,EAAOI,SAASnY,SAAS,OAAS,KACnEsY,QAAOC,GAAQA,KAAQjf,KAAKod,iBAC5B3R,KAAIwT,GAASjf,KAAKod,eAAuB6B,MAG1D,CAEAC,YACI,MAAO,IACA,IAAIH,IACH/e,KAAKse,aACAU,QAAOP,GAA0B,WAAhBA,EAAOtD,OACxB1P,KAAIgT,GAAWA,EAAOI,SAAWJ,EAAOI,SAASnY,SAAS,OAAS,KACnEsY,QAAOC,GAAQA,KAAQjf,KAAKqd,cAC5B5R,KAAIwT,GAASjf,KAAKqd,YAAoB4B,MAGvD,CAEAE,eAAeV,GACX,IAAIX,GAAS,EACb,GAAsB,iBAAXW,GAAuBA,KAAU,EAAAW,MACxCX,EAAU,EAAAW,MAAcX,QACrB,GAAsB,iBAAXA,EACd,MAAM,IAAIhgB,MAAM,2BAEpB,IAAK,IAAI8f,EAAQ,EAAGA,EAAQve,KAAKxB,KAAKX,OAAQ0gB,IAAS,CACnD,MAAMc,EAAgBrf,KAAKxB,KAAK+f,GAChC,GAAIc,IAAkBZ,IAAWX,EAC7B,OAAO,EACAuB,IAAkB,EAAAC,SACzBxB,GAAS,EACF,CAAC,EAAAyB,KAAM,EAAAC,OAAQ,EAAAC,OAAQ,EAAAC,QAAS,EAAAC,cAAcvK,SAASiK,GAC9DvB,GAAS,EACFuB,GAAiB,EAAAO,OAASP,GAAiB,EAAAQ,SAClDtB,GAASc,EAAgB,EAAAO,MAAQ,GAGzC,OAAO,CACX,CAEAE,sBACI,OAAO9f,KAAKse,aACPU,QAAOP,GAA0B,aAAhBA,EAAOtD,OACxB1P,KAAIgT,GAAUA,EAAOnB,IAC9B,CAEAyC,eACI,MAEMC,EADWhgB,KAAKqe,cACC2B,MAFT,yCAGd,SAAIA,IAASA,EAAM,KACR,UAAYA,EAAM,EAIjC,CAEAC,SACI,MAAMC,EAAW,GACgB,IAA7BlgB,KAAKyd,aAAa5f,QAClBmC,KAAKmgB,QAETva,OAAOwa,KAAKpgB,KAAK+d,WAAWsC,SAASC,IACjC,MAAMC,EAAYL,EAAIhiB,KAAK,CAAEuR,KAAM,aACnC8Q,EAAKpF,KAAOnb,KAAK+d,UAAUuC,GAAKE,MAAMrU,MAAM,KAAK,GACjDoU,EAAKE,QAAUzgB,KAAK+d,UAAUuC,GAAKG,QACnCF,EAAKG,SAAW1gB,KAAK+d,UAAUuC,GAAKI,QAAQ,GAEpD,CAEAC,QACI3gB,KAAKsd,GAAK,EACVtd,KAAKyd,aAAe,GACpBzd,KAAKob,MAAMuF,QACX3gB,KAAKud,OAAS,CAAC,EACfvd,KAAK0d,QAAU,CAAC,EAChB1d,KAAK2d,MAAQ,CAAC,EACd3d,KAAK4d,SAAW,CAAC,EACjB5d,KAAK+d,UAAY,CAAC,EAClB/d,KAAKge,UAAY,CAAC,EAClBhe,KAAKie,OAAS,CAAC,EACfje,KAAKke,QAAU,CACnB,CAEAiC,QACI,GAAiC,IAA7BngB,KAAKyd,aAAa5f,OAAc,CAChC,MAAM2f,EAAUxd,KAAKse,aACrB,IAAKte,KAAKsd,GAAItd,KAAKsd,GAAKE,EAAQ3f,SAAWmC,KAAK8d,OAAQ9d,KAAKsd,KAAM,CAC/D,MAAMmB,EAASjB,EAAQxd,KAAKsd,IAC5B,KAAMmB,EAAOtD,QAAQ,WACjB,MAAM,IAAI1c,MAAM,mBAAqBggB,EAAOtD,MAE3C,UAAwBsD,EAAOtD,MAAMsD,EAAQze,OAI1D,OAAOA,KAAKyd,YAChB,CAEAmD,YACI,MAAMC,EAAkB7gB,KAAKmgB,QAW7B,OAVe,aAAgBngB,KAAKie,OAAQje,KAAKkf,cACjC,aAAiBlf,KAAK4d,WACrB,aAAkB5d,KAAK4d,WACtB,aAAmB5d,KAAKge,WACxBpY,OAAOwa,KAAKpgB,KAAK+d,WAC9BtS,KAAKqV,IACF,aAAmBA,EAAc9gB,KAAK+d,UAAU+C,GAAe9gB,KAAKod,kBAEvE/e,KAAK,KACG,aAAsBwiB,EAEvC,CAEAE,WACI,MAAO,CAAC,6BAA6BC,OAAMzhB,GAAKS,KAAK8e,eAAe1J,SAAS7V,IACjF,EAjMJ,wFC5BA,MAAqB0hB,EAGjBlG,cACI/a,KAAKkhB,SAAW,EACpB,CAEAhjB,KAAKqiB,GACD,GAAIvgB,KAAKkhB,SAASrjB,QAAU,KACxB,MAAM,IAAIY,MAAM,kBAEhBuB,KAAKkhB,SAAS1c,QAAQ+b,EAE9B,CAEAY,MACI,GAA6B,IAAzBnhB,KAAKkhB,SAASrjB,OACd,MAAM,IAAIY,MAAM,wBAEhB,OAAOuB,KAAKkhB,SAASpd,OAE7B,CAEAsd,UAAUC,GACN,GAAIA,EAAW,GAAKA,EAAW,GAC3B,MAAM,IAAI5iB,MAAM,kDACb,KAAM4iB,KAAYrhB,KAAKkhB,UAC1B,MAAM,IAAIziB,MACN,0EAGJuB,KAAK9B,KAAK8B,KAAKkhB,SAASG,GAEhC,CAEAxQ,KAAKyQ,GACD,GAAIA,EAAiB,GAAKA,EAAiB,GACvC,MAAM,IAAI7iB,MAAM,2CACb,KAAM6iB,KAAkBthB,KAAKkhB,UAChC,MAAM,IAAIziB,MAAM,mEACb,CACH,MAAM8iB,EAAavhB,KAAKkhB,SAAS,GAC3BM,EAAcxhB,KAAKkhB,SAASI,GAClCthB,KAAKkhB,SAAS,GAAKM,EACnBxhB,KAAKkhB,SAASI,GAAkBC,EAExC,CAEAnD,QACI,MAAMhD,EAAQ,IAAI6F,EAElB,OADA7F,EAAM8F,SAAW,IAAIlhB,KAAKkhB,UACnB9F,CACX,CAEAuF,QACI3gB,KAAKkhB,SAAW,EACpB,EAxDJ,0GCAA,gBAGMO,EAAc,CAAC9R,EAAWF,IACf,WAATA,EACO,IAAM/B,EAAOU,KAAKuB,EAAM,OAAOjJ,SAAS,QAAU,IACzC,YAAT+I,EACA,KAAOE,EAAK+R,UAAU,IACb,YAATjS,GAA+B,UAATA,EACtBkS,EAAUhS,EAAM,IAAIjJ,WACX,SAAT+I,IACEkS,EAAUhS,EAAM,IAAI3I,UAAUN,WAEhCiJ,EAIf,gBAUIoL,YAAY6G,GACJA,IACI,cAAeA,IACf5hB,KAAK6hB,UAAYD,EAAkBC,WAEnC,gBAAiBD,IACjB5hB,KAAK8hB,YAAcF,EAAkBE,aAErC,SAAUF,IACV5hB,KAAKoO,KAAOwT,EAAkBxT,MAE9B,QAASwT,IACT5hB,KAAK+hB,IAAMH,EAAkBG,KAE7B,aAAcH,IACd5hB,KAAKgiB,SAAWJ,EAAkBI,UAElC,UAAWJ,IACX5hB,KAAK2b,MAAQiG,EAAkBjG,MAAM7G,QAAQ,KAAM,KAEnD,OAAQ8M,IACR5hB,KAAKiiB,GAAKL,EAAkBK,IAE5B,UAAWL,IACX5hB,KAAKF,MAAQ8hB,EAAkB9hB,OAG3C,CAEAoiB,SAASvG,GACL3b,KAAK2b,MAAQA,EAAM7G,QAAQ,KAAM,GACrC,CAEAqN,kBACI,SAAIniB,KAAK2b,OAAS3b,KAAK2b,MAAM9d,QAAU,IAC5BmC,KAAK2b,MAAM3J,OAAO,EAAG,EAIpC,CAEAoQ,YAAYhF,GACR,MAAMiF,EAAeriB,KAAKmiB,kBAC1B,SAAIE,KAAgBA,KAAgBjF,KACxBA,EAAuBiF,EAIvC,CAEAC,gBAAgBlF,GACZ,MAAMmF,EAAcviB,KAAKoiB,YAAYhF,GACrC,QAAImF,GACOA,EAAYpW,MAAM,KAAK,EAItC,CAEAqW,kBACI,OAAIxiB,KAAK2b,OAAS3b,KAAK2b,MAAM9d,QAAU,GAC5BmC,KAAK2b,MAAM3J,OAAO,GAAGgO,MAAM,YAE3B,EAEf,CAEAyC,aAAarF,EAAuCsF,GAAuB,GACvE,MAAM5B,EAAe9gB,KAAKoiB,YAAYhF,GAChCuF,EAAoB3iB,KAAKwiB,kBAC/B,GAAI1B,GAAgB9gB,KAAK2b,MAAO,CAC5B,MAAMiH,EAAuB9B,EACxB3U,MAAM,KAAK,GACXxJ,MAAM,GAAI,GACVwJ,MAAM,KACX,GACoC,IAAhCyW,EAAqB/kB,QACO,KAA5B+kB,EAAqB,IACQ,IAA7BD,EAAkB9kB,OAElB,MAAO,GACJ,CACH,MAAMkG,EAAmB,GACzB,IAAK,IAAI5G,EAAI,EAAGA,EAAIylB,EAAqB/kB,OAAQV,IAAK,CAClD,MAAM0lB,EAAuBD,EAAqBzlB,IAAM,UAClD2lB,EAAmBH,EAAkBxlB,GAC3C,GAA6B,WAAzB0lB,EAAmC,CACnC,MAAME,EAAWpB,EAAUmB,EAAkB,IACxCvd,OAAO,IACPiD,aACC3K,EAAS8jB,EAAUgB,EAAkBI,GAAW,IACjD7c,SAAS,GACTsC,aACCmH,EAAO3P,KAAK2b,MAAM+F,UAAU,GAAG1P,OAAwB,IAAhB+Q,EAAW,GAASllB,GACjEkG,EAAO7F,KAAKujB,EAAY9R,EAAMkT,SAE9B9e,EAAO7F,KAAKujB,EAAYqB,EAAkBD,IAGlD,OAAO9e,GAGX,OAAO4e,CAEf,CAEAK,qBACI,OAAmB,OAAZhjB,KAAKiiB,EAChB,qiBCnIJ,eAUc,EAAAgB,YAVP,UACP,gBASS,EAAA9F,IATF,UAOP,k0CCZa,EAAAoC,KAAO,EACP,EAAA2D,IAAM,EACN,EAAAC,IAAM,EACN,EAAAC,IAAM,EACN,EAAAC,IAAM,EACN,EAAAC,KAAO,EACP,EAAAC,IAAM,EACN,EAAAC,KAAO,EACP,EAAAC,OAAS,EACT,EAAAC,OAAS,EACT,EAAAC,IAAM,GACN,EAAAC,WAAa,GACb,EAAAC,GAAK,GACL,EAAAC,GAAK,GACL,EAAAC,IAAM,GACN,EAAAC,IAAM,GACN,EAAAC,GAAK,GACL,EAAAC,OAAS,GACT,EAAAC,IAAM,GACN,EAAAC,GAAK,GACL,EAAAC,IAAM,GACN,EAAAC,IAAM,GACN,EAAAC,KAAO,GACP,EAAAC,IAAM,GACN,EAAAC,IAAM,GACN,EAAAC,IAAM,GACN,EAAAC,KAAO,GACP,EAAAC,QAAU,GACV,EAAAC,QAAU,GACV,EAAAC,OAAS,GACT,EAAAC,OAAS,GACT,EAAAC,UAAY,GACZ,EAAAC,aAAe,GACf,EAAAC,aAAe,GACf,EAAAC,aAAe,GACf,EAAAC,SAAW,GACX,EAAAC,SAAW,GACX,EAAAC,SAAW,GACX,EAAAC,YAAc,GACd,EAAAC,YAAc,GACd,EAAAC,eAAiB,GACjB,EAAAC,eAAiB,GACjB,EAAAC,YAAc,GACd,EAAAC,UAAY,GACZ,EAAAC,SAAW,GACX,EAAAC,UAAY,GACZ,EAAAC,OAAS,GACT,EAAAC,WAAa,GACb,EAAAC,SAAW,GACX,EAAAC,IAAM,GACN,EAAAC,MAAQ,GACR,EAAAC,OAAS,GACT,EAAAC,QAAU,GACV,EAAAC,MAAQ,GACR,EAAAC,OAAS,GACT,EAAAC,KAAO,GACP,EAAAC,MAAQ,GACR,EAAAC,GAAK,GACL,EAAAC,MAAQ,GACR,EAAAC,IAAM,GACN,EAAAtH,SAAW,GACX,EAAAM,MAAQ,GACR,EAAAiH,MAAQ,GACR,EAAAC,MAAQ,GACR,EAAAC,MAAQ,GACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAA7I,OAAS,IACT,EAAA8I,KAAO,IACP,EAAAC,KAAO,IACP,EAAAC,KAAO,IACP,EAAAC,KAAO,IACP,EAAAC,KAAO,IACP,EAAAC,KAAO,IACP,EAAAC,KAAO,IACP,EAAAC,KAAO,IACP,EAAAC,KAAO,IACP,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,MAAQ,IACR,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,OAAS,IACT,EAAAC,KAAO,IACP,EAAAC,KAAO,IACP,EAAAC,KAAO,IACP,EAAAC,KAAO,IACP,EAAAC,KAAO,IACP,EAAAC,OAAS,IACT,EAAAC,KAAO,IACP,EAAAC,SAAW,IACX,EAAA1L,OAAS,IACT,EAAA2L,aAAe,IACf,EAAAC,QAAU,IACV,EAAAC,WAAa,IACb,EAAA5L,OAAS,IACT,EAAAC,QAAU,IACV,EAAAC,aAAe,IAEf,EAAAjB,MAAQ,CACjB,EAAM,OACN,EAAM,MACN,EAAM,MACN,EAAM,MACN,EAAM,MACN,EAAM,OACN,EAAM,MACN,EAAM,OACN,EAAM,SACN,EAAM,SACN,GAAM,MACN,GAAM,aACN,GAAM,KACN,GAAM,KACN,GAAM,MACN,GAAM,MACN,GAAM,KACN,GAAM,SACN,GAAM,MACN,GAAM,KACN,GAAM,MACN,GAAM,MACN,GAAM,OACN,GAAM,MACN,GAAM,MACN,GAAM,MACN,GAAM,OACN,GAAM,UACN,GAAM,UACN,GAAM,SACN,GAAM,SACN,GAAM,YACN,GAAM,eACN,GAAM,eACN,GAAM,eACN,GAAM,WACN,GAAM,WACN,GAAM,WACN,GAAM,cACN,GAAM,cACN,GAAM,iBACN,GAAM,iBACN,GAAM,cACN,GAAM,YACN,GAAM,WACN,GAAM,YACN,GAAM,SACN,GAAM,aACN,GAAM,WACN,GAAM,MACN,GAAM,QACN,GAAM,SACN,GAAM,UACN,GAAM,QACN,GAAM,SACN,GAAM,OACN,GAAM,QACN,GAAM,KACN,GAAM,QACN,GAAM,MACN,GAAM,WACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,IAAM,QACN,IAAM,QACN,IAAM,QACN,IAAM,QACN,IAAM,QACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,SACN,IAAM,OACN,IAAM,OACN,IAAM,OACN,IAAM,OACN,IAAM,OACN,IAAM,OACN,IAAM,OACN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","sources":["webpack://EVM/webpack/universalModuleDefinition","webpack://EVM/./node_modules/base64-js/index.js","webpack://EVM/./node_modules/big-integer/BigInteger.js","webpack://EVM/./node_modules/buffer/index.js","webpack://EVM/./node_modules/ieee754/index.js","webpack://EVM/./src/classes/evm.class.ts","webpack://EVM/./src/classes/stack.class.ts","webpack://EVM/./src/classes/tx.class.ts","webpack://EVM/./src/index.ts","webpack://EVM/./src/opcodes.ts","webpack://EVM/./src/opcodes/add.ts","webpack://EVM/./src/opcodes/addmod.ts","webpack://EVM/./src/opcodes/address.ts","webpack://EVM/./src/opcodes/and.ts","webpack://EVM/./src/opcodes/balance.ts","webpack://EVM/./src/opcodes/blockhash.ts","webpack://EVM/./src/opcodes/byte.ts","webpack://EVM/./src/opcodes/call.ts","webpack://EVM/./src/opcodes/callcode.ts","webpack://EVM/./src/opcodes/calldatacopy.ts","webpack://EVM/./src/opcodes/calldataload.ts","webpack://EVM/./src/opcodes/calldatasize.ts","webpack://EVM/./src/opcodes/caller.ts","webpack://EVM/./src/opcodes/callvalue.ts","webpack://EVM/./src/opcodes/codecopy.ts","webpack://EVM/./src/opcodes/codesize.ts","webpack://EVM/./src/opcodes/coinbase.ts","webpack://EVM/./src/opcodes/create.ts","webpack://EVM/./src/opcodes/create2.ts","webpack://EVM/./src/opcodes/delegatecall.ts","webpack://EVM/./src/opcodes/difficulty.ts","webpack://EVM/./src/opcodes/div.ts","webpack://EVM/./src/opcodes/dup.ts","webpack://EVM/./src/opcodes/eq.ts","webpack://EVM/./src/opcodes/exp.ts","webpack://EVM/./src/opcodes/extcodecopy.ts","webpack://EVM/./src/opcodes/extcodehash.ts","webpack://EVM/./src/opcodes/extcodesize.ts","webpack://EVM/./src/opcodes/gas.ts","webpack://EVM/./src/opcodes/gaslimit.ts","webpack://EVM/./src/opcodes/gasprice.ts","webpack://EVM/./src/opcodes/gt.ts","webpack://EVM/./src/opcodes/invalid.ts","webpack://EVM/./src/opcodes/iszero.ts","webpack://EVM/./src/opcodes/jump.ts","webpack://EVM/./src/opcodes/jumpdest.ts","webpack://EVM/./src/opcodes/jumpi.ts","webpack://EVM/./src/opcodes/log.ts","webpack://EVM/./src/opcodes/lt.ts","webpack://EVM/./src/opcodes/mload.ts","webpack://EVM/./src/opcodes/mod.ts","webpack://EVM/./src/opcodes/msize.ts","webpack://EVM/./src/opcodes/mstore.ts","webpack://EVM/./src/opcodes/mul.ts","webpack://EVM/./src/opcodes/mulmod.ts","webpack://EVM/./src/opcodes/not.ts","webpack://EVM/./src/opcodes/number.ts","webpack://EVM/./src/opcodes/or.ts","webpack://EVM/./src/opcodes/origin.ts","webpack://EVM/./src/opcodes/pc.ts","webpack://EVM/./src/opcodes/pop.ts","webpack://EVM/./src/opcodes/push.ts","webpack://EVM/./src/opcodes/return.ts","webpack://EVM/./src/opcodes/returndatacopy.ts","webpack://EVM/./src/opcodes/returndatasize.ts","webpack://EVM/./src/opcodes/revert.ts","webpack://EVM/./src/opcodes/sar.ts","webpack://EVM/./src/opcodes/selfdestruct.ts","webpack://EVM/./src/opcodes/sha3.ts","webpack://EVM/./src/opcodes/shl.ts","webpack://EVM/./src/opcodes/shr.ts","webpack://EVM/./src/opcodes/signextend.ts","webpack://EVM/./src/opcodes/sload.ts","webpack://EVM/./src/opcodes/sstore.ts","webpack://EVM/./src/opcodes/staticcall.ts","webpack://EVM/./src/opcodes/stop.ts","webpack://EVM/./src/opcodes/sub.ts","webpack://EVM/./src/opcodes/swap.ts","webpack://EVM/./src/opcodes/timestamp.ts","webpack://EVM/./src/opcodes/xor.ts","webpack://EVM/./src/utils/hex.ts","webpack://EVM/./src/utils/opcodes.ts","webpack://EVM/./src/utils/stringify.ts","webpack://EVM/./src/utils/stringifyEvents.ts","webpack://EVM/./src/utils/stringifyFunctions.ts","webpack://EVM/./src/utils/stringifyInstructions.ts","webpack://EVM/./src/utils/stringifyMappings.ts","webpack://EVM/./src/utils/stringifyStructs.ts","webpack://EVM/./src/utils/stringifyVariables.ts","webpack://EVM/webpack/bootstrap","webpack://EVM/webpack/runtime/node module decorator","webpack://EVM/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"EVM\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"EVM\"] = factory();\n\telse\n\t\troot[\"EVM\"] = factory();\n})(self, () => {\nreturn ","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] + (i + 1 < digits.length ? digits[i + 1] / BASE : 0) : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < digits[i]) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// import * as functionHashes from '../../data/functionHashes.json';\n// import * as eventHashes from '../../data/eventHashes.json';\nimport opcodeFunctions from '../utils/opcodes';\nimport stringifyEvents from '../utils/stringifyEvents';\nimport stringifyStructs from '../utils/stringifyStructs';\nimport stringifyMappings from '../utils/stringifyMappings';\nimport stringifyVariables from '../utils/stringifyVariables';\nimport stringifyFunctions from '../utils/stringifyFunctions';\nimport stringifyInstructions from '../utils/stringifyInstructions';\nimport Stack from './stack.class';\nimport Event from '../interfaces/event.interface';\nimport Instruction from '../interfaces/instruction.interface';\nimport Mapping from '../interfaces/mapping.interface';\nimport Opcode from '../interfaces/opcode.interface';\nimport Variable from '../interfaces/variable.interface';\nimport {\n    STOP,\n    RETURN,\n    REVERT,\n    INVALID,\n    PUSH1,\n    PUSH32,\n    JUMPDEST,\n    SELFDESTRUCT,\n    codes,\n    names\n} from '../opcodes';\n\nexport default class EVM {\n    pc: number = 0;\n    stack: Stack = new Stack();\n    memory: any = {};\n    opcodes: Opcode[] = [];\n    instructions: Instruction[] = [];\n    storage: any = {};\n    jumps: any = {};\n    code: Buffer;\n    mappings: Mapping = {};\n    layer: number = 0;\n    halted: boolean = false;\n    functions: any = {};\n    variables: Variable = {};\n    events: Event = {};\n    gasUsed: number = 0;\n    conditions: any = [];\n\n    constructor(code: string | Buffer, readonly functionHashes: {[s: string]: string}, readonly eventHashes: {[s: string]: string}) {\n        if (code instanceof Buffer) {\n            this.code = code;\n        } else {\n            this.code = Buffer.from(code.replace('0x', ''), 'hex');\n        }\n    }\n\n    clone(): EVM {\n        const clone = new EVM(this.code, this.functionHashes, this.eventHashes);\n        clone.pc = this.pc;\n        clone.opcodes = this.opcodes;\n        clone.stack = this.stack.clone();\n        clone.memory = { ...this.memory };\n        clone.storage = this.storage;\n        clone.jumps = { ...this.jumps };\n        clone.mappings = this.mappings;\n        clone.layer = this.layer + 1;\n        clone.functions = this.functions;\n        clone.variables = this.variables;\n        clone.events = this.events;\n        clone.gasUsed = this.gasUsed;\n        clone.conditions = [...this.conditions];\n        return clone;\n    }\n\n    getBytecode(): string {\n        return '0x' + this.code.toString('hex');\n    }\n\n    getOpcodes(): Opcode[] {\n        if (this.opcodes.length === 0) {\n            for (let index = 0; index < this.code.length; index++) {\n                const currentOp: Opcode = {\n                    pc: index,\n                    opcode: this.code[index],\n                    name: 'INVALID'\n                };\n                if (currentOp.opcode in codes) {\n                    currentOp.name = (codes as any)[this.code[index]];\n                }\n                this.opcodes.push(currentOp);\n                if (currentOp.name.startsWith('PUSH')) {\n                    const pushDataLength = this.code[index] - 0x5f;\n                    const pushData = this.code.slice(index + 1, index + pushDataLength + 1);\n                    currentOp.pushData = pushData;\n                    index += pushDataLength;\n                }\n            }\n        }\n        return this.opcodes;\n    }\n\n    getFunctions(): string[] {\n        return [\n            ...new Set(\n                this.getOpcodes()\n                    .filter(opcode => opcode.name === 'PUSH4')\n                    .map(opcode => (opcode.pushData ? opcode.pushData.toString('hex') : ''))\n                    .filter(hash => hash in this.functionHashes)\n                    .map(hash => (this.functionHashes as any)[hash])\n            )\n        ];\n    }\n\n    getEvents(): string[] {\n        return [\n            ...new Set(\n                this.getOpcodes()\n                    .filter(opcode => opcode.name === 'PUSH32')\n                    .map(opcode => (opcode.pushData ? opcode.pushData.toString('hex') : ''))\n                    .filter(hash => hash in this.eventHashes)\n                    .map(hash => (this.eventHashes as any)[hash])\n            )\n        ];\n    }\n\n    containsOpcode(opcode: number | string): boolean {\n        let halted = false;\n        if (typeof opcode === 'string' && opcode in names) {\n            opcode = (names as any)[opcode];\n        } else if (typeof opcode === 'string') {\n            throw new Error('Invalid opcode provided');\n        }\n        for (let index = 0; index < this.code.length; index++) {\n            const currentOpcode = this.code[index];\n            if (currentOpcode === opcode && !halted) {\n                return true;\n            } else if (currentOpcode === JUMPDEST) {\n                halted = false;\n            } else if ([STOP, RETURN, REVERT, INVALID, SELFDESTRUCT].includes(currentOpcode)) {\n                halted = true;\n            } else if (currentOpcode >= PUSH1 && currentOpcode <= PUSH32) {\n                index += currentOpcode - PUSH1 + 0x01;\n            }\n        }\n        return false;\n    }\n\n    getJumpDestinations(): number[] {\n        return this.getOpcodes()\n            .filter(opcode => opcode.name === 'JUMPDEST')\n            .map(opcode => opcode.pc);\n    }\n\n    getSwarmHash(): string | false {\n        const regex = /a165627a7a72305820([a-f0-9]{64})0029$/;\n        const bytecode = this.getBytecode();\n        const match = bytecode.match(regex);\n        if (match && match[1]) {\n            return 'bzzr://' + match[1];\n        } else {\n            return false;\n        }\n    }\n\n    getABI(): any {\n        const abi: any = [];\n        if (this.instructions.length === 0) {\n            this.parse();\n        }\n        Object.keys(this.functions).forEach((key: string) => {\n            const item: any = abi.push({ type: 'function' });\n            item.name = this.functions[key].label.split('(')[0];\n            item.payable = this.functions[key].payable;\n            item.constant = this.functions[key].constant;\n        });\n    }\n\n    reset(): void {\n        this.pc = 0;\n        this.instructions = [];\n        this.stack.reset();\n        this.memory = {};\n        this.storage = {};\n        this.jumps = {};\n        this.mappings = {};\n        this.functions = {};\n        this.variables = {};\n        this.events = {};\n        this.gasUsed = 0;\n    }\n\n    parse(): Instruction[] {\n        if (this.instructions.length === 0) {\n            const opcodes = this.getOpcodes();\n            for (this.pc; this.pc < opcodes.length && !this.halted; this.pc++) {\n                const opcode = opcodes[this.pc];\n                if (!(opcode.name in opcodeFunctions)) {\n                    throw new Error('Unknown OPCODE: ' + opcode.name);\n                } else {\n                    (opcodeFunctions as any)[opcode.name](opcode, this);\n                }\n            }\n        }\n        return this.instructions;\n    }\n\n    decompile(): string {\n        const instructionTree = this.parse();\n        const events = stringifyEvents(this.events, this.getEvents());\n        const structs = stringifyStructs(this.mappings);\n        const mappings = stringifyMappings(this.mappings);\n        const variables = stringifyVariables(this.variables);\n        const functions = Object.keys(this.functions)\n            .map((functionName: string) =>\n                stringifyFunctions(functionName, this.functions[functionName], this.functionHashes)\n            )\n            .join('');\n        const code = stringifyInstructions(instructionTree);\n        return events + structs + mappings + variables + functions + code;\n    }\n\n    isERC165(): boolean {\n        return ['supportsInterface(bytes4)'].every(v => this.getFunctions().includes(v));\n    }\n}\n","export default class Stack {\n    elements: any[];\n\n    constructor() {\n        this.elements = [];\n    }\n\n    push(item: any): void {\n        if (this.elements.length >= 1024) {\n            throw new Error('Stack too deep');\n        } else {\n            this.elements.unshift(item);\n        }\n    }\n\n    pop(): any {\n        if (this.elements.length === 0) {\n            throw new Error('POP with empty stack');\n        } else {\n            return this.elements.shift();\n        }\n    }\n\n    duplicate(position: number): void {\n        if (position < 0 || position > 15) {\n            throw new Error('Unsupported position for duplication operation');\n        } else if (!(position in this.elements)) {\n            throw new Error(\n                \"Invalid duplication operation, provided position wasn't found in stack\"\n            );\n        } else {\n            this.push(this.elements[position]);\n        }\n    }\n\n    swap(secondPosition: number): void {\n        if (secondPosition < 1 || secondPosition > 16) {\n            throw new Error('Unsupported position for swap operation');\n        } else if (!(secondPosition in this.elements)) {\n            throw new Error(\"Invalid swap operation, provided position wasn't found in stack\");\n        } else {\n            const firstValue = this.elements[0];\n            const secondValue = this.elements[secondPosition];\n            this.elements[0] = secondValue;\n            this.elements[secondPosition] = firstValue;\n        }\n    }\n\n    clone(): Stack {\n        const stack = new Stack();\n        stack.elements = [...this.elements];\n        return stack;\n    }\n\n    reset(): void {\n        this.elements = [];\n    }\n}\n","import * as BigNumber from '../../node_modules/big-integer';\n// import * as functionHashes from '../../data/functionHashes.json';\n\nconst parseSingle = (data: any, type: any) => {\n    if (type === 'string') {\n        return '\"' + Buffer.from(data, 'hex').toString('utf8') + '\"';\n    } else if (type === 'address') {\n        return '0x' + data.substring(24);\n    } else if (type === 'uint256' || type === 'uint8') {\n        return BigNumber(data, 16).toString();\n    } else if (type === 'bool') {\n        return (!BigNumber(data, 16).isZero()).toString();\n    } else {\n        return data;\n    }\n};\n\nexport default class Transaction {\n    blockHash?: string;\n    blockNumber?: number;\n    from?: string;\n    gas?: number;\n    gasPrice?: number;\n    input?: string;\n    to?: string;\n    value?: number;\n\n    constructor(transactionObject?: any) {\n        if (transactionObject) {\n            if ('blockHash' in transactionObject) {\n                this.blockHash = transactionObject.blockHash;\n            }\n            if ('blockNumber' in transactionObject) {\n                this.blockNumber = transactionObject.blockNumber;\n            }\n            if ('from' in transactionObject) {\n                this.from = transactionObject.from;\n            }\n            if ('gas' in transactionObject) {\n                this.gas = transactionObject.gas;\n            }\n            if ('gasPrice' in transactionObject) {\n                this.gasPrice = transactionObject.gasPrice;\n            }\n            if ('input' in transactionObject) {\n                this.input = transactionObject.input.replace('0x', '');\n            }\n            if ('to' in transactionObject) {\n                this.to = transactionObject.to;\n            }\n            if ('value' in transactionObject) {\n                this.value = transactionObject.value;\n            }\n        }\n    }\n\n    setInput(input: string): void {\n        this.input = input.replace('0x', '');\n    }\n\n    getFunctionHash(): string | false {\n        if (this.input && this.input.length >= 8) {\n            return this.input.substr(0, 8);\n        } else {\n            return false;\n        }\n    }\n\n    getFunction(functionHashes: {[s: string]: string}): string | false {\n        const functionHash = this.getFunctionHash();\n        if (functionHash && functionHash in functionHashes) {\n            return (functionHashes as any)[functionHash];\n        } else {\n            return false;\n        }\n    }\n\n    getFunctionName(functionHashes: {[s: string]: string}): string | false {\n        const rawFunction = this.getFunction(functionHashes);\n        if (rawFunction) {\n            return rawFunction.split('(')[0];\n        } else {\n            return false;\n        }\n    }\n\n    getRawArguments(): string[] {\n        if (this.input && this.input.length >= 70) {\n            return this.input.substr(8).match(/.{1,64}/g)!;\n        } else {\n            return [];\n        }\n    }\n\n    getArguments(functionHashes: {[s: string]: string}, descriptive: boolean = true): string[] {\n        const functionName = this.getFunction(functionHashes);\n        const functionArguments = this.getRawArguments();\n        if (functionName && this.input) {\n            const rawFunctionArguments = functionName\n                .split('(')[1]\n                .slice(0, -1)\n                .split(',');\n            if (\n                rawFunctionArguments.length === 1 &&\n                rawFunctionArguments[0] === '' &&\n                functionArguments.length === 0\n            ) {\n                return [];\n            } else {\n                const result: string[] = [];\n                for (let i = 0; i < rawFunctionArguments.length; i++) {\n                    const functionArgumentType = rawFunctionArguments[i] || 'unknown';\n                    const functionArgument = functionArguments[i];\n                    if (functionArgumentType === 'string') {\n                        const location = BigNumber(functionArgument, 16)\n                            .divide(32)\n                            .toJSNumber();\n                        const length = BigNumber(functionArguments[location], 16)\n                            .multiply(2)\n                            .toJSNumber();\n                        const data = this.input.substring(8).substr((location + 1) * 64, length);\n                        result.push(parseSingle(data, functionArgumentType));\n                    } else {\n                        result.push(parseSingle(functionArgument, functionArgumentType));\n                    }\n                }\n                return result;\n            }\n        } else {\n            return functionArguments;\n        }\n    }\n\n    isContractCreation(): boolean {\n        return this.to === null;\n    }\n}\n","// import * as _functions from '../data/functions.json';\n// import * as _events from '../data/events.json';\n// import * as _functionHashes from '../data/functionHashes.json';\n// import * as _eventHashes from '../data/eventHashes.json';\nimport Transaction from './classes/tx.class';\nimport EVM from './classes/evm.class';\n\n// export const functions: any = _functions as any;\n// export const events: any = _events as any;\n// export const functionHashes: any = _functionHashes as any;\n// export const eventHashes: any = _eventHashes as any;\n\nexport * from './opcodes';\n\nexport { EVM, Transaction };\n","export const STOP = 0x00;\nexport const ADD = 0x01;\nexport const MUL = 0x02;\nexport const SUB = 0x03;\nexport const DIV = 0x04;\nexport const SDIV = 0x05;\nexport const MOD = 0x06;\nexport const SMOD = 0x07;\nexport const ADDMOD = 0x08;\nexport const MULMOD = 0x09;\nexport const EXP = 0x0a;\nexport const SIGNEXTEND = 0x0b;\nexport const LT = 0x10;\nexport const GT = 0x11;\nexport const SLT = 0x12;\nexport const SGT = 0x13;\nexport const EQ = 0x14;\nexport const ISZERO = 0x15;\nexport const AND = 0x16;\nexport const OR = 0x17;\nexport const XOR = 0x18;\nexport const NOT = 0x19;\nexport const BYTE = 0x1a;\nexport const SHL = 0x1b;\nexport const SHR = 0x1c;\nexport const SAR = 0x1d;\nexport const SHA3 = 0x20;\nexport const ADDRESS = 0x30;\nexport const BALANCE = 0x31;\nexport const ORIGIN = 0x32;\nexport const CALLER = 0x33;\nexport const CALLVALUE = 0x34;\nexport const CALLDATALOAD = 0x35;\nexport const CALLDATASIZE = 0x36;\nexport const CALLDATACOPY = 0x37;\nexport const CODESIZE = 0x38;\nexport const CODECOPY = 0x39;\nexport const GASPRICE = 0x3a;\nexport const EXTCODESIZE = 0x3b;\nexport const EXTCODECOPY = 0x3c;\nexport const RETURNDATASIZE = 0x3d;\nexport const RETURNDATACOPY = 0x3e;\nexport const EXTCODEHASH = 0x3f;\nexport const BLOCKHASH = 0x40;\nexport const COINBASE = 0x41;\nexport const TIMESTAMP = 0x42;\nexport const NUMBER = 0x43;\nexport const DIFFICULTY = 0x44;\nexport const GASLIMIT = 0x45;\nexport const POP = 0x50;\nexport const MLOAD = 0x51;\nexport const MSTORE = 0x52;\nexport const MSTORE8 = 0x53;\nexport const SLOAD = 0x54;\nexport const SSTORE = 0x55;\nexport const JUMP = 0x56;\nexport const JUMPI = 0x57;\nexport const PC = 0x58;\nexport const MSIZE = 0x59;\nexport const GAS = 0x5a;\nexport const JUMPDEST = 0x5b;\nexport const PUSH1 = 0x60;\nexport const PUSH2 = 0x61;\nexport const PUSH3 = 0x62;\nexport const PUSH4 = 0x63;\nexport const PUSH5 = 0x64;\nexport const PUSH6 = 0x65;\nexport const PUSH7 = 0x66;\nexport const PUSH8 = 0x67;\nexport const PUSH9 = 0x68;\nexport const PUSH10 = 0x69;\nexport const PUSH11 = 0x6a;\nexport const PUSH12 = 0x6b;\nexport const PUSH13 = 0x6c;\nexport const PUSH14 = 0x6d;\nexport const PUSH15 = 0x6e;\nexport const PUSH16 = 0x6f;\nexport const PUSH17 = 0x70;\nexport const PUSH18 = 0x71;\nexport const PUSH19 = 0x72;\nexport const PUSH20 = 0x73;\nexport const PUSH21 = 0x74;\nexport const PUSH22 = 0x75;\nexport const PUSH23 = 0x76;\nexport const PUSH24 = 0x77;\nexport const PUSH25 = 0x78;\nexport const PUSH26 = 0x79;\nexport const PUSH27 = 0x7a;\nexport const PUSH28 = 0x7b;\nexport const PUSH29 = 0x7c;\nexport const PUSH30 = 0x7d;\nexport const PUSH31 = 0x7e;\nexport const PUSH32 = 0x7f;\nexport const DUP1 = 0x80;\nexport const DUP2 = 0x81;\nexport const DUP3 = 0x82;\nexport const DUP4 = 0x83;\nexport const DUP5 = 0x84;\nexport const DUP6 = 0x85;\nexport const DUP7 = 0x86;\nexport const DUP8 = 0x87;\nexport const DUP9 = 0x88;\nexport const DUP10 = 0x89;\nexport const DUP11 = 0x8a;\nexport const DUP12 = 0x8b;\nexport const DUP13 = 0x8c;\nexport const DUP14 = 0x8d;\nexport const DUP15 = 0x8e;\nexport const DUP16 = 0x8f;\nexport const SWAP1 = 0x90;\nexport const SWAP2 = 0x91;\nexport const SWAP3 = 0x92;\nexport const SWAP4 = 0x93;\nexport const SWAP5 = 0x94;\nexport const SWAP6 = 0x95;\nexport const SWAP7 = 0x96;\nexport const SWAP8 = 0x97;\nexport const SWAP9 = 0x98;\nexport const SWAP10 = 0x99;\nexport const SWAP11 = 0x9a;\nexport const SWAP12 = 0x9b;\nexport const SWAP13 = 0x9c;\nexport const SWAP14 = 0x9d;\nexport const SWAP15 = 0x9e;\nexport const SWAP16 = 0x9f;\nexport const LOG0 = 0xa0;\nexport const LOG1 = 0xa1;\nexport const LOG2 = 0xa2;\nexport const LOG3 = 0xa3;\nexport const LOG4 = 0xa4;\nexport const CREATE = 0xf0;\nexport const CALL = 0xf1;\nexport const CALLCODE = 0xf2;\nexport const RETURN = 0xf3;\nexport const DELEGATECALL = 0xf4;\nexport const CREATE2 = 0xf5;\nexport const STATICCALL = 0xfa;\nexport const REVERT = 0xfd;\nexport const INVALID = 0xfe;\nexport const SELFDESTRUCT = 0xff;\n\nexport const codes = {\n    0x00: 'STOP',\n    0x01: 'ADD',\n    0x02: 'MUL',\n    0x03: 'SUB',\n    0x04: 'DIV',\n    0x05: 'SDIV',\n    0x06: 'MOD',\n    0x07: 'SMOD',\n    0x08: 'ADDMOD',\n    0x09: 'MULMOD',\n    0x0a: 'EXP',\n    0x0b: 'SIGNEXTEND',\n    0x10: 'LT',\n    0x11: 'GT',\n    0x12: 'SLT',\n    0x13: 'SGT',\n    0x14: 'EQ',\n    0x15: 'ISZERO',\n    0x16: 'AND',\n    0x17: 'OR',\n    0x18: 'XOR',\n    0x19: 'NOT',\n    0x1a: 'BYTE',\n    0x1b: 'SHL',\n    0x1c: 'SHR',\n    0x1d: 'SAR',\n    0x20: 'SHA3',\n    0x30: 'ADDRESS',\n    0x31: 'BALANCE',\n    0x32: 'ORIGIN',\n    0x33: 'CALLER',\n    0x34: 'CALLVALUE',\n    0x35: 'CALLDATALOAD',\n    0x36: 'CALLDATASIZE',\n    0x37: 'CALLDATACOPY',\n    0x38: 'CODESIZE',\n    0x39: 'CODECOPY',\n    0x3a: 'GASPRICE',\n    0x3b: 'EXTCODESIZE',\n    0x3c: 'EXTCODECOPY',\n    0x3d: 'RETURNDATASIZE',\n    0x3e: 'RETURNDATACOPY',\n    0x3f: 'EXTCODEHASH',\n    0x40: 'BLOCKHASH',\n    0x41: 'COINBASE',\n    0x42: 'TIMESTAMP',\n    0x43: 'NUMBER',\n    0x44: 'DIFFICULTY',\n    0x45: 'GASLIMIT',\n    0x50: 'POP',\n    0x51: 'MLOAD',\n    0x52: 'MSTORE',\n    0x53: 'MSTORE8',\n    0x54: 'SLOAD',\n    0x55: 'SSTORE',\n    0x56: 'JUMP',\n    0x57: 'JUMPI',\n    0x58: 'PC',\n    0x59: 'MSIZE',\n    0x5a: 'GAS',\n    0x5b: 'JUMPDEST',\n    0x60: 'PUSH1',\n    0x61: 'PUSH2',\n    0x62: 'PUSH3',\n    0x63: 'PUSH4',\n    0x64: 'PUSH5',\n    0x65: 'PUSH6',\n    0x66: 'PUSH7',\n    0x67: 'PUSH8',\n    0x68: 'PUSH9',\n    0x69: 'PUSH10',\n    0x6a: 'PUSH11',\n    0x6b: 'PUSH12',\n    0x6c: 'PUSH13',\n    0x6d: 'PUSH14',\n    0x6e: 'PUSH15',\n    0x6f: 'PUSH16',\n    0x70: 'PUSH17',\n    0x71: 'PUSH18',\n    0x72: 'PUSH19',\n    0x73: 'PUSH20',\n    0x74: 'PUSH21',\n    0x75: 'PUSH22',\n    0x76: 'PUSH23',\n    0x77: 'PUSH24',\n    0x78: 'PUSH25',\n    0x79: 'PUSH26',\n    0x7a: 'PUSH27',\n    0x7b: 'PUSH28',\n    0x7c: 'PUSH29',\n    0x7d: 'PUSH30',\n    0x7e: 'PUSH31',\n    0x7f: 'PUSH32',\n    0x80: 'DUP1',\n    0x81: 'DUP2',\n    0x82: 'DUP3',\n    0x83: 'DUP4',\n    0x84: 'DUP5',\n    0x85: 'DUP6',\n    0x86: 'DUP7',\n    0x87: 'DUP8',\n    0x88: 'DUP9',\n    0x89: 'DUP10',\n    0x8a: 'DUP11',\n    0x8b: 'DUP12',\n    0x8c: 'DUP13',\n    0x8d: 'DUP14',\n    0x8e: 'DUP15',\n    0x8f: 'DUP16',\n    0x90: 'SWAP1',\n    0x91: 'SWAP2',\n    0x92: 'SWAP3',\n    0x93: 'SWAP4',\n    0x94: 'SWAP5',\n    0x95: 'SWAP6',\n    0x96: 'SWAP7',\n    0x97: 'SWAP8',\n    0x98: 'SWAP9',\n    0x99: 'SWAP10',\n    0x9a: 'SWAP11',\n    0x9b: 'SWAP12',\n    0x9c: 'SWAP13',\n    0x9d: 'SWAP14',\n    0x9e: 'SWAP15',\n    0x9f: 'SWAP16',\n    0xa0: 'LOG0',\n    0xa1: 'LOG1',\n    0xa2: 'LOG2',\n    0xa3: 'LOG3',\n    0xa4: 'LOG4',\n    0xf0: 'CREATE',\n    0xf1: 'CALL',\n    0xf2: 'CALLCODE',\n    0xf3: 'RETURN',\n    0xf4: 'DELEGATECALL',\n    0xf5: 'CREATE2',\n    0xfa: 'STATICCALL',\n    0xfd: 'REVERT',\n    0xfe: 'INVALID',\n    0xff: 'SELFDESTRUCT'\n};\n\nexport const names = {\n    STOP: 0x00,\n    ADD: 0x01,\n    MUL: 0x02,\n    SUB: 0x03,\n    DIV: 0x04,\n    SDIV: 0x05,\n    MOD: 0x06,\n    SMOD: 0x07,\n    ADDMOD: 0x08,\n    MULMOD: 0x09,\n    EXP: 0x0a,\n    SIGNEXTEND: 0x0b,\n    LT: 0x10,\n    GT: 0x11,\n    SLT: 0x12,\n    SGT: 0x13,\n    EQ: 0x14,\n    ISZERO: 0x15,\n    AND: 0x16,\n    OR: 0x17,\n    XOR: 0x18,\n    NOT: 0x19,\n    BYTE: 0x1a,\n    SHL: 0x1b,\n    SHR: 0x1c,\n    SAR: 0x1d,\n    SHA3: 0x20,\n    ADDRESS: 0x30,\n    BALANCE: 0x31,\n    ORIGIN: 0x32,\n    CALLER: 0x33,\n    CALLVALUE: 0x34,\n    CALLDATALOAD: 0x35,\n    CALLDATASIZE: 0x36,\n    CALLDATACOPY: 0x37,\n    CODESIZE: 0x38,\n    CODECOPY: 0x39,\n    GASPRICE: 0x3a,\n    EXTCODESIZE: 0x3b,\n    EXTCODECOPY: 0x3c,\n    RETURNDATASIZE: 0x3d,\n    RETURNDATACOPY: 0x3e,\n    EXTCODEHASH: 0x3f,\n    BLOCKHASH: 0x40,\n    COINBASE: 0x41,\n    TIMESTAMP: 0x42,\n    NUMBER: 0x43,\n    DIFFICULTY: 0x44,\n    GASLIMIT: 0x45,\n    POP: 0x50,\n    MLOAD: 0x51,\n    MSTORE: 0x52,\n    MSTORE8: 0x53,\n    SLOAD: 0x54,\n    SSTORE: 0x55,\n    JUMP: 0x56,\n    JUMPI: 0x57,\n    PC: 0x58,\n    MSIZE: 0x59,\n    GAS: 0x5a,\n    JUMPDEST: 0x5b,\n    PUSH1: 0x60,\n    PUSH2: 0x61,\n    PUSH3: 0x62,\n    PUSH4: 0x63,\n    PUSH5: 0x64,\n    PUSH6: 0x65,\n    PUSH7: 0x66,\n    PUSH8: 0x67,\n    PUSH9: 0x68,\n    PUSH10: 0x69,\n    PUSH11: 0x6a,\n    PUSH12: 0x6b,\n    PUSH13: 0x6c,\n    PUSH14: 0x6d,\n    PUSH15: 0x6e,\n    PUSH16: 0x6f,\n    PUSH17: 0x70,\n    PUSH18: 0x71,\n    PUSH19: 0x72,\n    PUSH20: 0x73,\n    PUSH21: 0x74,\n    PUSH22: 0x75,\n    PUSH23: 0x76,\n    PUSH24: 0x77,\n    PUSH25: 0x78,\n    PUSH26: 0x79,\n    PUSH27: 0x7a,\n    PUSH28: 0x7b,\n    PUSH29: 0x7c,\n    PUSH30: 0x7d,\n    PUSH31: 0x7e,\n    PUSH32: 0x7f,\n    DUP1: 0x80,\n    DUP2: 0x81,\n    DUP3: 0x82,\n    DUP4: 0x83,\n    DUP5: 0x84,\n    DUP6: 0x85,\n    DUP7: 0x86,\n    DUP8: 0x87,\n    DUP9: 0x88,\n    DUP10: 0x89,\n    DUP11: 0x8a,\n    DUP12: 0x8b,\n    DUP13: 0x8c,\n    DUP14: 0x8d,\n    DUP15: 0x8e,\n    DUP16: 0x8f,\n    SWAP1: 0x90,\n    SWAP2: 0x91,\n    SWAP3: 0x92,\n    SWAP4: 0x93,\n    SWAP5: 0x94,\n    SWAP6: 0x95,\n    SWAP7: 0x96,\n    SWAP8: 0x97,\n    SWAP9: 0x98,\n    SWAP10: 0x99,\n    SWAP11: 0x9a,\n    SWAP12: 0x9b,\n    SWAP13: 0x9c,\n    SWAP14: 0x9d,\n    SWAP15: 0x9e,\n    SWAP16: 0x9f,\n    LOG0: 0xa0,\n    LOG1: 0xa1,\n    LOG2: 0xa2,\n    LOG3: 0xa3,\n    LOG4: 0xa4,\n    CREATE: 0xf0,\n    CALL: 0xf1,\n    CALLCODE: 0xf2,\n    RETURN: 0xf3,\n    DELEGATECALL: 0xf4,\n    CREATE2: 0xf5,\n    STATICCALL: 0xfa,\n    REVERT: 0xfd,\n    INVALID: 0xfe,\n    SELFDESTRUCT: 0xff\n};\n\nexport default {\n    ...codes,\n    ...names\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class ADD {\n    readonly name: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'ADD';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' + ' + stringify(this.right);\n    }\n\n    get type() {\n        if (this.left.type === this.right.type) {\n            return this.left.type;\n        } else if (!this.left.type && this.right.type) {\n            return this.right.type;\n        } else if (!this.right.type && this.left.type) {\n            return this.left.type;\n        } else {\n            return false;\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    // state.stack.push(\n    //     typeof left === 'bigint' && typeof right === 'bigint' ? left + right\n    //     : typeof left === 'bigint' && left === 0n ? right \n    //     : typeof right === 'bigint' && right === 0n ? left \n    //     : new ADD(left, right)\n    // );\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.add(right));\n    } else if (BigNumber.isInstance(left) && left.isZero()) {\n        state.stack.push(right);\n    } else if (BigNumber.isInstance(right) && right.isZero()) {\n        state.stack.push(left);\n    } else {\n        state.stack.push(new ADD(left, right));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport { ADD } from './add';\nimport { MOD } from './mod';\nimport * as BigNumber from '../../node_modules/big-integer';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    const mod = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right) && BigNumber.isInstance(mod)) {\n        state.stack.push(left.add(right).mod(mod));\n    } else if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(new MOD(left.add(right), mod));\n    } else {\n        state.stack.push(new MOD(new ADD(left, right), mod));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class ADDRESS {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'ADDRESS';\n        this.type = 'address';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'this';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new ADDRESS());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class AND {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'AND';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' && ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.and(right));\n    } else if (BigNumber.isInstance(left) && /^[f]+$/.test(left.toString(16))) {\n        right.size = left.toString(16).length;\n        state.stack.push(right);\n    } else if (BigNumber.isInstance(right) && /^[f]+$/.test(right.toString(16))) {\n        left.size = right.toString(16).length;\n        state.stack.push(left);\n        /*} else if (\n        BigNumber.isInstance(left) &&\n        left.equals('1461501637330902918203684832716283019655932542975')\n    ) {*/\n        /* 2 ** 160 */\n        /*    state.stack.push(right);\n    } else if (\n        BigNumber.isInstance(right) &&\n        right.equals('1461501637330902918203684832716283019655932542975')\n    ) {*/\n        /* 2 ** 160 */\n        /*    state.stack.push(left);*/\n    } else if (\n        BigNumber.isInstance(left) &&\n        right instanceof AND &&\n        BigNumber.isInstance(right.left) &&\n        left.equals(right.left)\n    ) {\n        state.stack.push(right.right);\n    } else {\n        state.stack.push(new AND(left, right));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class BALANCE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly address: any;\n\n    constructor(address: any) {\n        this.name = 'BALANCE';\n        this.wrapped = false;\n        this.address = address;\n    }\n\n    toString() {\n        return stringify(this.address) + '.balance';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const address = state.stack.pop();\n    state.stack.push(new BALANCE(address));\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class BLOCKHASH {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly number: any;\n\n    constructor(blockNumber: any) {\n        this.name = 'BLOCKHASH';\n        this.wrapped = true;\n        this.number = blockNumber;\n    }\n\n    toString() {\n        return 'block.blockhash(' + stringify(this.number) + ')';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const blockNumber = state.stack.pop();\n    state.stack.push(new BLOCKHASH(blockNumber));\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class BYTE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly position: any;\n    readonly data: any;\n\n    constructor(position: any, data: any) {\n        this.name = 'BYTE';\n        this.wrapped = true;\n        this.position = position;\n        this.data = data;\n    }\n\n    toString() {\n        return '(' + stringify(this.data) + ' >> ' + stringify(this.position) + ') & 1';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const position = state.stack.pop();\n    const data = state.stack.pop();\n    if (BigNumber.isInstance(data) && BigNumber.isInstance(position)) {\n        state.stack.push(data.shiftRight(position).and(1));\n    } else {\n        state.stack.push(new BYTE(position, data));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class CALL {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly gas: any;\n    readonly address: any;\n    readonly value: any;\n    readonly memoryStart: any;\n    readonly memoryLength: any;\n    readonly outputStart: any;\n    readonly outputLength: any;\n    readonly throwOnFail: boolean;\n\n    constructor(\n        gas: any,\n        address: any,\n        value: any,\n        memoryStart: any,\n        memoryLength: any,\n        outputStart: any,\n        outputLength: any\n    ) {\n        this.name = 'CALL';\n        this.wrapped = false;\n        this.gas = gas;\n        this.address = address;\n        this.value = value;\n        this.memoryStart = memoryStart;\n        this.memoryLength = memoryLength;\n        this.outputStart = outputStart;\n        this.outputLength = outputLength;\n        this.throwOnFail = false;\n    }\n\n    toString() {\n        if (\n            BigNumber.isInstance(this.memoryLength) &&\n            this.memoryLength.isZero() &&\n            BigNumber.isInstance(this.outputLength) &&\n            this.outputLength.isZero()\n        ) {\n            if (\n                this.gas.name === 'MUL' &&\n                this.gas.left.name === 'ISZERO' &&\n                BigNumber.isInstance(this.gas.right) &&\n                this.gas.right.equals(2300)\n            ) {\n                if (this.throwOnFail) {\n                    return (\n                        'address(' +\n                        stringify(this.address) +\n                        ').transfer(' +\n                        stringify(this.value) +\n                        ')'\n                    );\n                } else {\n                    return (\n                        'address(' +\n                        stringify(this.address) +\n                        ').send(' +\n                        stringify(this.value) +\n                        ')'\n                    );\n                }\n            } else {\n                return (\n                    'address(' +\n                    stringify(this.address) +\n                    ').call.gas(' +\n                    stringify(this.gas) +\n                    ').value(' +\n                    stringify(this.value) +\n                    ')'\n                );\n            }\n        } else {\n            return (\n                'call(' +\n                stringify(this.gas) +\n                ',' +\n                stringify(this.address) +\n                ',' +\n                stringify(this.value) +\n                ',' +\n                stringify(this.memoryStart) +\n                ',' +\n                stringify(this.memoryLength) +\n                ',' +\n                stringify(this.outputStart) +\n                ',' +\n                stringify(this.outputLength) +\n                ')'\n            );\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const gas = state.stack.pop();\n    const address = state.stack.pop();\n    const value = state.stack.pop();\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    const outputStart = state.stack.pop();\n    const outputLength = state.stack.pop();\n    state.stack.push(\n        new CALL(gas, address, value, memoryStart, memoryLength, outputStart, outputLength)\n    );\n    state.memory[outputStart] = 'output';\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class CALLCODE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly gas: any;\n    readonly address: any;\n    readonly value: any;\n    readonly memoryStart: any;\n    readonly memoryLength: any;\n    readonly outputStart: any;\n    readonly outputLength: any;\n\n    constructor(\n        gas: any,\n        address: any,\n        value: any,\n        memoryStart: any,\n        memoryLength: any,\n        outputStart: any,\n        outputLength: any\n    ) {\n        this.name = 'CALLCODE';\n        this.wrapped = true;\n        this.gas = gas;\n        this.address = address;\n        this.value = value;\n        this.memoryStart = memoryStart;\n        this.memoryLength = memoryLength;\n        this.outputStart = outputStart;\n        this.outputLength = outputLength;\n    }\n\n    toString() {\n        return (\n            'callcode(' +\n            stringify(this.gas) +\n            ',' +\n            stringify(this.address) +\n            ',' +\n            stringify(this.value) +\n            ',' +\n            stringify(this.memoryStart) +\n            ',' +\n            stringify(this.memoryLength) +\n            ',' +\n            stringify(this.outputStart) +\n            ',' +\n            stringify(this.outputLength) +\n            ')'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const gas = state.stack.pop();\n    const address = state.stack.pop();\n    const value = state.stack.pop();\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    const outputStart = state.stack.pop();\n    const outputLength = state.stack.pop();\n    state.stack.push(\n        new CALLCODE(gas, address, value, memoryStart, memoryLength, outputStart, outputLength)\n    );\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class CALLDATACOPY {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly startLocation: any;\n    readonly copyLength: any;\n\n    constructor(startLocation: any, copyLength: any) {\n        this.name = 'CALLDATACOPY';\n        this.wrapped = true;\n        this.startLocation = startLocation;\n        this.copyLength = copyLength;\n    }\n\n    toString() {\n        return (\n            'msg.data[' +\n            this.startLocation +\n            ':(' +\n            this.startLocation +\n            '+' +\n            this.copyLength +\n            ')];'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const memoryLocation = state.stack.pop();\n    const startLocation = state.stack.pop();\n    const copyLength = state.stack.pop();\n    state.memory[memoryLocation] = new CALLDATACOPY(startLocation, copyLength);\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class CALLDATALOAD {\n    readonly name: string;\n    readonly type?: string;\n    readonly returntype?: string;\n    readonly wrapped: boolean;\n    readonly location: any;\n\n    constructor(location: any) {\n        this.name = 'CALLDATALOAD';\n        this.wrapped = false;\n        this.location = location;\n    }\n\n    toString() {\n        if (BigNumber.isInstance(this.location) && this.location.isZero()) {\n            return 'msg.data';\n        } else if (\n            BigNumber.isInstance(this.location) &&\n            this.location\n                .subtract(4)\n                .mod(32)\n                .isZero()\n        ) {\n            return (\n                '_arg' +\n                this.location\n                    .subtract(4)\n                    .divide(32)\n                    .toString()\n            );\n        } else {\n            return 'msg.data[' + stringify(this.location) + ']';\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const startLocation = state.stack.pop();\n    state.stack.push(new CALLDATALOAD(startLocation));\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class CALLDATASIZE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'CALLDATASIZE';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'msg.data.length';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new CALLDATASIZE());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class CALLER {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'CALLER';\n        this.name = 'address';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'msg.sender';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new CALLER());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class CALLVALUE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'CALLVALUE';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'msg.value';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new CALLVALUE());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class CODECOPY {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly startLocation: any;\n    readonly copyLength: any;\n\n    constructor(startLocation: any, copyLength: any) {\n        this.name = 'CODECOPY';\n        this.wrapped = true;\n        this.startLocation = startLocation;\n        this.copyLength = copyLength;\n    }\n\n    toString() {\n        return (\n            'this.code[' +\n            stringify(this.startLocation) +\n            ':(' +\n            stringify(this.startLocation) +\n            '+' +\n            stringify(this.copyLength) +\n            ')]'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const memoryLocation = state.stack.pop();\n    const startLocation = state.stack.pop();\n    const copyLength = state.stack.pop();\n    state.memory[memoryLocation] = new CODECOPY(startLocation, copyLength);\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class CODESIZE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'CODESIZE';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'this.code.length';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new CODESIZE());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class COINBASE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'COINBASE';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'block.coinbase';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new COINBASE());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class CREATE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly memoryStart: any;\n    readonly memoryLength: any;\n    readonly value: any;\n\n    constructor(memoryStart: any, memoryLength: any, value: any) {\n        this.name = 'CREATE';\n        this.name = 'address';\n        this.wrapped = true;\n        this.memoryStart = memoryStart;\n        this.memoryLength = memoryLength;\n        this.value = value;\n    }\n\n    toString() {\n        return (\n            '(new Contract(memory[' +\n            stringify(this.memoryStart) +\n            ':(' +\n            stringify(this.memoryStart) +\n            '+' +\n            stringify(this.memoryLength) +\n            ')]).value(' +\n            stringify(this.value) +\n            ')).address'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const value = state.stack.pop();\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    state.stack.push(new CREATE(memoryStart, memoryLength, value));\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class CREATE2 {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly memoryStart: any;\n    readonly memoryLength: any;\n    readonly value: any;\n\n    constructor(memoryStart: any, memoryLength: any, value: any) {\n        this.name = 'CREATE2';\n        this.wrapped = true;\n        this.memoryStart = memoryStart;\n        this.memoryLength = memoryLength;\n        this.value = value;\n    }\n\n    toString() {\n        return (\n            '(new Contract(memory[' +\n            stringify(this.memoryStart) +\n            ':(' +\n            stringify(this.memoryStart) +\n            '+' +\n            stringify(this.memoryLength) +\n            ')]).value(' +\n            stringify(this.value) +\n            ')).address'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const value = state.stack.pop();\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    state.stack.push(new CREATE2(memoryStart, memoryLength, value));\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class DELEGATECALL {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly gas: any;\n    readonly address: any;\n    readonly memoryStart: any;\n    readonly memoryLength: any;\n    readonly outputStart: any;\n    readonly outputLength: any;\n\n    constructor(\n        gas: any,\n        address: any,\n        memoryStart: any,\n        memoryLength: any,\n        outputStart: any,\n        outputLength: any\n    ) {\n        this.name = 'DELEGATECALL';\n        this.wrapped = true;\n        this.gas = gas;\n        this.address = address;\n        this.memoryStart = memoryStart;\n        this.memoryLength = memoryLength;\n        this.outputStart = outputStart;\n        this.outputLength = outputLength;\n    }\n\n    toString() {\n        return (\n            'delegatecall(' +\n            stringify(this.gas) +\n            ',' +\n            stringify(this.address) +\n            ',' +\n            stringify(this.memoryStart) +\n            ',' +\n            stringify(this.memoryLength) +\n            ',' +\n            stringify(this.outputStart) +\n            ',' +\n            stringify(this.outputLength) +\n            ')'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const gas = state.stack.pop();\n    const address = state.stack.pop();\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    const outputStart = state.stack.pop();\n    const outputLength = state.stack.pop();\n    state.stack.push(\n        new DELEGATECALL(gas, address, memoryStart, memoryLength, outputStart, outputLength)\n    );\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class DIFFICULTY {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'DIFFICULTY';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'block.difficulty';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new DIFFICULTY());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class DIV {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'DIV';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' / ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.divide(right));\n    } else if (BigNumber.isInstance(right) && right.equals(1)) {\n        state.stack.push(left);\n    } else {\n        state.stack.push(new DIV(left, right));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const duplicateLocation = parseInt(opcode.name.replace('DUP', ''), 10) - 1;\n    state.stack.duplicate(duplicateLocation);\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class SIG {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly hash: string;\n\n    constructor(hash: string) {\n        this.name = 'SIG';\n        this.wrapped = false;\n        this.hash = hash;\n    }\n\n    toString() {\n        return 'msg.sig == ' + this.hash;\n    }\n}\n\nexport class EQ {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'EQ';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' == ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    let left = state.stack.pop();\n    let right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(BigNumber(left.equals(right) === true ? 1 : 0));\n    } else {\n        if (\n            BigNumber.isInstance(left) &&\n            right.name === 'DIV' &&\n            BigNumber.isInstance(right.right)\n        ) {\n            left = left.multiply(right.right);\n            right = right.left;\n        }\n        if (\n            BigNumber.isInstance(right) &&\n            left.name === 'DIV' &&\n            BigNumber.isInstance(left.right)\n        ) {\n            right = right.multiply(left.right);\n            left = left.left;\n        }\n        if (\n            BigNumber.isInstance(left) &&\n            /^[0]+$/.test(left.toString(16).substring(8)) &&\n            right.name === 'CALLDATALOAD' &&\n            right.location.equals(0)\n        ) {\n            state.stack.push(\n                new SIG(\n                    '0'.repeat(64 - left.toString(16).length) +\n                        left.toString(16).substring(0, 8 - (64 - left.toString(16).length))\n                )\n            );\n        } else if (\n            BigNumber.isInstance(right) &&\n            /^[0]+$/.test(right.toString(16).substring(8)) &&\n            left.name === 'CALLDATALOAD' &&\n            left.location.equals(0)\n        ) {\n            state.stack.push(\n                new SIG(\n                    '0'.repeat(64 - right.toString(16).length) +\n                        right.toString(16).substring(0, 8 - (64 - right.toString(16).length))\n                )\n            );\n        } else {\n            state.stack.push(new EQ(left, right));\n        }\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class EXP {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'EXP';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' ** ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.pow(right));\n    } else {\n        state.stack.push(new EXP(left, right));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class EXTCODECOPY {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly address: any;\n    readonly startLocation: any;\n    readonly copyLength: any;\n\n    constructor(address: any, startLocation: any, copyLength: any) {\n        this.name = 'EXTCODECOPY';\n        this.wrapped = true;\n        this.address = address;\n        this.startLocation = startLocation;\n        this.copyLength = copyLength;\n    }\n\n    toString() {\n        return (\n            'address(' +\n            stringify(this.address) +\n            ').code[' +\n            stringify(this.startLocation) +\n            ':(' +\n            stringify(this.startLocation) +\n            '+' +\n            stringify(this.copyLength) +\n            ')]'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const address = state.stack.pop();\n    const memoryLocation = state.stack.pop();\n    const startLocation = state.stack.pop();\n    const copyLength = state.stack.pop();\n    state.memory[memoryLocation] = new EXTCODECOPY(address, startLocation, copyLength);\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class EXTCODEHASH {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly address: any;\n\n    constructor(address: any) {\n        this.name = 'EXTCODEHASH';\n        this.wrapped = true;\n        this.address = address;\n    }\n\n    toString() {\n        return 'keccak256(address(' + stringify(this.address) + ').code)';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const address = state.stack.pop();\n    state.stack.push(new EXTCODEHASH(address));\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class EXTCODESIZE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly address: any;\n\n    constructor(address: any) {\n        this.name = 'EXTCODESIZE';\n        this.wrapped = true;\n        this.address = address;\n    }\n\n    toString() {\n        return 'address(' + stringify(this.address) + ').code.length';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const address = state.stack.pop();\n    state.stack.push(new EXTCODESIZE(address));\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class GAS {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'GAS';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'gasleft()';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new GAS());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class GASLIMIT {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'GASLIMIT';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'block.gaslimit';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new GASLIMIT());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class GASPRICE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'GASPRICE';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'tx.gasprice';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new GASPRICE());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class GT {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n    readonly equal: boolean;\n\n    constructor(left: any, right: any, equal: boolean = false) {\n        this.name = 'GT';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n        this.equal = equal;\n    }\n\n    toString() {\n        if (this.equal) {\n            return stringify(this.left) + ' >= ' + stringify(this.right);\n        } else {\n            return stringify(this.left) + ' > ' + stringify(this.right);\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(BigNumber(left.greater(right) === true ? 1 : 0));\n    } else {\n        state.stack.push(new GT(left, right));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class INVALID {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly opcode: any;\n\n    constructor(opcode: any) {\n        this.name = 'INVALID';\n        this.wrapped = true;\n        this.opcode = opcode;\n    }\n\n    toString() {\n        return 'revert(\"Invalid instruction (0x' + this.opcode.toString(16) + ')\");';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.halted = true;\n    state.instructions.push(new INVALID(opcode.opcode));\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport { LT } from './lt';\nimport { GT } from './gt';\nimport stringify from '../utils/stringify';\n\nexport class ISZERO {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly item: any;\n\n    constructor(item: any) {\n        this.name = 'ISZERO';\n        this.wrapped = true;\n        this.item = item;\n    }\n\n    toString() {\n        if (this.item.name === 'EQ') {\n            return stringify(this.item.left) + ' != ' + stringify(this.item.right);\n        } else {\n            return stringify(this.item) + ' == 0';\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const item = state.stack.pop();\n    if (BigNumber.isInstance(item)) {\n        state.stack.push(BigNumber(item.isZero() === true ? 1 : 0));\n    } else if (item.name === 'LT') {\n        if (item.equal) {\n            state.stack.push(new GT(item.left, item.right));\n        } else {\n            state.stack.push(new GT(item.left, item.right, true));\n        }\n    } else if (item.name === 'GT') {\n        if (item.equal) {\n            state.stack.push(new LT(item.left, item.right));\n        } else {\n            state.stack.push(new LT(item.left, item.right, true));\n        }\n    } else if (item instanceof ISZERO) {\n        state.stack.push(item.item);\n    } else {\n        state.stack.push(new ISZERO(item));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class JUMP {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly valid: boolean;\n    readonly location: any;\n\n    constructor(location: any, bad?: boolean) {\n        this.name = 'JUMP';\n        this.wrapped = false;\n        this.location = location;\n        this.valid = true;\n        if (bad) {\n            this.valid = false;\n        }\n    }\n\n    toString() {\n        if (!this.valid) {\n            return \"revert(\\\"Bad jump destination\\\");\";\n        } else {\n            return 'goto(' + stringify(this.location) + ');';\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const jumpLocation = state.stack.pop();\n    if (!BigNumber.isInstance(jumpLocation)) {\n        state.halted = true;\n        state.instructions.push(new JUMP(jumpLocation, true));\n    } else {\n        const opcodes = state.getOpcodes();\n        const jumpLocationData = opcodes.find((o: any) => o.pc === jumpLocation.toJSNumber());\n        if (!jumpLocationData) {\n            state.halted = true;\n            state.instructions.push(new JUMP(jumpLocation, true));\n        } else {\n            const jumpIndex = opcodes.indexOf(jumpLocationData);\n            if (!(opcode.pc + ':' + jumpLocation.toJSNumber() in state.jumps)) {\n                if (!jumpLocationData || jumpLocationData.name !== 'JUMPDEST') {\n                    state.halted = true;\n                    state.instructions.push(new JUMP(jumpLocation, true));\n                } else if (\n                    jumpLocationData &&\n                    jumpIndex >= 0 &&\n                    jumpLocationData.name === 'JUMPDEST'\n                ) {\n                    state.jumps[opcode.pc + ':' + jumpLocation.toJSNumber()] = true;\n                    state.pc = jumpIndex;\n                } else {\n                    state.halted = true;\n                    state.instructions.push(new JUMP(jumpLocation, true));\n                }\n            } else {\n                state.halted = true;\n                state.instructions.push(new JUMP(jumpLocation));\n            }\n        }\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    /* Empty */\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\n// import * as functionHashes from '../../data/functionHashes.json';\nimport stringify from '../utils/stringify';\n\nconst updateCallDataLoad = (item: any, types: any) => {\n    for (const i in item) {\n        if (item.hasOwnProperty(i)) {\n            if (\n                typeof item[i] === 'object' &&\n                item[i].name === 'CALLDATALOAD' &&\n                BigNumber.isInstance(item[i].location)\n            ) {\n                const argNumber = item[i].location\n                    .subtract(4)\n                    .divide(32)\n                    .toString();\n                item[i].type = types[argNumber];\n            }\n            if (typeof item[i] === 'object') {\n                updateCallDataLoad(item[i], types);\n            }\n        }\n    }\n};\n\nconst findReturns = (item: any) => {\n    const returns = [];\n    for (const i in item) {\n        if (item.hasOwnProperty(i)) {\n            if (\n                typeof item[i] === 'object' &&\n                item[i].name === 'RETURN' &&\n                item[i].items &&\n                item[i].items.length > 0\n            ) {\n                returns.push(item[i].items);\n            }\n            if (typeof item[i] === 'object') {\n                const deepReturns: any = findReturns(item[i]);\n                if (deepReturns.length > 0) {\n                    returns.push(...deepReturns);\n                }\n            }\n        }\n    }\n    return returns;\n};\n\nexport class TopLevelFunction {\n    readonly name: string;\n    readonly type?: string;\n    readonly label: string;\n    readonly hash: any;\n    readonly gasUsed: number;\n    readonly payable: boolean;\n    readonly visibility: string;\n    readonly constant: boolean;\n    readonly items: any;\n    readonly returns: any;\n\n    constructor(items: any, hash: any, gasUsed: number, functionHashes: {[s: string]: string}) {\n        this.name = 'Function';\n        this.hash = hash;\n        this.gasUsed = gasUsed;\n        this.items = items;\n        this.payable = true;\n        this.visibility = 'public';\n        this.constant = false;\n        this.returns = [];\n        if (this.hash in functionHashes) {\n            this.label = (functionHashes as any)[this.hash];\n        } else {\n            this.label = this.hash + '()';\n        }\n        if (\n            this.items.length > 0 &&\n            this.items[0] instanceof REQUIRE &&\n            this.items[0].condition.name === 'ISZERO' &&\n            this.items[0].condition.item.name === 'CALLVALUE'\n        ) {\n            this.payable = false;\n            this.items.shift();\n        }\n        if (this.items.length === 1 && this.items[0].name === 'RETURN') {\n            this.constant = true;\n        }\n        if (this.hash in functionHashes) {\n            const functionName = (functionHashes as any)[this.hash].split('(')[0];\n            const argumentTypes = (functionHashes as any)[this.hash]\n                .replace(functionName, '')\n                .substr(1)\n                .slice(0, -1)\n                .split(',');\n            if (\n                argumentTypes.length > 1 ||\n                (argumentTypes.length === 1 && argumentTypes[0] !== '')\n            ) {\n                this.items.forEach((item: any) => updateCallDataLoad(item, argumentTypes));\n            }\n        }\n        const returns: any = [];\n        this.items.forEach((item: any) => {\n            const deepReturns = findReturns(item);\n            if (deepReturns.length > 0) {\n                returns.push(...deepReturns);\n            }\n        });\n        if (\n            returns.length > 0 &&\n            returns.every(\n                (returnItem: any) =>\n                    returnItem.length === returns[0].length &&\n                    returnItem.map((item: any) => item.type).join('') ===\n                        returns[0].map((item: any) => item.type).join('')\n            )\n        ) {\n            returns[0].forEach((item: any) => {\n                if (BigNumber.isInstance(item)) {\n                    this.returns.push('uint256');\n                } else if (item.type) {\n                    this.returns.push(item.type);\n                } else {\n                    this.returns.push('unknown');\n                }\n            });\n        } else if (returns.length > 0) {\n            this.returns.push('<unknown>');\n        }\n    }\n}\n\nexport class Variable {\n    readonly name: string;\n    readonly label: string | false;\n    readonly types: any;\n\n    constructor(label: string | false, types: any) {\n        this.name = 'Variable';\n        this.label = label;\n        this.types = types;\n    }\n}\n\nexport class REQUIRE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly condition: any;\n\n    constructor(condition: any) {\n        this.name = 'REQUIRE';\n        this.wrapped = true;\n        this.condition = condition;\n    }\n\n    toString() {\n        return 'require(' + stringify(this.condition) + ');';\n    }\n}\n\nexport class JUMPI {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly condition: any;\n    readonly location: any;\n    readonly valid: boolean;\n    readonly true?: any;\n    readonly false?: any;\n    readonly payable?: boolean;\n\n    constructor(condition: any, location: any, ifTrue?: any, ifFalse?: any, skipped?: boolean) {\n        this.name = 'JUMPI';\n        this.wrapped = true;\n        this.condition = condition;\n        this.location = location;\n        if (skipped) {\n            this.valid = true;\n        } else if (ifTrue && ifFalse) {\n            this.valid = true;\n            this.true = ifTrue;\n            this.false = ifFalse;\n            if (\n                this.true.length >= 1 &&\n                this.true[0] instanceof REQUIRE &&\n                this.true[0].condition.name === 'ISZERO' &&\n                this.true[0].condition.item.name === 'CALLVALUE'\n            ) {\n                this.payable = false;\n                this.true.shift();\n            } else {\n                this.payable = true;\n            }\n        } else {\n            this.valid = false;\n        }\n    }\n\n    toString() {\n        if (this.valid && this.true && this.false) {\n            return stringify(this.condition);\n        } else if (this.valid) {\n            return 'if' + stringify(this.condition) + ' goto(' + stringify(this.location) + ');';\n        } else {\n            console.log(this);\n            return \"revert(\\\"Bad jump destination\\\");\";\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const jumpLocation = state.stack.pop();\n    const jumpCondition = state.stack.pop();\n    const opcodes = state.getOpcodes();\n    console.log(jumpLocation);\n    console.log(state.conditions);\n    console.log('-');\n    if (!BigNumber.isInstance(jumpLocation)) {\n        state.halted = true;\n        state.instructions.push(new JUMPI(jumpCondition, jumpLocation));\n    } else {\n        const jumpLocationData = opcodes.find((o: any) => o.pc === jumpLocation.toJSNumber());\n        if (!jumpLocationData || jumpLocationData.name !== 'JUMPDEST') {\n            //state.halted = true;\n            //state.instructions.push(new JUMPI(jumpCondition, jumpLocation));\n            state.instructions.push(new REQUIRE(jumpCondition));\n        } else if (BigNumber.isInstance(jumpCondition)) {\n            const jumpIndex = opcodes.indexOf(jumpLocationData);\n            if (\n                jumpIndex >= 0 &&\n                !jumpCondition.equals(0) &&\n                !(opcode.pc + ':' + jumpLocation.toJSNumber() in state.jumps)\n            ) {\n                state.jumps[opcode.pc + ':' + jumpLocation.toJSNumber()] = true;\n                state.pc = jumpIndex;\n            }\n        } else if (\n            !(opcode.pc + ':' + jumpLocation.toJSNumber() in state.jumps) &&\n            jumpCondition.name === 'SIG'\n        ) {\n            const jumpIndex = opcodes.indexOf(jumpLocationData);\n            if (jumpIndex >= 0) {\n                const functionClone: any = state.clone();\n                functionClone.pc = jumpIndex;\n                const functionCloneTree = functionClone.parse();\n                state.functions[jumpCondition.hash] = new TopLevelFunction(\n                    functionCloneTree,\n                    jumpCondition.hash,\n                    functionClone.gasUsed,\n                    state.functionHashes,\n                );\n                if (\n                    jumpCondition.hash in state.functionHashes &&\n                    functionCloneTree.length === 1 &&\n                    functionCloneTree[0].name === 'RETURN' &&\n                    functionCloneTree[0].items.every((item: any) => item.name === 'MappingLoad')\n                ) {\n                    functionCloneTree[0].items.forEach((item: any) => {\n                        const fullFunction = (state.functionHashes as any)[jumpCondition.hash];\n                        state.mappings[item.location].name = fullFunction.split('(')[0];\n                        if (\n                            item.structlocation &&\n                            !state.mappings[item.location].structs.includes(item.structlocation)\n                        ) {\n                            state.mappings[item.location].structs.push(item.structlocation);\n                        }\n                    });\n                    delete state.functions[jumpCondition.hash];\n                } else if (\n                    jumpCondition.hash in state.functionHashes &&\n                    state.functions[jumpCondition.hash].items.length === 1 &&\n                    state.functions[jumpCondition.hash].items[0].name === 'RETURN' &&\n                    state.functions[jumpCondition.hash].items[0].items.length === 1 &&\n                    state.functions[jumpCondition.hash].items[0].items[0].name === 'SLOAD' &&\n                    BigNumber.isInstance(\n                        state.functions[jumpCondition.hash].items[0].items[0].location\n                    )\n                ) {\n                    if (\n                        !(\n                            state.functions[jumpCondition.hash].items[0].items[0].location in\n                            state.variables\n                        )\n                    ) {\n                        const fullFunction = (state.functionHashes as any)[jumpCondition.hash];\n                        state.variables[\n                            state.functions[jumpCondition.hash].items[0].items[0].location\n                        ] = new Variable(fullFunction.split('(')[0], []);\n                        delete state.functions[jumpCondition.hash];\n                    } else {\n                        const fullFunction = (state.functionHashes as any)[jumpCondition.hash];\n                        state.variables[\n                            state.functions[jumpCondition.hash].items[0].items[0].location\n                        ].label = fullFunction.split('(')[0];\n                        delete state.functions[jumpCondition.hash];\n                    }\n                }\n            }\n        } else if (\n            !(opcode.pc + ':' + jumpLocation.toJSNumber() in state.jumps) &&\n            ((jumpCondition.name === 'LT' &&\n                jumpCondition.left.name === 'CALLDATASIZE' &&\n                BigNumber.isInstance(jumpCondition.right) &&\n                jumpCondition.right.equals(4)) ||\n                (jumpCondition.name === 'ISZERO' && jumpCondition.item.name === 'CALLDATASIZE'))\n        ) {\n            const jumpIndex = opcodes.indexOf(jumpLocationData);\n            if (jumpIndex >= 0) {\n                state.halted = true;\n                const trueClone: any = state.clone();\n                trueClone.pc = jumpIndex;\n                trueClone.conditions.push(jumpCondition);\n                const trueCloneTree = trueClone.parse();\n                const falseClone = state.clone();\n                falseClone.pc = state.pc + 1;\n                const falseCloneTree: any = falseClone.parse();\n                if (\n                    trueCloneTree.length > 0 &&\n                    trueCloneTree.length === falseCloneTree.length &&\n                    trueCloneTree[0].name !== 'REVERT' &&\n                    trueCloneTree[0].name !== 'INVALID' &&\n                    trueCloneTree.map((item: any) => stringify(item)).join('') ===\n                        falseCloneTree.map((item: any) => stringify(item)).join('')\n                ) {\n                    state.functions[''] = new TopLevelFunction(\n                        trueCloneTree,\n                        '',\n                        trueCloneTree.gasUsed,\n                        state.functionHashes,\n                    );\n                } else if (\n                    trueCloneTree.length > 0 &&\n                    trueCloneTree[0].name !== 'REVERT' &&\n                    trueCloneTree[0].name !== 'INVALID'\n                ) {\n                    state.instructions.push(\n                        new JUMPI(jumpCondition, jumpLocation, trueCloneTree, falseCloneTree)\n                    );\n                }\n            } else {\n                state.instructions.push(new JUMPI(jumpCondition, jumpLocation));\n            }\n        } else if (!(opcode.pc + ':' + jumpLocation.toJSNumber() in state.jumps)) {\n            const jumpIndex = opcodes.indexOf(jumpLocationData);\n            state.jumps[opcode.pc + ':' + jumpLocation.toJSNumber()] = true;\n            if (jumpIndex >= 0) {\n                state.halted = true;\n                const trueClone: any = state.clone();\n                trueClone.pc = jumpIndex;\n                trueClone.conditions.push(jumpCondition);\n                const trueCloneTree = trueClone.parse();\n                const falseClone = state.clone();\n                falseClone.pc = state.pc + 1;\n                const falseCloneTree: any = falseClone.parse();\n                if (\n                    (falseCloneTree.length === 1 &&\n                        'name' in falseCloneTree[0] &&\n                        (falseCloneTree[0].name === 'REVERT' &&\n                            falseCloneTree[0].items &&\n                            falseCloneTree[0].items.length === 0)) ||\n                    falseCloneTree[0].name === 'INVALID'\n                ) {\n                    if (\n                        jumpCondition.name === 'CALL' &&\n                        BigNumber.isInstance(jumpCondition.memoryLength) &&\n                        jumpCondition.memoryLength.isZero() &&\n                        BigNumber.isInstance(jumpCondition.outputLength) &&\n                        jumpCondition.outputLength.isZero() &&\n                        jumpCondition.gas.name === 'MUL' &&\n                        jumpCondition.gas.left.name === 'ISZERO' &&\n                        BigNumber.isInstance(jumpCondition.gas.right) &&\n                        jumpCondition.gas.right.equals(2300)\n                    ) {\n                        jumpCondition.throwOnFail = true;\n                        state.instructions.push(jumpCondition);\n                        state.instructions.push(...trueCloneTree);\n                    } else {\n                        state.instructions.push(new REQUIRE(jumpCondition));\n                        state.instructions.push(...trueCloneTree);\n                    }\n                } else {\n                    state.instructions.push(\n                        new JUMPI(jumpCondition, jumpLocation, trueCloneTree, falseCloneTree)\n                    );\n                }\n            } else {\n                state.instructions.push(new JUMPI(jumpCondition, jumpLocation));\n            }\n        } else {\n            state.instructions.push(new JUMPI(jumpCondition, jumpLocation, null, null, true));\n        }\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport { MLOAD } from './mload';\n// import * as eventHashes from '../../data/eventHashes.json';\nimport * as BigNumber from '../../node_modules/big-integer';\n\nexport class LOG {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly memoryStart?: any;\n    readonly memoryLength?: any;\n    readonly items?: any;\n    readonly topics: any;\n    readonly eventName?: string;\n\n    constructor(eventHashes: {[s: string]: string},topics: any, items?: any, memoryStart?: any, memoryLength?: any) {\n        this.name = 'LOG';\n        this.wrapped = true;\n        this.topics = topics;\n        if (\n            this.topics.length > 0 &&\n            BigNumber.isInstance(this.topics[0]) &&\n            this.topics[0].toString(16) in eventHashes\n        ) {\n            this.eventName = (eventHashes as any)[this.topics[0].toString(16)].split('(')[0];\n            this.topics.shift();\n        }\n        if (this.memoryStart && this.memoryLength) {\n            this.memoryStart = memoryStart;\n            this.memoryLength = memoryLength;\n        } else {\n            this.items = items;\n        }\n    }\n\n    toString() {\n        if (this.eventName) {\n            return (\n                'emit ' + this.eventName + '(' + [...this.topics, ...this.items].join(', ') + ');'\n            );\n        } else {\n            return 'log(' + [...this.topics, ...this.items].join(', ') + ');';\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const topicsCount = parseInt(opcode.name.replace('LOG', ''), 10);\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    const topics = [];\n    for (let i = 0; i < topicsCount; i++) {\n        topics.push(state.stack.pop());\n    }\n    if (topics.length > 0) {\n        const eventTopic = topics[0].toString(16);\n        if (!(eventTopic in state.events)) {\n            state.events[eventTopic] = {};\n            state.events[eventTopic].indexedCount = topics.length - 1;\n            if (eventTopic in state.eventHashes) {\n                state.events[eventTopic].label = (state.eventHashes as any)[eventTopic];\n            }\n        }\n    }\n    if (BigNumber.isInstance(memoryStart) && BigNumber.isInstance(memoryLength)) {\n        const items = [];\n        for (\n            let i = memoryStart.toJSNumber();\n            i < memoryStart.add(memoryLength).toJSNumber();\n            i += 32\n        ) {\n            if (i in state.memory) {\n                items.push(state.memory[i]);\n            } else {\n                items.push(new MLOAD(i));\n            }\n        }\n        if (topics.length === 0) {\n            if (!('anonymous' in state.events)) {\n                state.events.anonymous = [];\n            }\n            state.events.anonymous.push({ items });\n        }\n        state.instructions.push(new LOG(state.eventHashes, topics, items));\n    } else {\n        state.instructions.push(new LOG(state.eventHashes, topics, [], memoryStart, memoryLength));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class LT {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n    readonly equal: boolean;\n\n    constructor(left: any, right: any, equal: boolean = false) {\n        this.name = 'LT';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n        this.equal = equal;\n    }\n\n    toString() {\n        if (this.equal) {\n            return stringify(this.left) + ' <= ' + stringify(this.right);\n        } else {\n            return stringify(this.left) + ' < ' + stringify(this.right);\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(BigNumber(left.lesser(right) === true ? 1 : 0));\n    } else {\n        state.stack.push(new LT(left, right));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class MLOAD {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly location: any;\n\n    constructor(location: any) {\n        this.name = 'MLOAD';\n        this.wrapped = true;\n        this.location = location;\n    }\n\n    toString() {\n        return 'memory[' + stringify(this.location) + ']';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const memoryLocation = state.stack.pop();\n    if (BigNumber.isInstance(memoryLocation) && memoryLocation.toJSNumber() in state.memory) {\n        state.stack.push(state.memory[memoryLocation.toJSNumber()]);\n    } else {\n        state.stack.push(new MLOAD(memoryLocation));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class MOD {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'MOD';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' % ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.mod(right));\n    } else {\n        state.stack.push(new MOD(left, right));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class MSIZE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'MSIZE';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'memory.length';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new MSIZE());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class MSTORE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly location: any;\n    readonly data: any;\n\n    constructor(location: any, data: any) {\n        this.name = 'MSTORE';\n        this.wrapped = true;\n        this.location = location;\n        this.data = data;\n    }\n\n    toString() {\n        return 'memory[' + stringify(this.location) + '] = ' + stringify(this.data) + ';';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const storeLocation = state.stack.pop();\n    const storeData = state.stack.pop();\n    if (BigNumber.isInstance(storeLocation)) {\n        state.memory[storeLocation.toJSNumber()] = storeData;\n    } else {\n        state.instructions.push(new MSTORE(storeLocation, storeData));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class MUL {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'MUL';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' * ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.multiply(right));\n    } else if (\n        (BigNumber.isInstance(left) && left.isZero()) ||\n        (BigNumber.isInstance(right) && right.isZero())\n    ) {\n        state.stack.push(BigNumber(0));\n    } else {\n        state.stack.push(new MUL(left, right));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport { MUL } from './mul';\nimport { MOD } from './mod';\nimport * as BigNumber from '../../node_modules/big-integer';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    const mod = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right) && BigNumber.isInstance(mod)) {\n        state.stack.push(left.multiply(right).mod(mod));\n    } else if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(new MOD(left.multiply(right), mod));\n    } else {\n        state.stack.push(new MOD(new MUL(left, right), mod));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class NOT {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly item: any;\n\n    constructor(item: any) {\n        this.name = 'AND';\n        this.wrapped = true;\n        this.item = item;\n    }\n\n    toString() {\n        return '~' + stringify(this.item);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const item = state.stack.pop();\n    if (BigNumber.isInstance(item)) {\n        state.stack.push(item.not());\n    } else {\n        state.stack.push(new NOT(item));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class NUMBER {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'NUMBER';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'block.number';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new NUMBER());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class OR {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'OR';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' || ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.or(right));\n    } else {\n        state.stack.push(new OR(left, right));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class ORIGIN {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'ORIGIN';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'tx.origin';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new ORIGIN());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(BigNumber(opcode.pc));\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.pop();\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const pushDataLength = parseInt(opcode.name.replace('PUSH', ''), 10);\n    state.stack.push(BigNumber(opcode.pushData!.toString('hex'), 16));\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport { MLOAD } from './mload';\nimport { hex2a } from '../utils/hex';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class RETURN {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly memoryStart?: any;\n    readonly memoryLength?: any;\n    readonly items: any;\n\n    constructor(items: any, memoryStart?: any, memoryLength?: any) {\n        this.name = 'RETURN';\n        this.wrapped = true;\n        if (memoryStart && memoryLength) {\n            this.memoryStart = memoryStart;\n            this.memoryLength = memoryLength;\n        } else {\n            this.items = items;\n        }\n    }\n\n    toString() {\n        if (this.memoryStart && this.memoryLength) {\n            return (\n                'return memory[' +\n                stringify(this.memoryStart) +\n                ':(' +\n                stringify(this.memoryStart) +\n                '+' +\n                stringify(this.memoryLength) +\n                ')];'\n            );\n        } else if (this.items.length === 0) {\n            return 'return;';\n        } else if (\n            this.items.length === 1 &&\n            (BigNumber.isInstance(this.items[0]) || this.items[0].static)\n        ) {\n            return 'return ' + this.items[0] + ';';\n        } else if (\n            this.items.length === 3 &&\n            this.items.every((item: any) => BigNumber.isInstance(item)) &&\n            this.items[0].equals(32)\n        ) {\n            return 'return \"' + hex2a(this.items[2].toString(16)) + '\";';\n        } else {\n            return 'return(' + this.items.map((item: any) => stringify(item)).join(', ') + ');';\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    state.halted = true;\n    if (BigNumber.isInstance(memoryStart) && BigNumber.isInstance(memoryLength)) {\n        const items = [];\n        for (\n            let i = memoryStart.toJSNumber();\n            i < memoryStart.add(memoryLength).toJSNumber();\n            i += 32\n        ) {\n            if (i in state.memory) {\n                items.push(state.memory[i]);\n            } else {\n                items.push(new MLOAD(i));\n            }\n        }\n        state.instructions.push(new RETURN(items));\n    } else {\n        state.instructions.push(new RETURN([], memoryStart, memoryLength));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class RETURNDATACOPY {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly returnDataPosition: any;\n    readonly returnDataSize: any;\n\n    constructor(returnDataPosition: any, returnDataSize: any) {\n        this.name = 'RETURNDATACOPY';\n        this.wrapped = true;\n        this.returnDataPosition = returnDataPosition;\n        this.returnDataSize = returnDataSize;\n    }\n\n    toString() {\n        return (\n            'output[' +\n            stringify(this.returnDataPosition) +\n            ':(' +\n            stringify(this.returnDataPosition) +\n            '+' +\n            stringify(this.returnDataSize) +\n            ')]'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const memoryPosition = state.stack.pop();\n    const returnDataPosition = state.stack.pop();\n    const returnDataSize = state.stack.pop();\n    state.memory[memoryPosition] = new RETURNDATACOPY(returnDataPosition, returnDataSize);\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class RETURNDATASIZE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'RETURNDATASIZE';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'output.length';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new RETURNDATASIZE());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport { MLOAD } from './mload';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class REVERT {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly memoryStart?: any;\n    readonly memoryLength?: any;\n    readonly items: any;\n\n    constructor(items: any, memoryStart?: any, memoryLength?: any) {\n        this.name = 'REVERT';\n        this.wrapped = true;\n        if (memoryStart && memoryLength) {\n            this.memoryStart = memoryStart;\n            this.memoryLength = memoryLength;\n        } else {\n            this.items = items;\n        }\n    }\n\n    toString() {\n        if (this.items) {\n            return 'revert(' + this.items.map((item: any) => stringify(item)).join(', ') + ');';\n        } else {\n            return (\n                'revert(memory[' +\n                stringify(this.memoryStart) +\n                ':(' +\n                stringify(this.memoryStart) +\n                '+' +\n                stringify(this.memoryLength) +\n                ')]);'\n            );\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    state.halted = true;\n    if (BigNumber.isInstance(memoryStart) && BigNumber.isInstance(memoryLength)) {\n        const items = [];\n        for (\n            let i = memoryStart.toJSNumber();\n            i < memoryStart.add(memoryLength).toJSNumber();\n            i += 32\n        ) {\n            if (i in state.memory) {\n                items.push(state.memory[i]);\n            } else {\n                items.push(new MLOAD(i));\n            }\n        }\n        state.instructions.push(new REVERT(items));\n    } else {\n        state.instructions.push(new REVERT([], memoryStart, memoryLength));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class SAR {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'SAR';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' >> ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.shiftRight(right));\n    } else {\n        state.stack.push(new SAR(left, right));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class SELFDESTRUCT {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly address: any;\n\n    constructor(address: any) {\n        this.name = 'SELFDESTRUCT';\n        this.wrapped = true;\n        this.address = address;\n    }\n\n    toString() {\n        return 'selfdestruct(' + stringify(this.address) + ');';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const address = state.stack.pop();\n    state.halted = true;\n    state.instructions.push(new SELFDESTRUCT(address));\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport { MLOAD } from './mload';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class SHA3 {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly memoryStart?: any;\n    readonly memoryLength?: any;\n    readonly items: any;\n\n    constructor(items: any, memoryStart?: any, memoryLength?: any) {\n        this.name = 'SHA3';\n        this.wrapped = false;\n        if (memoryStart && memoryLength) {\n            this.memoryStart = memoryStart;\n            this.memoryLength = memoryLength;\n        } else {\n            this.items = items;\n        }\n    }\n\n    toString() {\n        if (this.items) {\n            return 'keccak256(' + this.items.map((item: any) => stringify(item)).join(', ') + ')';\n        } else {\n            return (\n                'keccak256(memory[' +\n                stringify(this.memoryStart) +\n                ':(' +\n                stringify(this.memoryStart) +\n                '+' +\n                stringify(this.memoryLength) +\n                ')])'\n            );\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    if (BigNumber.isInstance(memoryStart) && BigNumber.isInstance(memoryLength)) {\n        const items = [];\n        for (\n            let i = memoryStart.toJSNumber();\n            i < memoryStart.add(memoryLength).toJSNumber();\n            i += 32\n        ) {\n            if (i in state.memory) {\n                items.push(state.memory[i]);\n            } else {\n                items.push(new MLOAD(i));\n            }\n        }\n        state.stack.push(new SHA3(items));\n    } else {\n        state.stack.push(new SHA3([], memoryStart, memoryLength));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class SHL {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'SHL';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' << ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.shiftLeft(right));\n    } else {\n        state.stack.push(new SHL(left, right));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class SHR {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'SHR';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' >>> ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.shiftRight(right));\n    } else {\n        state.stack.push(new SHR(left, right));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport { SHL } from './shl';\nimport { SAR } from './sar';\nimport { SUB } from './sub';\nimport * as BigNumber from '../../node_modules/big-integer';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(\n            right.shiftLeft(BigNumber(32).subtract(left)).shiftRight(BigNumber(32).subtract(left))\n        );\n    } else if (BigNumber.isInstance(left)) {\n        state.stack.push(\n            new SAR(new SHL(right, BigNumber(32).subtract(left)), BigNumber(32).subtract(left))\n        );\n    } else {\n        state.stack.push(\n            new SAR(new SHL(right, new SUB(BigNumber(32), left)), new SUB(BigNumber(32), left))\n        );\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nconst parseMapping = (...items: any[]) => {\n    const mappings: any = [];\n    items.forEach((item2: any) => {\n        if (item2.name === 'SHA3' && item2.items) {\n            mappings.push(...parseMapping(...item2.items));\n        } else {\n            mappings.push(item2);\n        }\n    });\n    return mappings;\n};\n\nexport class MappingLoad {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly location: any;\n    readonly count: any;\n    readonly items: any;\n    readonly structlocation?: any;\n    readonly mappings: any;\n\n    constructor(mappings: any, location: any, items: any, count: any, structlocation?: any) {\n        this.name = 'MappingLoad';\n        this.wrapped = false;\n        this.location = location;\n        this.count = count;\n        this.items = items;\n        this.structlocation = structlocation;\n        this.mappings = mappings;\n    }\n\n    toString() {\n        let mappingName = 'mapping' + (this.count + 1);\n        if (this.location in this.mappings() && this.mappings()[this.location].name) {\n            mappingName = this.mappings()[this.location].name;\n        }\n        if (this.structlocation) {\n            return (\n                mappingName +\n                this.items.map((item: any) => '[' + stringify(item) + ']').join('') +\n                '[' +\n                this.structlocation.toString() +\n                ']'\n            );\n        } else {\n            return (\n                mappingName + this.items.map((item: any) => '[' + stringify(item) + ']').join('')\n            );\n        }\n    }\n}\n\nexport class SLOAD {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly location: any;\n    readonly variables: any;\n\n    constructor(location: any, variables: any) {\n        this.name = 'SLOAD';\n        this.wrapped = false;\n        this.location = location;\n        this.variables = variables;\n    }\n\n    toString() {\n        if (BigNumber.isInstance(this.location) && this.location.toString() in this.variables()) {\n            if (this.variables()[this.location.toString()].label) {\n                return this.variables()[this.location.toString()].label;\n            } else {\n                return (\n                    'var' + (Object.keys(this.variables()).indexOf(this.location.toString()) + 1)\n                );\n            }\n        } else {\n            return 'storage[' + stringify(this.location) + ']';\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const storeLocation = state.stack.pop();\n    if (storeLocation.name === 'SHA3') {\n        const mappingItems = parseMapping(...storeLocation.items);\n        const mappingLocation = mappingItems.find((mappingItem: any) =>\n            BigNumber.isInstance(mappingItem)\n        );\n        const mappingParts = mappingItems.filter(\n            (mappingItem: any) => !BigNumber.isInstance(mappingItem)\n        );\n        if (mappingLocation && mappingParts.length > 0) {\n            if (!(mappingLocation in state.mappings)) {\n                state.mappings[mappingLocation] = {\n                    name: false,\n                    structs: [],\n                    keys: [],\n                    values: []\n                };\n            }\n            state.mappings[mappingLocation].keys.push(mappingParts);\n            state.stack.push(\n                new MappingLoad(\n                    () => state.mappings,\n                    mappingLocation,\n                    mappingParts,\n                    Object.keys(state.mappings).indexOf(mappingLocation.toString())\n                )\n            );\n        } else {\n            state.stack.push(new SLOAD(storeLocation, () => state.variables));\n        }\n    } else if (\n        storeLocation.name === 'ADD' &&\n        storeLocation.left.name === 'SHA3' &&\n        BigNumber.isInstance(storeLocation.right)\n    ) {\n        const mappingItems = parseMapping(...storeLocation.left.items);\n        const mappingLocation = mappingItems.find((mappingItem: any) =>\n            BigNumber.isInstance(mappingItem)\n        );\n        const mappingParts = mappingItems.filter(\n            (mappingItem: any) => !BigNumber.isInstance(mappingItem)\n        );\n        if (mappingLocation && mappingParts.length > 0) {\n            if (!(mappingLocation in state.mappings)) {\n                state.mappings[mappingLocation] = {\n                    name: false,\n                    structs: [],\n                    keys: [],\n                    values: []\n                };\n            }\n            state.mappings[mappingLocation].keys.push(mappingParts);\n            state.stack.push(\n                new MappingLoad(\n                    () => state.mappings,\n                    mappingLocation,\n                    mappingParts,\n                    Object.keys(state.mappings).indexOf(mappingLocation.toString()),\n                    storeLocation.right\n                )\n            );\n        } else {\n            state.stack.push(new SLOAD(storeLocation, () => state.variables));\n        }\n    } else if (\n        storeLocation.name === 'ADD' &&\n        BigNumber.isInstance(storeLocation.left) &&\n        storeLocation.right.name === 'SHA3'\n    ) {\n        const mappingItems = parseMapping(...storeLocation.right.items);\n        const mappingLocation = mappingItems.find((mappingItem: any) =>\n            BigNumber.isInstance(mappingItem)\n        );\n        const mappingParts = mappingItems.filter(\n            (mappingItem: any) => !BigNumber.isInstance(mappingItem)\n        );\n        if (mappingLocation && mappingParts.length > 0) {\n            if (!(mappingLocation in state.mappings)) {\n                state.mappings[mappingLocation] = {\n                    name: false,\n                    structs: [],\n                    keys: [],\n                    values: []\n                };\n            }\n            state.mappings[mappingLocation].keys.push(mappingParts);\n            state.stack.push(\n                new MappingLoad(\n                    () => state.mappings,\n                    mappingLocation,\n                    mappingParts,\n                    Object.keys(state.mappings).indexOf(mappingLocation.toString()),\n                    storeLocation.left\n                )\n            );\n        } else {\n            state.stack.push(new SLOAD(storeLocation, () => state.variables));\n        }\n    } else {\n        state.stack.push(new SLOAD(storeLocation, () => state.variables));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\nimport { Variable } from './jumpi';\n\nconst parseMapping = (...items: any[]) => {\n    const mappings: any = [];\n    items.forEach((item2: any) => {\n        if (item2.name === 'SHA3' && item2.items) {\n            mappings.push(...parseMapping(...item2.items));\n        } else {\n            mappings.push(item2);\n        }\n    });\n    return mappings;\n};\n\nexport class MappingStore {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly location: any;\n    readonly count: any;\n    readonly items: any;\n    readonly data: any;\n    readonly structlocation?: any;\n    readonly mappings: any;\n\n    constructor(\n        mappings: any,\n        location: any,\n        items: any,\n        data: any,\n        count: any,\n        structlocation?: any\n    ) {\n        this.name = 'MappingStore';\n        this.wrapped = false;\n        this.location = location;\n        this.items = items;\n        this.data = data;\n        this.count = count;\n        this.structlocation = structlocation;\n        this.mappings = mappings;\n    }\n\n    toString() {\n        //console.log(this);\n        let mappingName = 'mapping' + (this.count + 1);\n        if (this.location in this.mappings() && this.mappings()[this.location].name) {\n            mappingName = this.mappings()[this.location].name;\n        }\n        if (\n            this.data.name === 'ADD' &&\n            this.data.right.name === 'MappingLoad' &&\n            stringify(this.data.right.location) === stringify(this.location)\n        ) {\n            console.log(this.items);\n            return (\n                mappingName +\n                this.items.map((item: any) => '[' + stringify(item) + ']').join('') +\n                ' += ' +\n                stringify(this.data.left) +\n                ';'\n            );\n        } else if (\n            this.data.name === 'ADD' &&\n            this.data.left.name === 'MappingLoad' &&\n            stringify(this.data.left.location) === stringify(this.location)\n        ) {\n            console.log(this.items);\n            return (\n                mappingName +\n                this.items.map((item: any) => '[' + stringify(item) + ']').join('') +\n                ' += ' +\n                stringify(this.data.right) +\n                ';'\n            );\n        } else if (\n            this.data.name === 'SUB' &&\n            this.data.left.name === 'MappingLoad' &&\n            stringify(this.data.left.location) === stringify(this.location)\n        ) {\n            return (\n                mappingName +\n                this.items.map((item: any) => '[' + stringify(item) + ']').join('') +\n                ' -= ' +\n                stringify(this.data.right) +\n                ';'\n            );\n        } else {\n            return (\n                mappingName +\n                this.items.map((item: any) => '[' + stringify(item) + ']').join('') +\n                ' = ' +\n                stringify(this.data) +\n                ';'\n            );\n        }\n    }\n}\n\nexport class SSTORE {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly location: any;\n    readonly data: any;\n    readonly variables: any;\n\n    constructor(location: any, data: any, variables: any) {\n        this.name = 'SSTORE';\n        this.wrapped = true;\n        this.location = location;\n        this.data = data;\n        this.variables = variables;\n        if (BigNumber.isInstance(this.location) && this.location.toString() in this.variables()) {\n            this.variables()[this.location.toString()].types.push(() => this.data.type);\n        } else if (\n            BigNumber.isInstance(this.location) &&\n            !(this.location.toString() in this.variables())\n        ) {\n            this.variables()[this.location.toString()] = new Variable(false, [\n                () => this.data.type\n            ]);\n        }\n    }\n\n    toString() {\n        let variableName = 'storage[' + stringify(this.location) + ']';\n        if (BigNumber.isInstance(this.location) && this.location.toString() in this.variables()) {\n            if (this.variables()[this.location.toString()].label) {\n                variableName = this.variables()[this.location.toString()].label;\n            } else {\n                variableName =\n                    'var' + (Object.keys(this.variables()).indexOf(this.location.toString()) + 1);\n            }\n        }\n        if (\n            this.data.name === 'ADD' &&\n            this.data.right.name === 'SLOAD' &&\n            stringify(this.data.right.location) === stringify(this.location)\n        ) {\n            return variableName + ' += ' + stringify(this.data.left) + ';';\n        } else if (\n            this.data.name === 'SUB' &&\n            this.data.left.name === 'SLOAD' &&\n            stringify(this.data.left.location) === stringify(this.location)\n        ) {\n            return variableName + ' -= ' + stringify(this.data.right) + ';';\n        } else {\n            return variableName + ' = ' + stringify(this.data) + ';';\n        }\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const storeLocation = state.stack.pop();\n    const storeData = state.stack.pop();\n    if (storeLocation.name === 'SHA3') {\n        const mappingItems = parseMapping(...storeLocation.items);\n        const mappingLocation = mappingItems.find((mappingItem: any) =>\n            BigNumber.isInstance(mappingItem)\n        );\n        const mappingParts = mappingItems.filter(\n            (mappingItem: any) => !BigNumber.isInstance(mappingItem)\n        );\n        if (mappingLocation && mappingParts.length > 0) {\n            if (!(mappingLocation in state.mappings)) {\n                state.mappings[mappingLocation] = {\n                    name: false,\n                    structs: [],\n                    keys: [],\n                    values: []\n                };\n            }\n            state.mappings[mappingLocation].keys.push(mappingParts);\n            state.mappings[mappingLocation].values.push(storeData);\n            state.instructions.push(\n                new MappingStore(\n                    () => state.mappings,\n                    mappingLocation,\n                    mappingParts,\n                    storeData,\n                    Object.keys(state.mappings).indexOf(mappingLocation.toString())\n                )\n            );\n        } else {\n            state.instructions.push(new SSTORE(storeLocation, storeData, () => state.variables));\n        }\n    } else if (\n        storeLocation.name === 'ADD' &&\n        storeLocation.left.name === 'SHA3' &&\n        BigNumber.isInstance(storeLocation.right)\n    ) {\n        const mappingItems = parseMapping(...storeLocation.left.items);\n        const mappingLocation = mappingItems.find((mappingItem: any) =>\n            BigNumber.isInstance(mappingItem)\n        );\n        const mappingParts = mappingItems.filter(\n            (mappingItem: any) => !BigNumber.isInstance(mappingItem)\n        );\n        if (mappingLocation && mappingParts.length > 0) {\n            if (!(mappingLocation in state.mappings)) {\n                state.mappings[mappingLocation] = {\n                    name: false,\n                    structs: [],\n                    keys: [],\n                    values: []\n                };\n            }\n            state.mappings[mappingLocation].keys.push(mappingParts);\n            state.instructions.push(\n                new MappingStore(\n                    () => state.mappings,\n                    mappingLocation,\n                    mappingParts,\n                    storeData,\n                    Object.keys(state.mappings).indexOf(mappingLocation.toString()),\n                    storeLocation.right\n                )\n            );\n        } else {\n            state.instructions.push(new SSTORE(storeLocation, storeData, () => state.variables));\n        }\n    } else if (\n        storeLocation.name === 'ADD' &&\n        BigNumber.isInstance(storeLocation.left) &&\n        storeLocation.right.name === 'SHA3'\n    ) {\n        const mappingItems = parseMapping(...storeLocation.right.items);\n        const mappingLocation = mappingItems.find((mappingItem: any) =>\n            BigNumber.isInstance(mappingItem)\n        );\n        const mappingParts = mappingItems.filter(\n            (mappingItem: any) => !BigNumber.isInstance(mappingItem)\n        );\n        if (mappingLocation && mappingParts.length > 0) {\n            if (!(mappingLocation in state.mappings)) {\n                state.mappings[mappingLocation] = {\n                    name: false,\n                    structs: [],\n                    keys: [],\n                    values: []\n                };\n            }\n            state.mappings[mappingLocation].keys.push(mappingParts);\n            state.instructions.push(\n                new MappingStore(\n                    () => state.mappings,\n                    mappingLocation,\n                    mappingParts,\n                    storeData,\n                    Object.keys(state.mappings).indexOf(mappingLocation.toString()),\n                    storeLocation.left\n                )\n            );\n        } else {\n            state.instructions.push(new SSTORE(storeLocation, storeData, () => state.variables));\n        }\n    } else if (\n        false &&\n        BigNumber.isInstance(storeLocation) &&\n        storeLocation.toString() in state.variables &&\n        storeData.type &&\n        !state.variables[storeLocation.toString()].types.includes(storeData.type)\n    ) {\n        state.instructions.push(new SSTORE(storeLocation, storeData, () => state.variables));\n        state.variables[storeLocation.toString()].types.push(storeData.type);\n    } else {\n        state.instructions.push(new SSTORE(storeLocation, storeData, () => state.variables));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport stringify from '../utils/stringify';\n\nexport class STATICCALL {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly gas: any;\n    readonly address: any;\n    readonly memoryStart: any;\n    readonly memoryLength: any;\n    readonly outputStart: any;\n    readonly outputLength: any;\n\n    constructor(\n        gas: any,\n        address: any,\n        memoryStart: any,\n        memoryLength: any,\n        outputStart: any,\n        outputLength: any\n    ) {\n        this.name = 'STATICCALL';\n        this.wrapped = true;\n        this.gas = gas;\n        this.address = address;\n        this.memoryStart = memoryStart;\n        this.memoryLength = memoryLength;\n        this.outputStart = outputStart;\n        this.outputLength = outputLength;\n    }\n\n    toString() {\n        return (\n            'staticcall(' +\n            stringify(this.gas) +\n            ',' +\n            stringify(this.address) +\n            ',' +\n            stringify(this.memoryStart) +\n            ',' +\n            stringify(this.memoryLength) +\n            ',' +\n            stringify(this.outputStart) +\n            ',' +\n            stringify(this.outputLength) +\n            ')'\n        );\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const gas = state.stack.pop();\n    const address = state.stack.pop();\n    const memoryStart = state.stack.pop();\n    const memoryLength = state.stack.pop();\n    const outputStart = state.stack.pop();\n    const outputLength = state.stack.pop();\n    state.stack.push(\n        new STATICCALL(gas, address, memoryStart, memoryLength, outputStart, outputLength)\n    );\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class STOP {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'STOP';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'return;';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.halted = true;\n    state.instructions.push(new STOP());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class SUB {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'SUB';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' - ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.subtract(right));\n    } else {\n        state.stack.push(new SUB(left, right));\n    }\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const swapLocation = parseInt(opcode.name.replace('SWAP', ''), 10);\n    state.stack.swap(swapLocation);\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\n\nexport class TIMESTAMP {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n\n    constructor() {\n        this.name = 'TIMESTAMP';\n        this.wrapped = false;\n    }\n\n    toString() {\n        return 'block.timestamp';\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    state.stack.push(new TIMESTAMP());\n};\n","import EVM from '../classes/evm.class';\nimport Opcode from '../interfaces/opcode.interface';\nimport * as BigNumber from '../../node_modules/big-integer';\nimport stringify from '../utils/stringify';\n\nexport class XOR {\n    readonly name: string;\n    readonly type?: string;\n    readonly wrapped: boolean;\n    readonly left: any;\n    readonly right: any;\n\n    constructor(left: any, right: any) {\n        this.name = 'XOR';\n        this.wrapped = true;\n        this.left = left;\n        this.right = right;\n    }\n\n    toString() {\n        return stringify(this.left) + ' ^ ' + stringify(this.right);\n    }\n}\n\nexport default (opcode: Opcode, state: EVM): void => {\n    const left = state.stack.pop();\n    const right = state.stack.pop();\n    if (BigNumber.isInstance(left) && BigNumber.isInstance(right)) {\n        state.stack.push(left.xor(right));\n    } else {\n        state.stack.push(new XOR(left, right));\n    }\n};\n","export function hex2a(hexx: any) {\n    const hex = hexx.toString();\n    let str = '';\n    for (let i = 0; i < hex.length && hex.substr(i, 2) !== '00'; i += 2) {\n        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    }\n    return str;\n}\n\nexport function pad32(data: string) {\n    if (data.length >= 64) {\n        return data;\n    } else {\n        return '0'.repeat(64 - data.length) + data;\n    }\n}\n\nexport function isHex(h: any) {\n    return /^[0-9a-f-]+$/.test(h);\n}\n\nexport default (data: any) => {\n    if (isHex(data)) {\n        const pieces = data.match(/.{1,64}/g);\n        if (pieces.length === 3 && parseInt(pieces[0], 16) === 32) {\n            const stringLength = parseInt(pieces[1], 16) * 2;\n            const stringData = hex2a(pieces[2].substr(0, stringLength));\n            return '\"' + stringData + '\"';\n        } else if (!isNaN(parseInt(data, 16))) {\n            return parseInt(data, 16).toString();\n        } else {\n            return data;\n        }\n    } else {\n        return data;\n    }\n};\n","import STOP from '../opcodes/stop';\nimport ADD from '../opcodes/add';\nimport MUL from '../opcodes/mul';\nimport SUB from '../opcodes/sub';\nimport DIV from '../opcodes/div';\nimport MOD from '../opcodes/mod';\nimport ADDMOD from '../opcodes/addmod';\nimport MULMOD from '../opcodes/mulmod';\nimport EXP from '../opcodes/exp';\nimport SIGNEXTEND from '../opcodes/signextend';\nimport LT from '../opcodes/lt';\nimport GT from '../opcodes/gt';\nimport EQ from '../opcodes/eq';\nimport ISZERO from '../opcodes/iszero';\nimport AND from '../opcodes/and';\nimport OR from '../opcodes/or';\nimport XOR from '../opcodes/xor';\nimport NOT from '../opcodes/not';\nimport BYTE from '../opcodes/byte';\nimport SHL from '../opcodes/shl';\nimport SHR from '../opcodes/shr';\nimport SAR from '../opcodes/sar';\nimport SHA3 from '../opcodes/sha3';\nimport ADDRESS from '../opcodes/address';\nimport BALANCE from '../opcodes/balance';\nimport ORIGIN from '../opcodes/origin';\nimport CALLER from '../opcodes/caller';\nimport CALLVALUE from '../opcodes/callvalue';\nimport CALLDATALOAD from '../opcodes/calldataload';\nimport CALLDATASIZE from '../opcodes/calldatasize';\nimport CALLDATACOPY from '../opcodes/calldatacopy';\nimport CODESIZE from '../opcodes/codesize';\nimport CODECOPY from '../opcodes/codecopy';\nimport GASPRICE from '../opcodes/gasprice';\nimport EXTCODESIZE from '../opcodes/extcodesize';\nimport EXTCODECOPY from '../opcodes/extcodecopy';\nimport RETURNDATASIZE from '../opcodes/returndatasize';\nimport RETURNDATACOPY from '../opcodes/returndatacopy';\nimport EXTCODEHASH from '../opcodes/extcodehash';\nimport BLOCKHASH from '../opcodes/blockhash';\nimport COINBASE from '../opcodes/coinbase';\nimport TIMESTAMP from '../opcodes/timestamp';\nimport NUMBER from '../opcodes/number';\nimport DIFFICULTY from '../opcodes/difficulty';\nimport GASLIMIT from '../opcodes/gaslimit';\nimport POP from '../opcodes/pop';\nimport MLOAD from '../opcodes/mload';\nimport MSTORE from '../opcodes/mstore';\nimport SLOAD from '../opcodes/sload';\nimport SSTORE from '../opcodes/sstore';\nimport JUMP from '../opcodes/jump';\nimport JUMPI from '../opcodes/jumpi';\nimport PC from '../opcodes/pc';\nimport MSIZE from '../opcodes/msize';\nimport GAS from '../opcodes/gas';\nimport JUMPDEST from '../opcodes/jumpdest';\nimport PUSH from '../opcodes/push';\nimport DUP from '../opcodes/dup';\nimport SWAP from '../opcodes/swap';\nimport LOG from '../opcodes/log';\nimport CREATE from '../opcodes/create';\nimport CALL from '../opcodes/call';\nimport CALLCODE from '../opcodes/callcode';\nimport RETURN from '../opcodes/return';\nimport DELEGATECALL from '../opcodes/delegatecall';\nimport CREATE2 from '../opcodes/create2';\nimport STATICCALL from '../opcodes/staticcall';\nimport REVERT from '../opcodes/revert';\nimport INVALID from '../opcodes/invalid';\nimport SELFDESTRUCT from '../opcodes/selfdestruct';\n\nexport default {\n    STOP,\n    ADD,\n    MUL,\n    SUB,\n    DIV,\n    SDIV: DIV,\n    MOD,\n    SMOD: MOD,\n    ADDMOD,\n    MULMOD,\n    EXP,\n    SIGNEXTEND,\n    LT,\n    GT,\n    SLT: LT,\n    SGT: GT,\n    EQ,\n    ISZERO,\n    AND,\n    OR,\n    XOR,\n    NOT,\n    BYTE,\n    SHL,\n    SHR,\n    SAR,\n    SHA3,\n    ADDRESS,\n    BALANCE,\n    ORIGIN,\n    CALLER,\n    CALLVALUE,\n    CALLDATALOAD,\n    CALLDATASIZE,\n    CALLDATACOPY,\n    CODESIZE,\n    CODECOPY,\n    GASPRICE,\n    EXTCODESIZE,\n    EXTCODECOPY,\n    RETURNDATASIZE,\n    RETURNDATACOPY,\n    EXTCODEHASH,\n    BLOCKHASH,\n    COINBASE,\n    TIMESTAMP,\n    NUMBER,\n    DIFFICULTY,\n    GASLIMIT,\n    POP,\n    MLOAD,\n    MSTORE,\n    MSTORE8: MSTORE,\n    SLOAD,\n    SSTORE,\n    JUMP,\n    JUMPI,\n    PC,\n    MSIZE,\n    GAS,\n    JUMPDEST,\n    PUSH1: PUSH,\n    PUSH2: PUSH,\n    PUSH3: PUSH,\n    PUSH4: PUSH,\n    PUSH5: PUSH,\n    PUSH6: PUSH,\n    PUSH7: PUSH,\n    PUSH8: PUSH,\n    PUSH9: PUSH,\n    PUSH10: PUSH,\n    PUSH11: PUSH,\n    PUSH12: PUSH,\n    PUSH13: PUSH,\n    PUSH14: PUSH,\n    PUSH15: PUSH,\n    PUSH16: PUSH,\n    PUSH17: PUSH,\n    PUSH18: PUSH,\n    PUSH19: PUSH,\n    PUSH20: PUSH,\n    PUSH21: PUSH,\n    PUSH22: PUSH,\n    PUSH23: PUSH,\n    PUSH24: PUSH,\n    PUSH25: PUSH,\n    PUSH26: PUSH,\n    PUSH27: PUSH,\n    PUSH28: PUSH,\n    PUSH29: PUSH,\n    PUSH30: PUSH,\n    PUSH31: PUSH,\n    PUSH32: PUSH,\n    DUP1: DUP,\n    DUP2: DUP,\n    DUP3: DUP,\n    DUP4: DUP,\n    DUP5: DUP,\n    DUP6: DUP,\n    DUP7: DUP,\n    DUP8: DUP,\n    DUP9: DUP,\n    DUP10: DUP,\n    DUP11: DUP,\n    DUP12: DUP,\n    DUP13: DUP,\n    DUP14: DUP,\n    DUP15: DUP,\n    DUP16: DUP,\n    SWAP1: SWAP,\n    SWAP2: SWAP,\n    SWAP3: SWAP,\n    SWAP4: SWAP,\n    SWAP5: SWAP,\n    SWAP6: SWAP,\n    SWAP7: SWAP,\n    SWAP8: SWAP,\n    SWAP9: SWAP,\n    SWAP10: SWAP,\n    SWAP11: SWAP,\n    SWAP12: SWAP,\n    SWAP13: SWAP,\n    SWAP14: SWAP,\n    SWAP15: SWAP,\n    SWAP16: SWAP,\n    LOG0: LOG,\n    LOG1: LOG,\n    LOG2: LOG,\n    LOG3: LOG,\n    LOG4: LOG,\n    CREATE,\n    CALL,\n    CALLCODE,\n    RETURN,\n    DELEGATECALL,\n    CREATE2,\n    STATICCALL,\n    REVERT,\n    INVALID,\n    SELFDESTRUCT\n};\n","import * as BigNumber from '../../node_modules/big-integer';\n\nexport default (item: any) => {\n    if (BigNumber.isInstance(item)) {\n        return item.toString(16);\n    } else if (!item.wrapped) {\n        return item.toString();\n    } else {\n        return '(' + item.toString() + ')';\n    }\n};\n","export default (stateEvents: any, events: string[]) => {\n    const stateEventValues = Object.keys(stateEvents).map((key: string) => stateEvents[key]);\n    let output = '';\n\n    events.forEach((event: string) => {\n        const eventName = event.split('(')[0];\n        const eventArguments = event\n            .replace(eventName, '')\n            .substring(1)\n            .slice(0, -1);\n        output += 'event ';\n        if (eventArguments) {\n            output += eventName + '(';\n            output += eventArguments\n                .split(',')\n                .map((a: string, i: number) => {\n                    const stateEvent = stateEventValues.find((e: any) => e.label === event);\n                    if (stateEvent && i < stateEvent.indexedCount) {\n                        return a + ' indexed _arg' + i;\n                    } else {\n                        return a + ' _arg' + i;\n                    }\n                })\n                .join(', ');\n            output += ');';\n        } else {\n            output += event;\n        }\n        output += '\\n';\n    });\n\n    if (events.length > 0) {\n        output += '\\n';\n    }\n\n    return output;\n};\n","import stringifyInstructions from './stringifyInstructions';\n// import * as functionHashes from '../../data/functionHashes.json';\n\nexport default (functionName: string, functionInstance: any, functionHashes: {[s: string]: string}): string => {\n    let output = '';\n    output += 'function ';\n    if (functionName in functionHashes) {\n        const fullFunction = (functionHashes as any)[functionName];\n        const fullFunctionName = fullFunction.split('(')[0];\n        const fullFunctionArguments = fullFunction\n            .replace(fullFunctionName, '')\n            .substring(1)\n            .slice(0, -1);\n        if (fullFunctionArguments) {\n            output += fullFunctionName + '(';\n            output += fullFunctionArguments\n                .split(',')\n                .map((a: string, i: number) => a + ' _arg' + i)\n                .join(', ');\n            output += ')';\n        } else {\n            output += fullFunction;\n        }\n    } else {\n        output += functionName + '()';\n    }\n    output += ' ' + functionInstance.visibility;\n    if (functionInstance.constant) {\n        output += ' view';\n    }\n    if (functionInstance.payable) {\n        output += ' payable';\n    }\n    if (functionInstance.returns.length > 0) {\n        output += ' returns (' + functionInstance.returns.join(', ') + ')';\n    }\n    output += ' {\\n';\n    output += stringifyInstructions(functionInstance.items, 4);\n    output += '}\\n\\n';\n    return output;\n};\n","export const stringifyInstructions = (instructionTree: any, indentation = 0): string => {\n    let instructionLines = '';\n    instructionTree.forEach((instruction: any) => {\n        if (instruction.name === 'JUMPI' && instruction.false) {\n            const condition = instruction.toString();\n            const falseInstructions = instruction.false.filter((i: any) => i.debugLevel > 0);\n            if (falseInstructions.length === 1 && falseInstructions[0].name === 'JUMPI') {\n                instructionLines += ' '.repeat(indentation) + 'if' + condition + ' {\\n';\n                instructionLines += stringifyInstructions(instruction.true, indentation + 4);\n                instructionLines += ' '.repeat(indentation) + '} else ';\n                const elseOrElseIf = stringifyInstructions(instruction.false, indentation);\n                if (elseOrElseIf.trim().startsWith('if')) {\n                    instructionLines += elseOrElseIf.trim() + '\\n';\n                } else {\n                    instructionLines +=\n                        '{\\n' +\n                        elseOrElseIf\n                            .split('\\n')\n                            .filter(l => l)\n                            .map(l => ' '.repeat(4) + l)\n                            .join('\\n');\n                    instructionLines += '\\n' + ' '.repeat(indentation) + '}\\n';\n                }\n            } else {\n                instructionLines += ' '.repeat(indentation) + 'if' + condition + ' {\\n';\n                instructionLines += stringifyInstructions(instruction.true, indentation + 4);\n                instructionLines += ' '.repeat(indentation) + '} else {\\n';\n                instructionLines += stringifyInstructions(instruction.false, indentation + 4);\n                instructionLines += ' '.repeat(indentation) + '}\\n';\n            }\n        } else {\n            instructionLines += ' '.repeat(indentation) + instruction.toString() + '\\n';\n        }\n    });\n    return instructionLines;\n};\n\nexport default stringifyInstructions;\n","const stringifyMapping = (mapping: any) => {\n    const mappingKey: string[] = [];\n    const mappingValue: string[] = [];\n    let deepMapping = false;\n    mapping.keys\n        .filter((mappingChild: any) => mappingChild.length > 0)\n        .forEach((mappingChild: any) => {\n            if (\n                mappingChild.length > 0 &&\n                mappingChild[0].type &&\n                !mappingKey.includes(mappingChild[0].type)\n            ) {\n                mappingKey.push(mappingChild[0].type);\n            }\n            if (mappingChild.length > 1 && !deepMapping) {\n                deepMapping = true;\n                mappingValue.push(\n                    stringifyMapping({\n                        name: mapping.name,\n                        structs: mapping.structs,\n                        keys: mapping.keys.map((items: any) => {\n                            items.shift();\n                            return items;\n                        }),\n                        values: mapping.values\n                    })\n                );\n            } else if (mappingChild.length === 1 && !deepMapping) {\n                mapping.values.forEach((mappingChild2: any) => {\n                    if (mappingChild2.type && !mappingValue.includes(mappingChild2.type)) {\n                        mappingValue.push(mappingChild2.type);\n                    }\n                });\n            }\n        });\n    if (mappingKey.length === 0) {\n        mappingKey.push('unknown');\n    }\n    if (mapping.structs.length > 0 && mappingValue.length === 0) {\n        mappingValue.push(mapping.name + 'Struct');\n    } else if (mappingValue.length === 0) {\n        mappingValue.push('unknown');\n    }\n    return 'mapping (' + mappingKey.join('|') + ' => ' + mappingValue.join('|') + ')';\n};\n\nexport default (mappings: any) => {\n    let output = '';\n\n    Object.keys(mappings).forEach((key: string, index: number) => {\n        const mapping = mappings[key];\n        if (mapping.name) {\n            output += stringifyMapping(mapping) + ' public ' + mapping.name + ';';\n        } else {\n            output += stringifyMapping(mapping) + ' mapping' + (index + 1) + ';';\n        }\n        output += '\\n';\n    });\n\n    if (Object.keys(mappings).length > 0) {\n        output += '\\n';\n    }\n\n    return output;\n};\n","export default (mappings: any) => {\n    let output = '';\n\n    Object.keys(mappings)\n        .filter((key: any) => mappings[key].structs.length > 0)\n        .forEach((key: string, index: number) => {\n            const mapping = mappings[key];\n            output += 'struct ' + mapping.name + 'Struct {\\n';\n            mapping.structs.forEach((struct: any) => {\n                output += '    ' + struct.toString() + ';\\n';\n            });\n            output += '}\\n\\n';\n        });\n\n    return output;\n};\n","export default (variables: any) => {\n    let output = '';\n\n    Object.keys(variables).forEach((key: string, index: number) => {\n        const variable = variables[key];\n        const types = variable.types\n            .map((type: any) => {\n                if (typeof type === 'function') {\n                    return type();\n                } else {\n                    return type;\n                }\n            })\n            .filter((type: any) => type);\n        if (types.length === 0) {\n            types.push('unknown');\n        }\n        if (variable.label) {\n            output += [...new Set(types)].join('|') + ' public ' + variable.label + ';';\n        } else {\n            output += [...new Set(types)].join('|') + ' var' + (index + 1).toString() + ';';\n            index++;\n        }\n        output += '\\n';\n    });\n\n    if (Object.keys(variables).length > 0) {\n        output += '\\n';\n    }\n\n    return output;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(341);\n"],"names":["root","factory","exports","module","define","amd","self","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseValue","parseBase","BigInteger","value","sign","this","isSmall","SmallInteger","NativeBigInt","isPrecise","n","Math","floor","arrayToSmall","trim","compareAbs","createArray","x","truncate","ceil","add","a","b","sum","l_a","l_b","r","carry","base","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","concat","multiplyKaratsuba","y","max","slice","d","c","ac","bd","abcd","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","negate","abs","comparison","quotientDigit","shift","result","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","next","bigInt","modPow","prototype","Object","create","plus","subtractAny","minus","small","multiply","l1","l2","times","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","modInv","isPositive","isOdd","compare","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","undefined","bits","bitLength","logN","log","toJSNumber","t","isProbablePrime","iterations","rng","randBetween","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","xor","LOBMASK_I","roughLOB","integerLogarithm","p","e","min","gcd","text","toLowerCase","absBase","alphabetValues","digits","parseBaseFromArray","val","toBase","apply","map","valueOf","neg","Number","out","left","digit","toBaseString","stringify","parseStringValue","split","decimalPlace","test","parseNumberValue","toArray","str","toJSON","parseInt","minusOne","lcm","isInstance","usedRNG","random","low","range","restricted","top","fromArray","hasOwnProperty","base64","ieee754","customInspectSymbol","Symbol","Buffer","K_MAX_LENGTH","createBuffer","RangeError","buf","setPrototypeOf","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","actual","write","fromString","ArrayBuffer","isView","arrayView","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","obj","isBuffer","checked","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","list","pos","set","swap16","swap32","swap64","toLocaleString","inspect","replace","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","base64clean","src","dst","table","i16","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","NaN","rt","isNaN","LN2","EVM","functionHashes","eventHashes","pc","memory","opcodes","instructions","storage","jumps","mappings","layer","halted","functions","variables","events","gasUsed","conditions","clone","getBytecode","getOpcodes","index","currentOp","opcode","codes","startsWith","pushDataLength","pushData","getFunctions","Set","filter","hash","getEvents","containsOpcode","names","currentOpcode","JUMPDEST","STOP","RETURN","REVERT","INVALID","SELFDESTRUCT","PUSH1","PUSH32","getJumpDestinations","getSwarmHash","match","getABI","abi","parse","keys","forEach","key","item","label","payable","constant","reset","decompile","instructionTree","functionName","isERC165","every","Stack","elements","pop","duplicate","position","secondPosition","firstValue","secondValue","parseSingle","substring","BigNumber","transactionObject","blockHash","blockNumber","gas","gasPrice","to","setInput","getFunctionHash","getFunction","functionHash","getFunctionName","rawFunction","getRawArguments","getArguments","descriptive","functionArguments","rawFunctionArguments","functionArgumentType","functionArgument","location","isContractCreation","Transaction","ADD","MUL","SUB","DIV","SDIV","MOD","SMOD","ADDMOD","MULMOD","EXP","SIGNEXTEND","LT","GT","SLT","SGT","EQ","ISZERO","AND","OR","XOR","NOT","BYTE","SHL","SHR","SAR","SHA3","ADDRESS","BALANCE","ORIGIN","CALLER","CALLVALUE","CALLDATALOAD","CALLDATASIZE","CALLDATACOPY","CODESIZE","CODECOPY","GASPRICE","EXTCODESIZE","EXTCODECOPY","RETURNDATASIZE","RETURNDATACOPY","EXTCODEHASH","BLOCKHASH","COINBASE","TIMESTAMP","NUMBER","DIFFICULTY","GASLIMIT","POP","MLOAD","MSTORE","MSTORE8","SLOAD","SSTORE","JUMP","JUMPI","PC","MSIZE","GAS","PUSH2","PUSH3","PUSH4","PUSH5","PUSH6","PUSH7","PUSH8","PUSH9","PUSH10","PUSH11","PUSH12","PUSH13","PUSH14","PUSH15","PUSH16","PUSH17","PUSH18","PUSH19","PUSH20","PUSH21","PUSH22","PUSH23","PUSH24","PUSH25","PUSH26","PUSH27","PUSH28","PUSH29","PUSH30","PUSH31","DUP1","DUP2","DUP3","DUP4","DUP5","DUP6","DUP7","DUP8","DUP9","DUP10","DUP11","DUP12","DUP13","DUP14","DUP15","DUP16","SWAP1","SWAP2","SWAP3","SWAP4","SWAP5","SWAP6","SWAP7","SWAP8","SWAP9","SWAP10","SWAP11","SWAP12","SWAP13","SWAP14","SWAP15","SWAP16","LOG0","LOG1","LOG2","LOG3","LOG4","CREATE","CALL","CALLCODE","DELEGATECALL","CREATE2","STATICCALL","right","wrapped","state","address","number","memoryStart","memoryLength","outputStart","outputLength","throwOnFail","startLocation","copyLength","memoryLocation","duplicateLocation","SIG","repeat","equal","bad","valid","jumpLocation","jumpLocationData","find","o","jumpIndex","updateCallDataLoad","types","argNumber","findReturns","returns","items","deepReturns","TopLevelFunction","visibility","REQUIRE","condition","argumentTypes","returnItem","Variable","ifTrue","ifFalse","skipped","true","false","jumpCondition","trueClone","trueCloneTree","falseClone","falseCloneTree","functionClone","functionCloneTree","fullFunction","structlocation","structs","LOG","topics","eventName","topicsCount","eventTopic","indexedCount","anonymous","storeLocation","storeData","static","hex2a","returnDataPosition","returnDataSize","memoryPosition","parseMapping","item2","MappingLoad","count","mappingName","mappingItems","mappingLocation","mappingItem","mappingParts","values","MappingStore","variableName","swapLocation","hexx","hex","isHex","h","pieces","stringLength","stateEvents","stateEventValues","event","eventArguments","stateEvent","functionInstance","fullFunctionName","fullFunctionArguments","stringifyInstructions","indentation","instructionLines","instruction","falseInstructions","debugLevel","elseOrElseIf","stringifyMapping","mapping","mappingKey","mappingValue","deepMapping","mappingChild","mappingChild2","struct","variable","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","nmd","paths","children"],"sourceRoot":""}